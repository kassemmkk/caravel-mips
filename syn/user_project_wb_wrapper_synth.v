/* Generated by Yosys 0.46 (git sha1 e97731b9dda91fa5fa53ed87df7c34163ba59a41, clang++ 17.0.6 -fPIC -O3) */

(* dynports =  1  *)
(* hdlname = "spi_master" *)
(* src = "verilog/rtl/periph/spi_master.v:50.1-187.10" *)
module \$paramod$1b57ab934979e1dcff9d7d7aa75fd3de5f50b91e\spi_master (clk, resetb, CPOL, CPHA, clk_divider, enable, go, datai, datao, busy, done, dout, din, csb, sclk);
  (* src = "verilog/rtl/periph/spi_master.v:124.4-186.7" *)
  wire _000_;
  (* src = "verilog/rtl/periph/spi_master.v:124.4-186.7" *)
  wire [7:0] _001_;
  (* src = "verilog/rtl/periph/spi_master.v:124.4-186.7" *)
  wire _002_;
  (* src = "verilog/rtl/periph/spi_master.v:124.4-186.7" *)
  wire _003_;
  (* src = "verilog/rtl/periph/spi_master.v:124.4-186.7" *)
  wire [4:0] _004_;
  (* src = "verilog/rtl/periph/spi_master.v:124.4-186.7" *)
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  (* src = "verilog/rtl/periph/spi_master.v:109.14-109.74" *)
  wire _010_;
  (* src = "verilog/rtl/periph/spi_master.v:117.15-117.42" *)
  wire _011_;
  (* src = "verilog/rtl/periph/spi_master.v:118.14-118.61" *)
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  (* src = "verilog/rtl/periph/spi_master.v:59.15-59.19" *)
  input CPHA;
  wire CPHA;
  (* src = "verilog/rtl/periph/spi_master.v:58.15-58.19" *)
  input CPOL;
  wire CPOL;
  (* src = "verilog/rtl/periph/spi_master.v:65.15-65.19" *)
  output busy;
  reg busy;
  (* src = "verilog/rtl/periph/spi_master.v:56.15-56.18" *)
  input clk;
  wire clk;
  (* src = "verilog/rtl/periph/spi_master.v:74.34-74.43" *)
  reg [7:0] clk_count;
  (* src = "verilog/rtl/periph/spi_master.v:60.39-60.50" *)
  input [7:0] clk_divider;
  wire [7:0] clk_divider;
  (* src = "verilog/rtl/periph/spi_master.v:70.15-70.18" *)
  output csb;
  reg csb;
  (* src = "verilog/rtl/periph/spi_master.v:63.44-63.49" *)
  input [7:0] datai;
  wire [7:0] datai;
  (* src = "verilog/rtl/periph/spi_master.v:64.45-64.50" *)
  output [7:0] datao;
  wire [7:0] datao;
  (* src = "verilog/rtl/periph/spi_master.v:69.32-69.35" *)
  output din;
  wire din;
  (* src = "verilog/rtl/periph/spi_master.v:66.15-66.19" *)
  output done;
  reg done;
  (* src = "verilog/rtl/periph/spi_master.v:68.31-68.35" *)
  input dout;
  wire dout;
  (* src = "verilog/rtl/periph/spi_master.v:61.15-61.21" *)
  input enable;
  wire enable;
  (* src = "verilog/rtl/periph/spi_master.v:62.15-62.17" *)
  input go;
  wire go;
  (* src = "verilog/rtl/periph/spi_master.v:76.9-76.14" *)
  wire pulse;
  (* src = "verilog/rtl/periph/spi_master.v:57.15-57.21" *)
  input resetb;
  wire resetb;
  (* src = "verilog/rtl/periph/spi_master.v:71.15-71.19" *)
  output sclk;
  reg sclk;
  (* src = "verilog/rtl/periph/spi_master.v:95.28-95.39" *)
  reg [4:0] shift_count;
  (* src = "verilog/rtl/periph/spi_master.v:77.11-77.16" *)
  reg state;
  (* src = "verilog/rtl/periph/spi_master.v:99.9-99.13" *)
  wire stop;
  (* src = "verilog/rtl/periph/spi_master.v:101.9-101.15" *)
  reg stop_s;
  assign _038_ = ~shift_count[4];
  assign _039_ = ~(shift_count[3] & shift_count[2]);
  assign _040_ = shift_count[1] & shift_count[0];
  assign _041_ = _040_ & ~(_039_);
  assign _042_ = _038_ & ~(_041_);
  assign stop = ~_042_;
  assign _002_ = ~state;
  assign _043_ = ~(clk_divider[1] ^ clk_count[0]);
  assign _044_ = ~(clk_count[1] ^ clk_count[0]);
  assign _045_ = ~(_044_ ^ clk_divider[2]);
  assign _046_ = _045_ | _043_;
  assign _047_ = ~(clk_count[1] & clk_count[0]);
  assign _048_ = _047_ ^ clk_count[2];
  assign _049_ = ~(_048_ ^ clk_divider[3]);
  assign _050_ = clk_count[2] & ~(_047_);
  assign _051_ = ~(_050_ ^ clk_count[3]);
  assign _052_ = ~(_051_ ^ clk_divider[4]);
  assign _053_ = _052_ | _049_;
  assign _054_ = _053_ | _046_;
  assign _055_ = ~clk_count[4];
  assign _056_ = clk_count[3] & clk_count[2];
  assign _057_ = _056_ & ~(_047_);
  assign _058_ = _057_ ^ _055_;
  assign _059_ = ~(_058_ ^ clk_divider[5]);
  assign _060_ = _057_ & ~(_055_);
  assign _061_ = ~(_060_ ^ clk_count[5]);
  assign _062_ = ~(_061_ ^ clk_divider[6]);
  assign _063_ = _062_ | _059_;
  assign _064_ = ~(clk_count[5] & clk_count[4]);
  assign _065_ = _064_ | ~(_057_);
  assign _066_ = _065_ ^ clk_count[6];
  assign _067_ = ~(_066_ ^ clk_divider[7]);
  assign _068_ = clk_count[6] & ~(_065_);
  assign _069_ = _068_ ^ clk_count[7];
  assign _070_ = _069_ | _067_;
  assign _071_ = _070_ | _063_;
  assign _072_ = _071_ | _054_;
  assign pulse = enable & ~(_072_);
  assign _073_ = ~csb;
  assign _074_ = _042_ & ~(_073_);
  assign _075_ = pulse & ~(_002_);
  assign _076_ = ~(_075_ & _074_);
  assign _013_ = _042_ | _002_;
  assign _014_ = pulse & ~(_013_);
  assign _015_ = _076_ & ~(_014_);
  assign _016_ = state & ~(pulse);
  assign _006_ = _015_ & ~(_016_);
  assign _017_ = ~(_042_ & state);
  assign _007_ = pulse ? _017_ : _002_;
  assign _018_ = _042_ | done;
  assign _019_ = _075_ & ~(_018_);
  assign _008_ = _007_ & ~(_019_);
  assign _009_ = pulse ? _013_ : _002_;
  assign _020_ = ~shift_count[0];
  assign _021_ = ~(pulse & _073_);
  assign _022_ = _020_ & ~(_021_);
  assign _010_ = _022_ & ~(stop_s);
  assign _011_ = go & ~(state);
  assign _023_ = _021_ | _020_;
  assign _012_ = _042_ & ~(_023_);
  assign _004_[0] = state & ~(shift_count[0]);
  assign _024_ = ~(shift_count[1] ^ shift_count[0]);
  assign _004_[1] = state & ~(_024_);
  assign _025_ = ~(_040_ ^ shift_count[2]);
  assign _004_[2] = state & ~(_025_);
  assign _026_ = ~(_040_ & shift_count[2]);
  assign _027_ = _026_ ^ shift_count[3];
  assign _004_[3] = state & ~(_027_);
  assign _028_ = _041_ ^ _038_;
  assign _004_[4] = state & ~(_028_);
  assign _001_[0] = ~(pulse | clk_count[0]);
  assign _001_[1] = ~(pulse | _044_);
  assign _001_[2] = ~(pulse | _048_);
  assign _001_[3] = ~(pulse | _051_);
  assign _001_[4] = ~(pulse | _058_);
  assign _001_[5] = ~(pulse | _061_);
  assign _001_[6] = ~(pulse | _066_);
  assign _001_[7] = _069_ & ~(pulse);
  assign _029_ = go & ~(busy);
  assign _030_ = _042_ | ~(done);
  assign _031_ = _030_ | ~(pulse);
  assign _005_ = state ? _031_ : _029_;
  assign _032_ = ~sclk;
  assign _033_ = ~(CPHA & state);
  assign _034_ = _042_ & ~(_033_);
  assign _035_ = CPHA | csb;
  assign _036_ = _042_ & ~(_035_);
  assign _037_ = _036_ | _034_;
  assign _077_ = _037_ ? _032_ : CPOL;
  assign _000_ = _029_ & ~(state);
  assign _003_ = state & ~(done);
  (* src = "verilog/rtl/periph/spi_master.v:124.4-186.7" *)
  always @(posedge clk, negedge resetb)
    if (!resetb) stop_s <= 1'h0;
    else if (pulse) stop_s <= stop;
  (* src = "verilog/rtl/periph/spi_master.v:124.4-186.7" *)
  always @(posedge clk, negedge resetb)
    if (!resetb) csb <= 1'h1;
    else if (_009_) csb <= _002_;
  (* src = "verilog/rtl/periph/spi_master.v:124.4-186.7" *)
  always @(posedge clk, negedge resetb)
    if (!resetb) sclk <= 1'h1;
    else if (pulse) sclk <= _077_;
  (* src = "verilog/rtl/periph/spi_master.v:124.4-186.7" *)
  always @(posedge clk, negedge resetb)
    if (!resetb) busy <= 1'h0;
    else if (_008_) busy <= _000_;
  (* src = "verilog/rtl/periph/spi_master.v:124.4-186.7" *)
  always @(posedge clk, negedge resetb)
    if (!resetb) state <= 1'h0;
    else state <= _005_;
  (* src = "verilog/rtl/periph/spi_master.v:124.4-186.7" *)
  always @(posedge clk, negedge resetb)
    if (!resetb) clk_count[0] <= 1'h0;
    else clk_count[0] <= _001_[0];
  (* src = "verilog/rtl/periph/spi_master.v:124.4-186.7" *)
  always @(posedge clk, negedge resetb)
    if (!resetb) clk_count[1] <= 1'h0;
    else clk_count[1] <= _001_[1];
  (* src = "verilog/rtl/periph/spi_master.v:124.4-186.7" *)
  always @(posedge clk, negedge resetb)
    if (!resetb) clk_count[2] <= 1'h0;
    else clk_count[2] <= _001_[2];
  (* src = "verilog/rtl/periph/spi_master.v:124.4-186.7" *)
  always @(posedge clk, negedge resetb)
    if (!resetb) clk_count[3] <= 1'h0;
    else clk_count[3] <= _001_[3];
  (* src = "verilog/rtl/periph/spi_master.v:124.4-186.7" *)
  always @(posedge clk, negedge resetb)
    if (!resetb) clk_count[4] <= 1'h0;
    else clk_count[4] <= _001_[4];
  (* src = "verilog/rtl/periph/spi_master.v:124.4-186.7" *)
  always @(posedge clk, negedge resetb)
    if (!resetb) clk_count[5] <= 1'h0;
    else clk_count[5] <= _001_[5];
  (* src = "verilog/rtl/periph/spi_master.v:124.4-186.7" *)
  always @(posedge clk, negedge resetb)
    if (!resetb) clk_count[6] <= 1'h0;
    else clk_count[6] <= _001_[6];
  (* src = "verilog/rtl/periph/spi_master.v:124.4-186.7" *)
  always @(posedge clk, negedge resetb)
    if (!resetb) clk_count[7] <= 1'h0;
    else clk_count[7] <= _001_[7];
  (* src = "verilog/rtl/periph/spi_master.v:124.4-186.7" *)
  always @(posedge clk, negedge resetb)
    if (!resetb) done <= 1'h0;
    else if (_007_) done <= _003_;
  (* src = "verilog/rtl/periph/spi_master.v:124.4-186.7" *)
  always @(posedge clk, negedge resetb)
    if (!resetb) shift_count[0] <= 1'h0;
    else if (_006_) shift_count[0] <= _004_[0];
  (* src = "verilog/rtl/periph/spi_master.v:124.4-186.7" *)
  always @(posedge clk, negedge resetb)
    if (!resetb) shift_count[1] <= 1'h0;
    else if (_006_) shift_count[1] <= _004_[1];
  (* src = "verilog/rtl/periph/spi_master.v:124.4-186.7" *)
  always @(posedge clk, negedge resetb)
    if (!resetb) shift_count[2] <= 1'h0;
    else if (_006_) shift_count[2] <= _004_[2];
  (* src = "verilog/rtl/periph/spi_master.v:124.4-186.7" *)
  always @(posedge clk, negedge resetb)
    if (!resetb) shift_count[3] <= 1'h0;
    else if (_006_) shift_count[3] <= _004_[3];
  (* src = "verilog/rtl/periph/spi_master.v:124.4-186.7" *)
  always @(posedge clk, negedge resetb)
    if (!resetb) shift_count[4] <= 1'h0;
    else if (_006_) shift_count[4] <= _004_[4];
  (* src = "verilog/rtl/periph/spi_master.v:113.35-119.17" *)
  \$paramod\sri\DATA_WIDTH=s32'00000000000000000000000000001000  \sri[0]  (
    .clk(clk),
    .datai(datai),
    .din(din),
    .resetb(resetb),
    .sample(_011_),
    .shift(_012_)
  );
  (* src = "verilog/rtl/periph/spi_master.v:106.35-111.21" *)
  \$paramod\sro\DATA_WIDTH=s32'00000000000000000000000000001000  \sro[0]  (
    .clk(clk),
    .datao(datao),
    .dout(dout),
    .resetb(resetb),
    .shift(_010_)
  );
endmodule

(* dynports =  1  *)
(* hdlname = "cf_util_fifo" *)
(* src = "verilog/rtl/periph/cf_util_lib.v:159.1-271.10" *)
module \$paramod$35fd2251be7b04b97383c73c619c568cec4a51ab\cf_util_fifo (clk, rst_n, rd, wr, flush, wdata, empty, full, rdata, level);
  (* src = "verilog/rtl/periph/cf_util_lib.v:202.5-227.8" *)
  wire _000_;
  (* src = "verilog/rtl/periph/cf_util_lib.v:202.5-227.8" *)
  wire _001_;
  (* src = "verilog/rtl/periph/cf_util_lib.v:202.5-227.8" *)
  wire [3:0] _002_;
  (* src = "verilog/rtl/periph/cf_util_lib.v:202.5-227.8" *)
  wire [3:0] _003_;
  (* src = "verilog/rtl/periph/cf_util_lib.v:202.5-227.8" *)
  wire [3:0] _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  wire _216_;
  wire _217_;
  wire _218_;
  wire _219_;
  wire _220_;
  wire _221_;
  reg [7:0] \array_reg[0] ;
  reg [7:0] \array_reg[10] ;
  reg [7:0] \array_reg[11] ;
  reg [7:0] \array_reg[12] ;
  reg [7:0] \array_reg[13] ;
  reg [7:0] \array_reg[14] ;
  reg [7:0] \array_reg[15] ;
  reg [7:0] \array_reg[1] ;
  reg [7:0] \array_reg[2] ;
  reg [7:0] \array_reg[3] ;
  reg [7:0] \array_reg[4] ;
  reg [7:0] \array_reg[5] ;
  reg [7:0] \array_reg[6] ;
  reg [7:0] \array_reg[7] ;
  reg [7:0] \array_reg[8] ;
  reg [7:0] \array_reg[9] ;
  (* src = "verilog/rtl/periph/cf_util_lib.v:160.29-160.32" *)
  input clk;
  wire clk;
  (* src = "verilog/rtl/periph/cf_util_lib.v:166.29-166.34" *)
  output empty;
  wire empty;
  (* src = "verilog/rtl/periph/cf_util_lib.v:187.9-187.18" *)
  reg empty_reg;
  (* src = "verilog/rtl/periph/cf_util_lib.v:164.29-164.34" *)
  input flush;
  wire flush;
  (* src = "verilog/rtl/periph/cf_util_lib.v:167.29-167.33" *)
  output full;
  wire full;
  (* src = "verilog/rtl/periph/cf_util_lib.v:186.9-186.17" *)
  reg full_reg;
  (* src = "verilog/rtl/periph/cf_util_lib.v:169.29-169.34" *)
  output [3:0] level;
  wire [3:0] level;
  (* src = "verilog/rtl/periph/cf_util_lib.v:184.18-184.27" *)
  reg [3:0] level_reg;
  (* src = "verilog/rtl/periph/cf_util_lib.v:179.19-179.28" *)
  reg [3:0] r_ptr_reg;
  (* src = "verilog/rtl/periph/cf_util_lib.v:162.29-162.31" *)
  input rd;
  wire rd;
  (* src = "verilog/rtl/periph/cf_util_lib.v:168.29-168.34" *)
  output [7:0] rdata;
  wire [7:0] rdata;
  (* src = "verilog/rtl/periph/cf_util_lib.v:161.29-161.34" *)
  input rst_n;
  wire rst_n;
  (* src = "verilog/rtl/periph/cf_util_lib.v:176.19-176.28" *)
  reg [3:0] w_ptr_reg;
  (* src = "verilog/rtl/periph/cf_util_lib.v:165.29-165.34" *)
  input [7:0] wdata;
  wire [7:0] wdata;
  (* src = "verilog/rtl/periph/cf_util_lib.v:163.29-163.31" *)
  input wr;
  wire wr;
  assign _026_ = ~rd;
  assign _027_ = full_reg | ~(wr);
  assign _028_ = _026_ & ~(_027_);
  assign _029_ = _028_ | flush;
  assign _030_ = _027_ & ~(_026_);
  assign _031_ = _030_ | _029_;
  assign _032_ = flush | ~(full_reg);
  assign _033_ = _028_ & ~(_032_);
  assign _005_ = _031_ & ~(_033_);
  assign _034_ = flush | ~(empty_reg);
  assign _006_ = _030_ ? _034_ : _029_;
  assign _035_ = ~_033_;
  assign _007_ = _006_ & _035_;
  assign _036_ = _034_ | ~(_030_);
  assign _037_ = ~_027_;
  assign _038_ = ~(flush | rd);
  assign _008_ = _036_ & ~(_038_);
  assign _039_ = _027_ | _026_;
  assign _040_ = _039_ & ~(_029_);
  assign _009_ = _035_ & ~(_040_);
  assign _041_ = ~r_ptr_reg[3];
  assign _042_ = ~r_ptr_reg[2];
  assign _043_ = ~r_ptr_reg[1];
  assign _044_ = r_ptr_reg[0] ? \array_reg[1] [0] : \array_reg[0] [0];
  assign _045_ = r_ptr_reg[0] ? \array_reg[3] [0] : \array_reg[2] [0];
  assign _046_ = r_ptr_reg[1] ? _045_ : _044_;
  assign _047_ = r_ptr_reg[0] ? \array_reg[5] [0] : \array_reg[4] [0];
  assign _048_ = r_ptr_reg[0] ? \array_reg[7] [0] : \array_reg[6] [0];
  assign _049_ = r_ptr_reg[1] ? _048_ : _047_;
  assign _050_ = r_ptr_reg[2] ? _049_ : _046_;
  assign _051_ = r_ptr_reg[0] ? \array_reg[9] [0] : \array_reg[8] [0];
  assign _052_ = r_ptr_reg[0] ? \array_reg[11] [0] : \array_reg[10] [0];
  assign _053_ = r_ptr_reg[1] ? _052_ : _051_;
  assign _054_ = r_ptr_reg[0] ? \array_reg[13] [0] : \array_reg[12] [0];
  assign _055_ = r_ptr_reg[0] ? \array_reg[15] [0] : \array_reg[14] [0];
  assign _056_ = r_ptr_reg[1] ? _055_ : _054_;
  assign _057_ = r_ptr_reg[2] ? _056_ : _053_;
  assign rdata[0] = r_ptr_reg[3] ? _057_ : _050_;
  assign _058_ = r_ptr_reg[0] ? \array_reg[1] [1] : \array_reg[0] [1];
  assign _059_ = r_ptr_reg[0] ? \array_reg[3] [1] : \array_reg[2] [1];
  assign _060_ = r_ptr_reg[1] ? _059_ : _058_;
  assign _061_ = r_ptr_reg[0] ? \array_reg[5] [1] : \array_reg[4] [1];
  assign _062_ = r_ptr_reg[0] ? \array_reg[7] [1] : \array_reg[6] [1];
  assign _063_ = r_ptr_reg[1] ? _062_ : _061_;
  assign _064_ = r_ptr_reg[2] ? _063_ : _060_;
  assign _065_ = r_ptr_reg[0] ? \array_reg[9] [1] : \array_reg[8] [1];
  assign _066_ = r_ptr_reg[0] ? \array_reg[11] [1] : \array_reg[10] [1];
  assign _067_ = r_ptr_reg[1] ? _066_ : _065_;
  assign _068_ = r_ptr_reg[0] ? \array_reg[13] [1] : \array_reg[12] [1];
  assign _069_ = r_ptr_reg[0] ? \array_reg[15] [1] : \array_reg[14] [1];
  assign _070_ = r_ptr_reg[1] ? _069_ : _068_;
  assign _071_ = r_ptr_reg[2] ? _070_ : _067_;
  assign rdata[1] = r_ptr_reg[3] ? _071_ : _064_;
  assign _072_ = r_ptr_reg[0] ? \array_reg[1] [2] : \array_reg[0] [2];
  assign _073_ = r_ptr_reg[0] ? \array_reg[3] [2] : \array_reg[2] [2];
  assign _074_ = r_ptr_reg[1] ? _073_ : _072_;
  assign _075_ = r_ptr_reg[0] ? \array_reg[5] [2] : \array_reg[4] [2];
  assign _076_ = r_ptr_reg[0] ? \array_reg[7] [2] : \array_reg[6] [2];
  assign _077_ = r_ptr_reg[1] ? _076_ : _075_;
  assign _078_ = r_ptr_reg[2] ? _077_ : _074_;
  assign _079_ = r_ptr_reg[0] ? \array_reg[9] [2] : \array_reg[8] [2];
  assign _080_ = r_ptr_reg[0] ? \array_reg[11] [2] : \array_reg[10] [2];
  assign _081_ = r_ptr_reg[1] ? _080_ : _079_;
  assign _082_ = r_ptr_reg[0] ? \array_reg[13] [2] : \array_reg[12] [2];
  assign _083_ = r_ptr_reg[0] ? \array_reg[15] [2] : \array_reg[14] [2];
  assign _084_ = r_ptr_reg[1] ? _083_ : _082_;
  assign _085_ = r_ptr_reg[2] ? _084_ : _081_;
  assign rdata[2] = r_ptr_reg[3] ? _085_ : _078_;
  assign _086_ = r_ptr_reg[0] ? \array_reg[1] [3] : \array_reg[0] [3];
  assign _087_ = r_ptr_reg[0] ? \array_reg[3] [3] : \array_reg[2] [3];
  assign _088_ = r_ptr_reg[1] ? _087_ : _086_;
  assign _089_ = r_ptr_reg[0] ? \array_reg[5] [3] : \array_reg[4] [3];
  assign _090_ = r_ptr_reg[0] ? \array_reg[7] [3] : \array_reg[6] [3];
  assign _091_ = r_ptr_reg[1] ? _090_ : _089_;
  assign _092_ = r_ptr_reg[2] ? _091_ : _088_;
  assign _093_ = r_ptr_reg[0] ? \array_reg[9] [3] : \array_reg[8] [3];
  assign _094_ = r_ptr_reg[0] ? \array_reg[11] [3] : \array_reg[10] [3];
  assign _095_ = r_ptr_reg[1] ? _094_ : _093_;
  assign _096_ = r_ptr_reg[0] ? \array_reg[13] [3] : \array_reg[12] [3];
  assign _097_ = r_ptr_reg[0] ? \array_reg[15] [3] : \array_reg[14] [3];
  assign _098_ = r_ptr_reg[1] ? _097_ : _096_;
  assign _099_ = r_ptr_reg[2] ? _098_ : _095_;
  assign rdata[3] = r_ptr_reg[3] ? _099_ : _092_;
  assign _100_ = r_ptr_reg[0] ? \array_reg[1] [4] : \array_reg[0] [4];
  assign _101_ = r_ptr_reg[0] ? \array_reg[3] [4] : \array_reg[2] [4];
  assign _102_ = r_ptr_reg[1] ? _101_ : _100_;
  assign _103_ = r_ptr_reg[0] ? \array_reg[5] [4] : \array_reg[4] [4];
  assign _104_ = r_ptr_reg[0] ? \array_reg[7] [4] : \array_reg[6] [4];
  assign _105_ = r_ptr_reg[1] ? _104_ : _103_;
  assign _106_ = r_ptr_reg[2] ? _105_ : _102_;
  assign _107_ = r_ptr_reg[0] ? \array_reg[9] [4] : \array_reg[8] [4];
  assign _108_ = r_ptr_reg[0] ? \array_reg[11] [4] : \array_reg[10] [4];
  assign _109_ = r_ptr_reg[1] ? _108_ : _107_;
  assign _110_ = r_ptr_reg[0] ? \array_reg[13] [4] : \array_reg[12] [4];
  assign _111_ = r_ptr_reg[0] ? \array_reg[15] [4] : \array_reg[14] [4];
  assign _112_ = r_ptr_reg[1] ? _111_ : _110_;
  assign _113_ = r_ptr_reg[2] ? _112_ : _109_;
  assign rdata[4] = r_ptr_reg[3] ? _113_ : _106_;
  assign _114_ = r_ptr_reg[0] ? \array_reg[1] [5] : \array_reg[0] [5];
  assign _115_ = r_ptr_reg[0] ? \array_reg[3] [5] : \array_reg[2] [5];
  assign _116_ = r_ptr_reg[1] ? _115_ : _114_;
  assign _117_ = r_ptr_reg[0] ? \array_reg[5] [5] : \array_reg[4] [5];
  assign _118_ = r_ptr_reg[0] ? \array_reg[7] [5] : \array_reg[6] [5];
  assign _119_ = r_ptr_reg[1] ? _118_ : _117_;
  assign _120_ = r_ptr_reg[2] ? _119_ : _116_;
  assign _121_ = r_ptr_reg[0] ? \array_reg[9] [5] : \array_reg[8] [5];
  assign _122_ = r_ptr_reg[0] ? \array_reg[11] [5] : \array_reg[10] [5];
  assign _123_ = r_ptr_reg[1] ? _122_ : _121_;
  assign _124_ = r_ptr_reg[0] ? \array_reg[13] [5] : \array_reg[12] [5];
  assign _125_ = r_ptr_reg[0] ? \array_reg[15] [5] : \array_reg[14] [5];
  assign _126_ = r_ptr_reg[1] ? _125_ : _124_;
  assign _127_ = r_ptr_reg[2] ? _126_ : _123_;
  assign rdata[5] = r_ptr_reg[3] ? _127_ : _120_;
  assign _128_ = r_ptr_reg[0] ? \array_reg[1] [6] : \array_reg[0] [6];
  assign _129_ = r_ptr_reg[0] ? \array_reg[3] [6] : \array_reg[2] [6];
  assign _130_ = r_ptr_reg[1] ? _129_ : _128_;
  assign _131_ = r_ptr_reg[0] ? \array_reg[5] [6] : \array_reg[4] [6];
  assign _132_ = r_ptr_reg[0] ? \array_reg[7] [6] : \array_reg[6] [6];
  assign _133_ = r_ptr_reg[1] ? _132_ : _131_;
  assign _134_ = r_ptr_reg[2] ? _133_ : _130_;
  assign _135_ = r_ptr_reg[0] ? \array_reg[9] [6] : \array_reg[8] [6];
  assign _136_ = r_ptr_reg[0] ? \array_reg[11] [6] : \array_reg[10] [6];
  assign _137_ = r_ptr_reg[1] ? _136_ : _135_;
  assign _138_ = r_ptr_reg[0] ? \array_reg[13] [6] : \array_reg[12] [6];
  assign _139_ = r_ptr_reg[0] ? \array_reg[15] [6] : \array_reg[14] [6];
  assign _140_ = r_ptr_reg[1] ? _139_ : _138_;
  assign _141_ = r_ptr_reg[2] ? _140_ : _137_;
  assign rdata[6] = r_ptr_reg[3] ? _141_ : _134_;
  assign _142_ = r_ptr_reg[0] ? \array_reg[1] [7] : \array_reg[0] [7];
  assign _143_ = r_ptr_reg[0] ? \array_reg[3] [7] : \array_reg[2] [7];
  assign _144_ = r_ptr_reg[1] ? _143_ : _142_;
  assign _145_ = r_ptr_reg[0] ? \array_reg[5] [7] : \array_reg[4] [7];
  assign _146_ = r_ptr_reg[0] ? \array_reg[7] [7] : \array_reg[6] [7];
  assign _147_ = r_ptr_reg[1] ? _146_ : _145_;
  assign _148_ = r_ptr_reg[2] ? _147_ : _144_;
  assign _149_ = r_ptr_reg[0] ? \array_reg[9] [7] : \array_reg[8] [7];
  assign _150_ = r_ptr_reg[0] ? \array_reg[11] [7] : \array_reg[10] [7];
  assign _151_ = r_ptr_reg[1] ? _150_ : _149_;
  assign _152_ = r_ptr_reg[0] ? \array_reg[13] [7] : \array_reg[12] [7];
  assign _153_ = r_ptr_reg[0] ? \array_reg[15] [7] : \array_reg[14] [7];
  assign _154_ = r_ptr_reg[1] ? _153_ : _152_;
  assign _155_ = r_ptr_reg[2] ? _154_ : _151_;
  assign rdata[7] = r_ptr_reg[3] ? _155_ : _148_;
  assign _004_[0] = ~(flush | w_ptr_reg[0]);
  assign _156_ = ~flush;
  assign _157_ = w_ptr_reg[1] | ~(w_ptr_reg[0]);
  assign _158_ = w_ptr_reg[0] | ~(w_ptr_reg[1]);
  assign _159_ = _158_ & _157_;
  assign _004_[1] = _156_ & ~(_159_);
  assign _160_ = ~(w_ptr_reg[1] & w_ptr_reg[0]);
  assign _161_ = _160_ ^ w_ptr_reg[2];
  assign _004_[2] = _156_ & ~(_161_);
  assign _162_ = ~w_ptr_reg[3];
  assign _163_ = w_ptr_reg[2] & ~(_160_);
  assign _164_ = _163_ ^ _162_;
  assign _004_[3] = _156_ & ~(_164_);
  assign _003_[0] = ~(flush | r_ptr_reg[0]);
  assign _165_ = ~(r_ptr_reg[1] ^ r_ptr_reg[0]);
  assign _003_[1] = _156_ & ~(_165_);
  assign _166_ = ~(r_ptr_reg[1] & r_ptr_reg[0]);
  assign _167_ = _166_ ^ r_ptr_reg[2];
  assign _003_[2] = _156_ & ~(_167_);
  assign _168_ = r_ptr_reg[2] & ~(_166_);
  assign _169_ = _168_ ^ _041_;
  assign _003_[3] = _156_ & ~(_169_);
  assign _170_ = ~_028_;
  assign _171_ = r_ptr_reg[0] ^ w_ptr_reg[0];
  assign _172_ = _159_ ^ _043_;
  assign _173_ = _171_ & ~(_172_);
  assign _174_ = _161_ ^ _042_;
  assign _175_ = _164_ ^ _041_;
  assign _176_ = _175_ | _174_;
  assign _177_ = _176_ | ~(_173_);
  assign _178_ = _177_ & ~(full_reg);
  assign _179_ = _178_ | _170_;
  assign _001_ = _156_ & ~(_179_);
  assign _002_[0] = ~(level_reg[0] | flush);
  assign _180_ = _028_ ^ level_reg[1];
  assign _181_ = _180_ ^ level_reg[0];
  assign _002_[1] = _156_ & ~(_181_);
  assign _182_ = ~level_reg[2];
  assign _183_ = _028_ ^ _182_;
  assign _184_ = _028_ | ~(level_reg[1]);
  assign _185_ = level_reg[0] & ~(_180_);
  assign _186_ = _184_ & ~(_185_);
  assign _187_ = _186_ ^ _183_;
  assign _002_[2] = _156_ & ~(_187_);
  assign _188_ = ~(_028_ ^ level_reg[3]);
  assign _189_ = _028_ | _182_;
  assign _190_ = _183_ & ~(_186_);
  assign _191_ = _189_ & ~(_190_);
  assign _192_ = _191_ ^ _188_;
  assign _002_[3] = _156_ & ~(_192_);
  assign _193_ = w_ptr_reg[3] | w_ptr_reg[2];
  assign _194_ = _193_ | _157_;
  assign _017_ = _037_ & ~(_194_);
  assign _195_ = w_ptr_reg[1] | w_ptr_reg[0];
  assign _196_ = _195_ | _193_;
  assign _010_ = _037_ & ~(_196_);
  assign _197_ = w_ptr_reg[3] | ~(w_ptr_reg[2]);
  assign _198_ = _197_ | _195_;
  assign _020_ = _037_ & ~(_198_);
  assign _199_ = _197_ | _157_;
  assign _021_ = _037_ & ~(_199_);
  assign _200_ = _197_ | _158_;
  assign _022_ = _037_ & ~(_200_);
  assign _201_ = _197_ | _160_;
  assign _023_ = _037_ & ~(_201_);
  assign _202_ = w_ptr_reg[2] | ~(w_ptr_reg[3]);
  assign _203_ = _202_ | _195_;
  assign _024_ = _037_ & ~(_203_);
  assign _204_ = ~(w_ptr_reg[3] & w_ptr_reg[2]);
  assign _205_ = _204_ | _157_;
  assign _014_ = _037_ & ~(_205_);
  assign _206_ = ~(_165_ ^ w_ptr_reg[1]);
  assign _207_ = _171_ & ~(_206_);
  assign _208_ = ~(_167_ ^ w_ptr_reg[2]);
  assign _209_ = _169_ ^ _162_;
  assign _210_ = _209_ | _208_;
  assign _211_ = _210_ | ~(_207_);
  assign _212_ = _211_ & ~(empty_reg);
  assign _213_ = _170_ & ~(_212_);
  assign _000_ = _213_ | flush;
  assign _214_ = _204_ | _195_;
  assign _013_ = _037_ & ~(_214_);
  assign _215_ = _202_ | _158_;
  assign _011_ = _037_ & ~(_215_);
  assign _216_ = _204_ | _158_;
  assign _015_ = _037_ & ~(_216_);
  assign _217_ = _202_ | _160_;
  assign _012_ = _037_ & ~(_217_);
  assign _218_ = _202_ | _157_;
  assign _025_ = _037_ & ~(_218_);
  assign _219_ = _193_ | _158_;
  assign _018_ = _037_ & ~(_219_);
  assign _220_ = _204_ | _160_;
  assign _016_ = _037_ & ~(_220_);
  assign _221_ = _193_ | _160_;
  assign _019_ = _037_ & ~(_221_);
  always @(posedge clk)
    if (_020_) \array_reg[4] [0] <= wdata[0];
  always @(posedge clk)
    if (_020_) \array_reg[4] [1] <= wdata[1];
  always @(posedge clk)
    if (_020_) \array_reg[4] [2] <= wdata[2];
  always @(posedge clk)
    if (_020_) \array_reg[4] [3] <= wdata[3];
  always @(posedge clk)
    if (_020_) \array_reg[4] [4] <= wdata[4];
  always @(posedge clk)
    if (_020_) \array_reg[4] [5] <= wdata[5];
  always @(posedge clk)
    if (_020_) \array_reg[4] [6] <= wdata[6];
  always @(posedge clk)
    if (_020_) \array_reg[4] [7] <= wdata[7];
  always @(posedge clk)
    if (_013_) \array_reg[12] [0] <= wdata[0];
  always @(posedge clk)
    if (_013_) \array_reg[12] [1] <= wdata[1];
  always @(posedge clk)
    if (_013_) \array_reg[12] [2] <= wdata[2];
  always @(posedge clk)
    if (_013_) \array_reg[12] [3] <= wdata[3];
  always @(posedge clk)
    if (_013_) \array_reg[12] [4] <= wdata[4];
  always @(posedge clk)
    if (_013_) \array_reg[12] [5] <= wdata[5];
  always @(posedge clk)
    if (_013_) \array_reg[12] [6] <= wdata[6];
  always @(posedge clk)
    if (_013_) \array_reg[12] [7] <= wdata[7];
  always @(posedge clk)
    if (_012_) \array_reg[11] [0] <= wdata[0];
  always @(posedge clk)
    if (_012_) \array_reg[11] [1] <= wdata[1];
  always @(posedge clk)
    if (_012_) \array_reg[11] [2] <= wdata[2];
  always @(posedge clk)
    if (_012_) \array_reg[11] [3] <= wdata[3];
  always @(posedge clk)
    if (_012_) \array_reg[11] [4] <= wdata[4];
  always @(posedge clk)
    if (_012_) \array_reg[11] [5] <= wdata[5];
  always @(posedge clk)
    if (_012_) \array_reg[11] [6] <= wdata[6];
  always @(posedge clk)
    if (_012_) \array_reg[11] [7] <= wdata[7];
  always @(posedge clk)
    if (_015_) \array_reg[14] [0] <= wdata[0];
  always @(posedge clk)
    if (_015_) \array_reg[14] [1] <= wdata[1];
  always @(posedge clk)
    if (_015_) \array_reg[14] [2] <= wdata[2];
  always @(posedge clk)
    if (_015_) \array_reg[14] [3] <= wdata[3];
  always @(posedge clk)
    if (_015_) \array_reg[14] [4] <= wdata[4];
  always @(posedge clk)
    if (_015_) \array_reg[14] [5] <= wdata[5];
  always @(posedge clk)
    if (_015_) \array_reg[14] [6] <= wdata[6];
  always @(posedge clk)
    if (_015_) \array_reg[14] [7] <= wdata[7];
  always @(posedge clk)
    if (_022_) \array_reg[6] [0] <= wdata[0];
  always @(posedge clk)
    if (_022_) \array_reg[6] [1] <= wdata[1];
  always @(posedge clk)
    if (_022_) \array_reg[6] [2] <= wdata[2];
  always @(posedge clk)
    if (_022_) \array_reg[6] [3] <= wdata[3];
  always @(posedge clk)
    if (_022_) \array_reg[6] [4] <= wdata[4];
  always @(posedge clk)
    if (_022_) \array_reg[6] [5] <= wdata[5];
  always @(posedge clk)
    if (_022_) \array_reg[6] [6] <= wdata[6];
  always @(posedge clk)
    if (_022_) \array_reg[6] [7] <= wdata[7];
  always @(posedge clk)
    if (_023_) \array_reg[7] [0] <= wdata[0];
  always @(posedge clk)
    if (_023_) \array_reg[7] [1] <= wdata[1];
  always @(posedge clk)
    if (_023_) \array_reg[7] [2] <= wdata[2];
  always @(posedge clk)
    if (_023_) \array_reg[7] [3] <= wdata[3];
  always @(posedge clk)
    if (_023_) \array_reg[7] [4] <= wdata[4];
  always @(posedge clk)
    if (_023_) \array_reg[7] [5] <= wdata[5];
  always @(posedge clk)
    if (_023_) \array_reg[7] [6] <= wdata[6];
  always @(posedge clk)
    if (_023_) \array_reg[7] [7] <= wdata[7];
  always @(posedge clk)
    if (_024_) \array_reg[8] [0] <= wdata[0];
  always @(posedge clk)
    if (_024_) \array_reg[8] [1] <= wdata[1];
  always @(posedge clk)
    if (_024_) \array_reg[8] [2] <= wdata[2];
  always @(posedge clk)
    if (_024_) \array_reg[8] [3] <= wdata[3];
  always @(posedge clk)
    if (_024_) \array_reg[8] [4] <= wdata[4];
  always @(posedge clk)
    if (_024_) \array_reg[8] [5] <= wdata[5];
  always @(posedge clk)
    if (_024_) \array_reg[8] [6] <= wdata[6];
  always @(posedge clk)
    if (_024_) \array_reg[8] [7] <= wdata[7];
  always @(posedge clk)
    if (_014_) \array_reg[13] [0] <= wdata[0];
  always @(posedge clk)
    if (_014_) \array_reg[13] [1] <= wdata[1];
  always @(posedge clk)
    if (_014_) \array_reg[13] [2] <= wdata[2];
  always @(posedge clk)
    if (_014_) \array_reg[13] [3] <= wdata[3];
  always @(posedge clk)
    if (_014_) \array_reg[13] [4] <= wdata[4];
  always @(posedge clk)
    if (_014_) \array_reg[13] [5] <= wdata[5];
  always @(posedge clk)
    if (_014_) \array_reg[13] [6] <= wdata[6];
  always @(posedge clk)
    if (_014_) \array_reg[13] [7] <= wdata[7];
  always @(posedge clk)
    if (_010_) \array_reg[0] [0] <= wdata[0];
  always @(posedge clk)
    if (_010_) \array_reg[0] [1] <= wdata[1];
  always @(posedge clk)
    if (_010_) \array_reg[0] [2] <= wdata[2];
  always @(posedge clk)
    if (_010_) \array_reg[0] [3] <= wdata[3];
  always @(posedge clk)
    if (_010_) \array_reg[0] [4] <= wdata[4];
  always @(posedge clk)
    if (_010_) \array_reg[0] [5] <= wdata[5];
  always @(posedge clk)
    if (_010_) \array_reg[0] [6] <= wdata[6];
  always @(posedge clk)
    if (_010_) \array_reg[0] [7] <= wdata[7];
  always @(posedge clk)
    if (_021_) \array_reg[5] [0] <= wdata[0];
  always @(posedge clk)
    if (_021_) \array_reg[5] [1] <= wdata[1];
  always @(posedge clk)
    if (_021_) \array_reg[5] [2] <= wdata[2];
  always @(posedge clk)
    if (_021_) \array_reg[5] [3] <= wdata[3];
  always @(posedge clk)
    if (_021_) \array_reg[5] [4] <= wdata[4];
  always @(posedge clk)
    if (_021_) \array_reg[5] [5] <= wdata[5];
  always @(posedge clk)
    if (_021_) \array_reg[5] [6] <= wdata[6];
  always @(posedge clk)
    if (_021_) \array_reg[5] [7] <= wdata[7];
  always @(posedge clk)
    if (_011_) \array_reg[10] [0] <= wdata[0];
  always @(posedge clk)
    if (_011_) \array_reg[10] [1] <= wdata[1];
  always @(posedge clk)
    if (_011_) \array_reg[10] [2] <= wdata[2];
  always @(posedge clk)
    if (_011_) \array_reg[10] [3] <= wdata[3];
  always @(posedge clk)
    if (_011_) \array_reg[10] [4] <= wdata[4];
  always @(posedge clk)
    if (_011_) \array_reg[10] [5] <= wdata[5];
  always @(posedge clk)
    if (_011_) \array_reg[10] [6] <= wdata[6];
  always @(posedge clk)
    if (_011_) \array_reg[10] [7] <= wdata[7];
  always @(posedge clk)
    if (_025_) \array_reg[9] [0] <= wdata[0];
  always @(posedge clk)
    if (_025_) \array_reg[9] [1] <= wdata[1];
  always @(posedge clk)
    if (_025_) \array_reg[9] [2] <= wdata[2];
  always @(posedge clk)
    if (_025_) \array_reg[9] [3] <= wdata[3];
  always @(posedge clk)
    if (_025_) \array_reg[9] [4] <= wdata[4];
  always @(posedge clk)
    if (_025_) \array_reg[9] [5] <= wdata[5];
  always @(posedge clk)
    if (_025_) \array_reg[9] [6] <= wdata[6];
  always @(posedge clk)
    if (_025_) \array_reg[9] [7] <= wdata[7];
  always @(posedge clk)
    if (_016_) \array_reg[15] [0] <= wdata[0];
  always @(posedge clk)
    if (_016_) \array_reg[15] [1] <= wdata[1];
  always @(posedge clk)
    if (_016_) \array_reg[15] [2] <= wdata[2];
  always @(posedge clk)
    if (_016_) \array_reg[15] [3] <= wdata[3];
  always @(posedge clk)
    if (_016_) \array_reg[15] [4] <= wdata[4];
  always @(posedge clk)
    if (_016_) \array_reg[15] [5] <= wdata[5];
  always @(posedge clk)
    if (_016_) \array_reg[15] [6] <= wdata[6];
  always @(posedge clk)
    if (_016_) \array_reg[15] [7] <= wdata[7];
  always @(posedge clk)
    if (_017_) \array_reg[1] [0] <= wdata[0];
  always @(posedge clk)
    if (_017_) \array_reg[1] [1] <= wdata[1];
  always @(posedge clk)
    if (_017_) \array_reg[1] [2] <= wdata[2];
  always @(posedge clk)
    if (_017_) \array_reg[1] [3] <= wdata[3];
  always @(posedge clk)
    if (_017_) \array_reg[1] [4] <= wdata[4];
  always @(posedge clk)
    if (_017_) \array_reg[1] [5] <= wdata[5];
  always @(posedge clk)
    if (_017_) \array_reg[1] [6] <= wdata[6];
  always @(posedge clk)
    if (_017_) \array_reg[1] [7] <= wdata[7];
  always @(posedge clk)
    if (_018_) \array_reg[2] [0] <= wdata[0];
  always @(posedge clk)
    if (_018_) \array_reg[2] [1] <= wdata[1];
  always @(posedge clk)
    if (_018_) \array_reg[2] [2] <= wdata[2];
  always @(posedge clk)
    if (_018_) \array_reg[2] [3] <= wdata[3];
  always @(posedge clk)
    if (_018_) \array_reg[2] [4] <= wdata[4];
  always @(posedge clk)
    if (_018_) \array_reg[2] [5] <= wdata[5];
  always @(posedge clk)
    if (_018_) \array_reg[2] [6] <= wdata[6];
  always @(posedge clk)
    if (_018_) \array_reg[2] [7] <= wdata[7];
  always @(posedge clk)
    if (_019_) \array_reg[3] [0] <= wdata[0];
  always @(posedge clk)
    if (_019_) \array_reg[3] [1] <= wdata[1];
  always @(posedge clk)
    if (_019_) \array_reg[3] [2] <= wdata[2];
  always @(posedge clk)
    if (_019_) \array_reg[3] [3] <= wdata[3];
  always @(posedge clk)
    if (_019_) \array_reg[3] [4] <= wdata[4];
  always @(posedge clk)
    if (_019_) \array_reg[3] [5] <= wdata[5];
  always @(posedge clk)
    if (_019_) \array_reg[3] [6] <= wdata[6];
  always @(posedge clk)
    if (_019_) \array_reg[3] [7] <= wdata[7];
  (* src = "verilog/rtl/periph/cf_util_lib.v:202.5-227.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) w_ptr_reg[0] <= 1'h0;
    else if (_009_) w_ptr_reg[0] <= _004_[0];
  (* src = "verilog/rtl/periph/cf_util_lib.v:202.5-227.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) w_ptr_reg[1] <= 1'h0;
    else if (_009_) w_ptr_reg[1] <= _004_[1];
  (* src = "verilog/rtl/periph/cf_util_lib.v:202.5-227.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) w_ptr_reg[2] <= 1'h0;
    else if (_009_) w_ptr_reg[2] <= _004_[2];
  (* src = "verilog/rtl/periph/cf_util_lib.v:202.5-227.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) w_ptr_reg[3] <= 1'h0;
    else if (_009_) w_ptr_reg[3] <= _004_[3];
  (* src = "verilog/rtl/periph/cf_util_lib.v:202.5-227.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) r_ptr_reg[0] <= 1'h0;
    else if (_008_) r_ptr_reg[0] <= _003_[0];
  (* src = "verilog/rtl/periph/cf_util_lib.v:202.5-227.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) r_ptr_reg[1] <= 1'h0;
    else if (_008_) r_ptr_reg[1] <= _003_[1];
  (* src = "verilog/rtl/periph/cf_util_lib.v:202.5-227.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) r_ptr_reg[2] <= 1'h0;
    else if (_008_) r_ptr_reg[2] <= _003_[2];
  (* src = "verilog/rtl/periph/cf_util_lib.v:202.5-227.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) r_ptr_reg[3] <= 1'h0;
    else if (_008_) r_ptr_reg[3] <= _003_[3];
  (* src = "verilog/rtl/periph/cf_util_lib.v:202.5-227.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) level_reg[0] <= 1'h0;
    else if (_007_) level_reg[0] <= _002_[0];
  (* src = "verilog/rtl/periph/cf_util_lib.v:202.5-227.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) level_reg[1] <= 1'h0;
    else if (_007_) level_reg[1] <= _002_[1];
  (* src = "verilog/rtl/periph/cf_util_lib.v:202.5-227.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) level_reg[2] <= 1'h0;
    else if (_007_) level_reg[2] <= _002_[2];
  (* src = "verilog/rtl/periph/cf_util_lib.v:202.5-227.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) level_reg[3] <= 1'h0;
    else if (_007_) level_reg[3] <= _002_[3];
  (* src = "verilog/rtl/periph/cf_util_lib.v:202.5-227.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) full_reg <= 1'h0;
    else if (_006_) full_reg <= _001_;
  (* src = "verilog/rtl/periph/cf_util_lib.v:202.5-227.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) empty_reg <= 1'h1;
    else if (_005_) empty_reg <= _000_;
  assign empty = empty_reg;
  assign full = full_reg;
  assign level = level_reg;
endmodule

(* dynports =  1  *)
(* hdlname = "CF_SPI" *)
(* src = "verilog/rtl/periph/CF_SPI.v:25.1-151.10" *)
module \$paramod$c472ad5b357594777851f1f1c93c46d2cb71eced\CF_SPI (clk, rst_n, CPOL, CPHA, clk_divider, wr, rd, datai, datao, enable, rx_en, rx_flush, rx_threshold, rx_empty, rx_full, rx_level_above, rx_level, tx_flush, tx_threshold, tx_empty, tx_full
, tx_level_below, tx_level, busy, done, miso, mosi, csb, ss, sclk);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  wire _25_;
  wire _26_;
  wire _27_;
  wire _28_;
  wire _29_;
  wire _30_;
  wire _31_;
  wire _32_;
  wire _33_;
  (* src = "verilog/rtl/periph/CF_SPI.v:32.29-32.33" *)
  input CPHA;
  wire CPHA;
  (* src = "verilog/rtl/periph/CF_SPI.v:31.29-31.33" *)
  input CPOL;
  wire CPOL;
  (* src = "verilog/rtl/periph/CF_SPI.v:54.29-54.33" *)
  output busy;
  wire busy;
  (* src = "verilog/rtl/periph/CF_SPI.v:29.29-29.32" *)
  input clk;
  wire clk;
  (* src = "verilog/rtl/periph/CF_SPI.v:33.29-33.40" *)
  input [7:0] clk_divider;
  wire [7:0] clk_divider;
  (* src = "verilog/rtl/periph/CF_SPI.v:59.29-59.32" *)
  output csb;
  wire csb;
  (* src = "verilog/rtl/periph/CF_SPI.v:36.29-36.34" *)
  input [7:0] datai;
  wire [7:0] datai;
  (* src = "verilog/rtl/periph/CF_SPI.v:37.29-37.34" *)
  output [7:0] datao;
  wire [7:0] datao;
  (* src = "verilog/rtl/periph/CF_SPI.v:55.29-55.33" *)
  output done;
  wire done;
  (* src = "verilog/rtl/periph/CF_SPI.v:76.17-76.24" *)
  wire done_pe;
  (* src = "verilog/rtl/periph/CF_SPI.v:38.29-38.35" *)
  input enable;
  wire enable;
  (* src = "verilog/rtl/periph/CF_SPI.v:80.17-80.24" *)
  wire [7:0] f_datao;
  (* src = "verilog/rtl/periph/CF_SPI.v:57.29-57.33" *)
  input miso;
  wire miso;
  (* src = "verilog/rtl/periph/CF_SPI.v:58.29-58.33" *)
  output mosi;
  wire mosi;
  (* src = "verilog/rtl/periph/CF_SPI.v:35.29-35.31" *)
  input rd;
  wire rd;
  (* src = "verilog/rtl/periph/CF_SPI.v:30.29-30.34" *)
  input rst_n;
  wire rst_n;
  (* src = "verilog/rtl/periph/CF_SPI.v:42.29-42.37" *)
  output rx_empty;
  wire rx_empty;
  (* src = "verilog/rtl/periph/CF_SPI.v:39.29-39.34" *)
  input rx_en;
  wire rx_en;
  (* src = "verilog/rtl/periph/CF_SPI.v:40.29-40.37" *)
  input rx_flush;
  wire rx_flush;
  (* src = "verilog/rtl/periph/CF_SPI.v:43.29-43.36" *)
  output rx_full;
  wire rx_full;
  (* src = "verilog/rtl/periph/CF_SPI.v:45.29-45.37" *)
  output [3:0] rx_level;
  wire [3:0] rx_level;
  (* src = "verilog/rtl/periph/CF_SPI.v:44.29-44.43" *)
  output rx_level_above;
  wire rx_level_above;
  (* src = "verilog/rtl/periph/CF_SPI.v:78.17-78.22" *)
  wire rx_rd;
  (* src = "verilog/rtl/periph/CF_SPI.v:82.17-82.25" *)
  wire [7:0] rx_rdata;
  (* src = "verilog/rtl/periph/CF_SPI.v:41.29-41.41" *)
  input [3:0] rx_threshold;
  wire [3:0] rx_threshold;
  (* src = "verilog/rtl/periph/CF_SPI.v:81.17-81.25" *)
  wire [7:0] rx_wdata;
  (* src = "verilog/rtl/periph/CF_SPI.v:77.17-77.22" *)
  wire rx_wr;
  (* src = "verilog/rtl/periph/CF_SPI.v:61.29-61.33" *)
  output sclk;
  wire sclk;
  (* src = "verilog/rtl/periph/CF_SPI.v:69.17-69.23" *)
  wire spi_go;
  (* src = "verilog/rtl/periph/CF_SPI.v:60.29-60.31" *)
  input ss;
  wire ss;
  (* src = "verilog/rtl/periph/CF_SPI.v:49.29-49.37" *)
  output tx_empty;
  wire tx_empty;
  (* src = "verilog/rtl/periph/CF_SPI.v:47.29-47.37" *)
  input tx_flush;
  wire tx_flush;
  (* src = "verilog/rtl/periph/CF_SPI.v:50.29-50.36" *)
  output tx_full;
  wire tx_full;
  (* src = "verilog/rtl/periph/CF_SPI.v:52.29-52.37" *)
  output [3:0] tx_level;
  wire [3:0] tx_level;
  (* src = "verilog/rtl/periph/CF_SPI.v:51.29-51.43" *)
  output tx_level_below;
  wire tx_level_below;
  (* src = "verilog/rtl/periph/CF_SPI.v:68.17-68.22" *)
  wire tx_rd;
  (* src = "verilog/rtl/periph/CF_SPI.v:73.17-73.25" *)
  wire [7:0] tx_rdata;
  (* src = "verilog/rtl/periph/CF_SPI.v:48.29-48.41" *)
  input [3:0] tx_threshold;
  wire [3:0] tx_threshold;
  (* src = "verilog/rtl/periph/CF_SPI.v:72.17-72.25" *)
  wire [7:0] tx_wdata;
  (* src = "verilog/rtl/periph/CF_SPI.v:67.17-67.22" *)
  wire tx_wr;
  (* src = "verilog/rtl/periph/CF_SPI.v:34.29-34.31" *)
  input wr;
  wire wr;
  assign _00_ = tx_threshold[3] & ~(tx_level[3]);
  assign _01_ = ~(tx_threshold[3] ^ tx_level[3]);
  assign _02_ = tx_level[2] | ~(tx_threshold[2]);
  assign _03_ = _01_ & ~(_02_);
  assign _04_ = _03_ | _00_;
  assign _05_ = tx_threshold[2] ^ tx_level[2];
  assign _06_ = _01_ & ~(_05_);
  assign _07_ = tx_level[1] | ~(tx_threshold[1]);
  assign _08_ = tx_threshold[1] ^ tx_level[1];
  assign _09_ = tx_threshold[0] | ~(tx_level[0]);
  assign _10_ = _09_ & ~(_08_);
  assign _11_ = _07_ & ~(_10_);
  assign _12_ = _06_ & ~(_11_);
  assign _13_ = _12_ | _04_;
  assign _14_ = tx_threshold[0] ^ tx_level[0];
  assign _15_ = _14_ | _08_;
  assign _16_ = _06_ & ~(_15_);
  assign tx_level_below = _13_ & ~(_16_);
  assign csb = ~ss;
  assign _17_ = rx_level[3] & ~(rx_threshold[3]);
  assign _18_ = ~(rx_level[3] ^ rx_threshold[3]);
  assign _19_ = rx_threshold[2] | ~(rx_level[2]);
  assign _20_ = _18_ & ~(_19_);
  assign _21_ = _20_ | _17_;
  assign _22_ = rx_level[2] ^ rx_threshold[2];
  assign _23_ = _18_ & ~(_22_);
  assign _24_ = rx_threshold[1] | ~(rx_level[1]);
  assign _25_ = rx_level[1] ^ rx_threshold[1];
  assign _26_ = rx_level[0] | ~(rx_threshold[0]);
  assign _27_ = _26_ & ~(_25_);
  assign _28_ = _24_ & ~(_27_);
  assign _29_ = _23_ & ~(_28_);
  assign _30_ = _29_ | _21_;
  assign _31_ = rx_level[0] ^ rx_threshold[0];
  assign _32_ = _31_ | _25_;
  assign _33_ = _23_ & ~(_32_);
  assign rx_level_above = _30_ & ~(_33_);
  assign spi_go = ~(busy | tx_empty);
  assign rx_wr = done_pe & rx_en;
  (* module_not_derived = 32'd1 *)
  (* src = "verilog/rtl/periph/CF_SPI.v:90.17-94.6" *)
  cf_util_ped done_ed (
    .clk(clk),
    .in(done),
    .out(done_pe)
  );
  (* src = "verilog/rtl/periph/CF_SPI.v:99.7-110.6" *)
  \$paramod$35fd2251be7b04b97383c73c619c568cec4a51ab\cf_util_fifo  rx_fifo (
    .clk(clk),
    .empty(rx_empty),
    .flush(rx_flush),
    .full(rx_full),
    .level(rx_level),
    .rd(rd),
    .rdata(rx_rdata),
    .rst_n(rst_n),
    .wdata(f_datao),
    .wr(rx_wr)
  );
  (* src = "verilog/rtl/periph/CF_SPI.v:133.7-149.5" *)
  \$paramod$1b57ab934979e1dcff9d7d7aa75fd3de5f50b91e\spi_master  spi_master (
    .CPHA(CPHA),
    .CPOL(CPOL),
    .busy(busy),
    .clk(clk),
    .clk_divider(clk_divider),
    .datai(tx_rdata),
    .datao(f_datao),
    .din(mosi),
    .done(done),
    .dout(miso),
    .enable(enable),
    .go(spi_go),
    .resetb(rst_n),
    .sclk(sclk)
  );
  (* src = "verilog/rtl/periph/CF_SPI.v:115.7-126.6" *)
  \$paramod$35fd2251be7b04b97383c73c619c568cec4a51ab\cf_util_fifo  tx_fifo (
    .clk(clk),
    .empty(tx_empty),
    .flush(tx_flush),
    .full(tx_full),
    .level(tx_level),
    .rd(spi_go),
    .rdata(tx_rdata),
    .rst_n(rst_n),
    .wdata(datai),
    .wr(wr)
  );
  assign datao = rx_rdata;
  assign rx_rd = rd;
  assign rx_wdata = f_datao;
  assign tx_rd = spi_go;
  assign tx_wdata = datai;
  assign tx_wr = wr;
endmodule

(* dynports =  1  *)
(* hdlname = "sri" *)
(* src = "verilog/rtl/periph/spi_master.v:189.1-219.10" *)
module \$paramod\sri\DATA_WIDTH=s32'00000000000000000000000000001000 (clk, resetb, datai, sample, shift, din);
  (* src = "verilog/rtl/periph/spi_master.v:207.4-218.7" *)
  wire [7:0] _00_;
  wire _01_;
  (* src = "verilog/rtl/periph/spi_master.v:193.15-193.18" *)
  input clk;
  wire clk;
  (* src = "verilog/rtl/periph/spi_master.v:195.32-195.37" *)
  input [7:0] datai;
  wire [7:0] datai;
  (* src = "verilog/rtl/periph/spi_master.v:198.16-198.19" *)
  output din;
  wire din;
  (* src = "verilog/rtl/periph/spi_master.v:194.15-194.21" *)
  input resetb;
  wire resetb;
  (* src = "verilog/rtl/periph/spi_master.v:196.15-196.21" *)
  input sample;
  wire sample;
  (* src = "verilog/rtl/periph/spi_master.v:197.15-197.20" *)
  input shift;
  wire shift;
  (* src = "verilog/rtl/periph/spi_master.v:201.25-201.31" *)
  reg [7:0] sr_reg;
  assign _01_ = sample | shift;
  assign _00_[0] = datai[0] & sample;
  assign _00_[1] = sample ? datai[1] : sr_reg[0];
  assign _00_[2] = sample ? datai[2] : sr_reg[1];
  assign _00_[3] = sample ? datai[3] : sr_reg[2];
  assign _00_[4] = sample ? datai[4] : sr_reg[3];
  assign _00_[5] = sample ? datai[5] : sr_reg[4];
  assign _00_[6] = sample ? datai[6] : sr_reg[5];
  assign _00_[7] = sample ? datai[7] : sr_reg[6];
  (* src = "verilog/rtl/periph/spi_master.v:207.4-218.7" *)
  always @(posedge clk, negedge resetb)
    if (!resetb) sr_reg[0] <= 1'h0;
    else if (_01_) sr_reg[0] <= _00_[0];
  (* src = "verilog/rtl/periph/spi_master.v:207.4-218.7" *)
  always @(posedge clk, negedge resetb)
    if (!resetb) sr_reg[1] <= 1'h0;
    else if (_01_) sr_reg[1] <= _00_[1];
  (* src = "verilog/rtl/periph/spi_master.v:207.4-218.7" *)
  always @(posedge clk, negedge resetb)
    if (!resetb) sr_reg[2] <= 1'h0;
    else if (_01_) sr_reg[2] <= _00_[2];
  (* src = "verilog/rtl/periph/spi_master.v:207.4-218.7" *)
  always @(posedge clk, negedge resetb)
    if (!resetb) sr_reg[3] <= 1'h0;
    else if (_01_) sr_reg[3] <= _00_[3];
  (* src = "verilog/rtl/periph/spi_master.v:207.4-218.7" *)
  always @(posedge clk, negedge resetb)
    if (!resetb) sr_reg[4] <= 1'h0;
    else if (_01_) sr_reg[4] <= _00_[4];
  (* src = "verilog/rtl/periph/spi_master.v:207.4-218.7" *)
  always @(posedge clk, negedge resetb)
    if (!resetb) sr_reg[5] <= 1'h0;
    else if (_01_) sr_reg[5] <= _00_[5];
  (* src = "verilog/rtl/periph/spi_master.v:207.4-218.7" *)
  always @(posedge clk, negedge resetb)
    if (!resetb) sr_reg[6] <= 1'h0;
    else if (_01_) sr_reg[6] <= _00_[6];
  (* src = "verilog/rtl/periph/spi_master.v:207.4-218.7" *)
  always @(posedge clk, negedge resetb)
    if (!resetb) sr_reg[7] <= 1'h0;
    else if (_01_) sr_reg[7] <= _00_[7];
  assign din = sr_reg[7];
endmodule

(* dynports =  1  *)
(* hdlname = "sro" *)
(* src = "verilog/rtl/periph/spi_master.v:221.1-248.10" *)
module \$paramod\sro\DATA_WIDTH=s32'00000000000000000000000000001000 (clk, resetb, shift, dout, datao);
  (* src = "verilog/rtl/periph/spi_master.v:225.15-225.18" *)
  input clk;
  wire clk;
  (* src = "verilog/rtl/periph/spi_master.v:229.32-229.37" *)
  output [7:0] datao;
  reg [7:0] datao;
  (* src = "verilog/rtl/periph/spi_master.v:228.15-228.19" *)
  input dout;
  wire dout;
  (* src = "verilog/rtl/periph/spi_master.v:231.28-231.34" *)
  reg dout_s;
  (* src = "verilog/rtl/periph/spi_master.v:226.15-226.21" *)
  input resetb;
  wire resetb;
  (* src = "verilog/rtl/periph/spi_master.v:227.15-227.20" *)
  input shift;
  wire shift;
  (* src = "verilog/rtl/periph/spi_master.v:236.4-247.7" *)
  always @(posedge clk, negedge resetb)
    if (!resetb) dout_s <= 1'h0;
    else dout_s <= dout;
  (* src = "verilog/rtl/periph/spi_master.v:236.4-247.7" *)
  always @(posedge clk, negedge resetb)
    if (!resetb) datao[0] <= 1'h0;
    else if (shift) datao[0] <= dout_s;
  (* src = "verilog/rtl/periph/spi_master.v:236.4-247.7" *)
  always @(posedge clk, negedge resetb)
    if (!resetb) datao[1] <= 1'h0;
    else if (shift) datao[1] <= datao[0];
  (* src = "verilog/rtl/periph/spi_master.v:236.4-247.7" *)
  always @(posedge clk, negedge resetb)
    if (!resetb) datao[2] <= 1'h0;
    else if (shift) datao[2] <= datao[1];
  (* src = "verilog/rtl/periph/spi_master.v:236.4-247.7" *)
  always @(posedge clk, negedge resetb)
    if (!resetb) datao[3] <= 1'h0;
    else if (shift) datao[3] <= datao[2];
  (* src = "verilog/rtl/periph/spi_master.v:236.4-247.7" *)
  always @(posedge clk, negedge resetb)
    if (!resetb) datao[4] <= 1'h0;
    else if (shift) datao[4] <= datao[3];
  (* src = "verilog/rtl/periph/spi_master.v:236.4-247.7" *)
  always @(posedge clk, negedge resetb)
    if (!resetb) datao[5] <= 1'h0;
    else if (shift) datao[5] <= datao[4];
  (* src = "verilog/rtl/periph/spi_master.v:236.4-247.7" *)
  always @(posedge clk, negedge resetb)
    if (!resetb) datao[6] <= 1'h0;
    else if (shift) datao[6] <= datao[5];
  (* src = "verilog/rtl/periph/spi_master.v:236.4-247.7" *)
  always @(posedge clk, negedge resetb)
    if (!resetb) datao[7] <= 1'h0;
    else if (shift) datao[7] <= datao[6];
endmodule

(* dynports =  1  *)
(* src = "verilog/rtl/periph/CF_SPI_WB.v:24.1-295.10" *)
module CF_SPI_WB(clk_i, rst_i, adr_i, dat_i, dat_o, sel_i, cyc_i, stb_i, ack_o, we_i, IRQ, miso, mosi, csb, sclk);
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:189.3-192.25" *)
  wire [5:0] _000_;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:202.3-229.8" *)
  wire [5:0] _001_;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:154.3-157.56" *)
  wire _002_;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:171.3-174.56" *)
  wire _003_;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:287.3-290.24" *)
  wire _004_;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:116.14-116.55" *)
  wire _005_;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:124.14-124.56" *)
  wire _006_;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:130.14-130.54" *)
  wire _007_;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:149.14-149.69" *)
  wire _008_;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:166.14-166.69" *)
  wire _009_;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:179.14-179.56" *)
  wire _010_;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:188.14-188.54" *)
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  wire _216_;
  wire _217_;
  wire _218_;
  wire _219_;
  wire _220_;
  wire _221_;
  wire _222_;
  wire _223_;
  wire _224_;
  wire _225_;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:111.18-111.25" *)
  reg [1:0] CFG_REG;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:84.18-84.22" *)
  wire CPHA;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:83.18-83.22" *)
  wire CPOL;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:118.13-118.21" *)
  reg [2:0] CTRL_REG;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:63.13-63.21" *)
  reg GCLK_REG;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:182.16-182.22" *)
  reg [5:0] IC_REG;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:181.16-181.22" *)
  reg [5:0] IM_REG;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:39.25-39.28" *)
  output IRQ;
  wire IRQ;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:126.17-126.23" *)
  reg [7:0] PR_REG;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:183.16-183.23" *)
  reg [5:0] RIS_REG;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:199.14-199.17" *)
  wire RXA;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:109.18-109.29" *)
  wire [7:0] RXDATA_WIRE;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:196.14-196.17" *)
  wire RXE;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:197.14-197.17" *)
  wire RXF;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:152.13-152.30" *)
  reg RX_FIFO_FLUSH_REG;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:142.18-142.36" *)
  wire [3:0] RX_FIFO_LEVEL_WIRE;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:145.17-145.38" *)
  reg [3:0] RX_FIFO_THRESHOLD_REG;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:132.16-132.27" *)
  wire [7:0] STATUS_WIRE;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:198.14-198.17" *)
  wire TXB;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:194.14-194.17" *)
  wire TXE;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:195.14-195.17" *)
  wire TXF;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:169.13-169.30" *)
  reg TX_FIFO_FLUSH_REG;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:159.18-159.36" *)
  wire [3:0] TX_FIFO_LEVEL_WIRE;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:162.17-162.38" *)
  reg [3:0] TX_FIFO_THRESHOLD_REG;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:37.25-37.30" *)
  output ack_o;
  reg ack_o;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:31.25-31.30" *)
  input [31:0] adr_i;
  wire [31:0] adr_i;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:106.18-106.22" *)
  wire busy;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:75.18-75.21" *)
  wire clk;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:85.18-85.29" *)
  wire [7:0] clk_divider;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:64.8-64.13" *)
  wire clk_g;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:66.8-66.20" *)
  wire clk_gated_en;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:29.25-29.30" *)
  input clk_i;
  wire clk_i;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:42.25-42.28" *)
  output csb;
  wire csb;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:35.25-35.30" *)
  input cyc_i;
  wire cyc_i;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:32.25-32.30" *)
  input [31:0] dat_i;
  wire [31:0] dat_i;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:33.25-33.30" *)
  output [31:0] dat_o;
  wire [31:0] dat_o;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:88.18-88.23" *)
  wire [7:0] datai;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:89.18-89.23" *)
  wire [7:0] datao;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:105.18-105.22" *)
  wire done;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:104.18-104.24" *)
  wire enable;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:40.25-40.29" *)
  input miso;
  wire miso;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:41.25-41.29" *)
  output mosi;
  wire mosi;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:87.18-87.20" *)
  wire rd;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:30.25-30.30" *)
  input rst_i;
  wire rst_i;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:76.18-76.23" *)
  wire rst_n;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:93.18-93.26" *)
  wire rx_empty;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:90.18-90.23" *)
  wire rx_en;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:91.18-91.26" *)
  wire rx_flush;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:94.18-94.25" *)
  wire rx_full;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:96.18-96.26" *)
  wire [3:0] rx_level;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:95.18-95.32" *)
  wire rx_level_above;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:92.18-92.30" *)
  wire [3:0] rx_threshold;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:43.25-43.29" *)
  output sclk;
  wire sclk;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:34.25-34.30" *)
  input [3:0] sel_i;
  wire [3:0] sel_i;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:103.18-103.20" *)
  wire ss;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:36.25-36.30" *)
  input stb_i;
  wire stb_i;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:99.18-99.26" *)
  wire tx_empty;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:97.18-97.26" *)
  wire tx_flush;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:100.18-100.25" *)
  wire tx_full;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:102.18-102.26" *)
  wire [3:0] tx_level;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:101.18-101.32" *)
  wire tx_level_below;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:98.18-98.30" *)
  wire [3:0] tx_threshold;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:38.25-38.29" *)
  input we_i;
  wire we_i;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:86.18-86.20" *)
  wire wr;
  assign _018_ = IM_REG[0] & RIS_REG[0];
  assign _019_ = IM_REG[1] & RIS_REG[1];
  assign _020_ = _019_ | _018_;
  assign _021_ = IM_REG[2] & RIS_REG[2];
  assign _022_ = IM_REG[3] & RIS_REG[3];
  assign _023_ = _022_ | _021_;
  assign _024_ = _023_ | _020_;
  assign _025_ = IM_REG[4] & RIS_REG[4];
  assign _026_ = IM_REG[5] & RIS_REG[5];
  assign _027_ = _026_ | _025_;
  assign IRQ = _027_ | _024_;
  assign _012_ = IC_REG[2] | rx_empty;
  assign _013_ = IC_REG[3] | rx_full;
  assign _014_ = IC_REG[5] | rx_level_above;
  assign _015_ = IC_REG[0] | tx_empty;
  assign _016_ = IC_REG[1] | tx_full;
  assign _017_ = IC_REG[4] | tx_level_below;
  assign _028_ = ~(adr_i[5] | adr_i[4]);
  assign _029_ = adr_i[7] | adr_i[6];
  assign _030_ = _029_ | ~(_028_);
  assign _031_ = adr_i[1] | adr_i[0];
  assign _032_ = adr_i[2] | adr_i[3];
  assign _033_ = _032_ | _031_;
  assign _034_ = ~(_033_ | _030_);
  assign _035_ = ~(adr_i[9] | adr_i[8]);
  assign _036_ = adr_i[11] | adr_i[10];
  assign _037_ = _035_ & ~(_036_);
  assign _038_ = adr_i[13] | adr_i[12];
  assign _039_ = adr_i[15] | adr_i[14];
  assign _040_ = _039_ | _038_;
  assign _041_ = _037_ & ~(_040_);
  assign _042_ = _041_ & _034_;
  assign _043_ = adr_i[2] | ~(adr_i[3]);
  assign _044_ = _043_ | _031_;
  assign _045_ = _044_ | _030_;
  assign _046_ = _041_ & ~(_045_);
  assign _047_ = ~(adr_i[2] & adr_i[3]);
  assign _048_ = _047_ | _031_;
  assign _049_ = _048_ | _030_;
  assign _050_ = _041_ & ~(_049_);
  assign _051_ = adr_i[5] | ~(adr_i[4]);
  assign _052_ = _051_ | _029_;
  assign _053_ = _052_ | _033_;
  assign _054_ = _041_ & ~(_053_);
  assign _055_ = adr_i[3] | ~(adr_i[2]);
  assign _056_ = _055_ | _031_;
  assign _057_ = ~(_056_ | _052_);
  assign _058_ = _057_ & _041_;
  assign _059_ = ~(adr_i[13] & adr_i[12]);
  assign _060_ = ~(adr_i[15] & adr_i[14]);
  assign _061_ = _060_ | _059_;
  assign _062_ = ~(adr_i[11] & adr_i[10]);
  assign _063_ = adr_i[8] | ~(adr_i[9]);
  assign _064_ = _063_ | _062_;
  assign _065_ = _064_ | _061_;
  assign _066_ = _034_ & ~(_065_);
  assign _067_ = _056_ | _030_;
  assign _068_ = ~(_067_ | _065_);
  assign _069_ = ~(_065_ | _045_);
  assign _070_ = ~(_065_ | _053_);
  assign _071_ = _057_ & ~(_065_);
  assign _072_ = _052_ | _044_;
  assign _073_ = ~(_072_ | _065_);
  assign _074_ = ~(adr_i[9] & adr_i[8]);
  assign _075_ = _074_ | _062_;
  assign _076_ = _075_ | _061_;
  assign _077_ = _034_ & ~(_076_);
  assign _078_ = ~(_076_ | _067_);
  assign _079_ = ~(_076_ | _045_);
  assign _080_ = _076_ | _049_;
  assign _081_ = _080_ | IC_REG[0];
  assign _082_ = _079_ ? RIS_REG[0] : _081_;
  assign _083_ = _078_ ? _018_ : _082_;
  assign _084_ = _077_ ? IM_REG[0] : _083_;
  assign _085_ = _073_ ? TX_FIFO_FLUSH_REG : _084_;
  assign _086_ = _071_ ? TX_FIFO_THRESHOLD_REG[0] : _085_;
  assign _087_ = _070_ ? tx_level[0] : _086_;
  assign _088_ = _069_ ? RX_FIFO_FLUSH_REG : _087_;
  assign _089_ = _068_ ? RX_FIFO_THRESHOLD_REG[0] : _088_;
  assign _090_ = _066_ ? rx_level[0] : _089_;
  assign _091_ = _058_ ? tx_empty : _090_;
  assign _092_ = _054_ ? PR_REG[0] : _091_;
  assign _093_ = _050_ ? CTRL_REG[0] : _092_;
  assign _094_ = _046_ ? CFG_REG[0] : _093_;
  assign dat_o[0] = _042_ ? datao[0] : _094_;
  assign _095_ = ~IM_REG[1];
  assign _096_ = ~_019_;
  assign _097_ = ~RIS_REG[1];
  assign _001_[1] = ~IC_REG[1];
  assign _098_ = _001_[1] & ~(_080_);
  assign _099_ = _079_ ? _097_ : _098_;
  assign _100_ = _078_ ? _096_ : _099_;
  assign _101_ = _077_ ? _095_ : _100_;
  assign _102_ = ~(_101_ | _073_);
  assign _103_ = _071_ ? TX_FIFO_THRESHOLD_REG[1] : _102_;
  assign _104_ = _070_ ? tx_level[1] : _103_;
  assign _105_ = _104_ & ~(_069_);
  assign _106_ = _068_ ? RX_FIFO_THRESHOLD_REG[1] : _105_;
  assign _107_ = _066_ ? rx_level[1] : _106_;
  assign _108_ = _058_ ? tx_full : _107_;
  assign _109_ = _054_ ? PR_REG[1] : _108_;
  assign _110_ = _050_ ? CTRL_REG[1] : _109_;
  assign _111_ = _046_ ? CFG_REG[1] : _110_;
  assign dat_o[1] = _042_ ? datao[1] : _111_;
  assign _112_ = ~_046_;
  assign _113_ = ~CTRL_REG[2];
  assign _114_ = ~PR_REG[2];
  assign _115_ = ~rx_empty;
  assign _116_ = ~rx_level[2];
  assign _117_ = ~RX_FIFO_THRESHOLD_REG[2];
  assign _118_ = ~_069_;
  assign _119_ = ~IM_REG[2];
  assign _120_ = ~_021_;
  assign _121_ = ~RIS_REG[2];
  assign _001_[2] = ~IC_REG[2];
  assign _122_ = _001_[2] & ~(_080_);
  assign _123_ = _079_ ? _121_ : _122_;
  assign _124_ = _078_ ? _120_ : _123_;
  assign _125_ = _077_ ? _119_ : _124_;
  assign _126_ = ~(_125_ | _073_);
  assign _127_ = _071_ ? TX_FIFO_THRESHOLD_REG[2] : _126_;
  assign _128_ = _070_ ? tx_level[2] : _127_;
  assign _129_ = ~(_128_ & _118_);
  assign _130_ = _068_ ? _117_ : _129_;
  assign _131_ = _066_ ? _116_ : _130_;
  assign _132_ = _058_ ? _115_ : _131_;
  assign _133_ = _054_ ? _114_ : _132_;
  assign _134_ = _050_ ? _113_ : _133_;
  assign _135_ = _112_ & ~(_134_);
  assign dat_o[2] = _042_ ? datao[2] : _135_;
  assign _136_ = ~PR_REG[3];
  assign _137_ = ~rx_full;
  assign _138_ = ~rx_level[3];
  assign _139_ = ~RX_FIFO_THRESHOLD_REG[3];
  assign _140_ = ~IM_REG[3];
  assign _141_ = ~_022_;
  assign _142_ = ~RIS_REG[3];
  assign _001_[3] = ~IC_REG[3];
  assign _143_ = _001_[3] & ~(_080_);
  assign _144_ = _079_ ? _142_ : _143_;
  assign _145_ = _078_ ? _141_ : _144_;
  assign _146_ = _077_ ? _140_ : _145_;
  assign _147_ = ~(_146_ | _073_);
  assign _148_ = _071_ ? TX_FIFO_THRESHOLD_REG[3] : _147_;
  assign _149_ = _070_ ? tx_level[3] : _148_;
  assign _150_ = ~(_149_ & _118_);
  assign _151_ = _068_ ? _139_ : _150_;
  assign _152_ = _066_ ? _138_ : _151_;
  assign _153_ = _058_ ? _137_ : _152_;
  assign _154_ = _054_ ? _136_ : _153_;
  assign _155_ = _154_ | _050_;
  assign _156_ = _112_ & ~(_155_);
  assign dat_o[3] = _042_ ? datao[3] : _156_;
  assign _157_ = ~IM_REG[4];
  assign _158_ = ~_025_;
  assign _159_ = ~RIS_REG[4];
  assign _001_[4] = ~IC_REG[4];
  assign _160_ = _080_ | _001_[4];
  assign _161_ = _079_ ? _159_ : _160_;
  assign _162_ = _078_ ? _158_ : _161_;
  assign _163_ = _077_ ? _157_ : _162_;
  assign _164_ = _163_ | _073_;
  assign _165_ = _164_ | _071_;
  assign _166_ = _165_ | _070_;
  assign _167_ = _166_ | _069_;
  assign _168_ = _167_ | _068_;
  assign _169_ = ~(_168_ | _066_);
  assign _170_ = _058_ ? tx_level_below : _169_;
  assign _171_ = _054_ ? PR_REG[4] : _170_;
  assign _172_ = _050_ | ~(_171_);
  assign _173_ = _112_ & ~(_172_);
  assign dat_o[4] = _042_ ? datao[4] : _173_;
  assign _174_ = ~IM_REG[5];
  assign _175_ = ~_026_;
  assign _176_ = ~RIS_REG[5];
  assign _001_[5] = ~IC_REG[5];
  assign _177_ = _001_[5] & ~(_080_);
  assign _178_ = _079_ ? _176_ : _177_;
  assign _179_ = _078_ ? _175_ : _178_;
  assign _180_ = _077_ ? _174_ : _179_;
  assign _181_ = _180_ | _073_;
  assign _182_ = _181_ | _071_;
  assign _183_ = _182_ | _070_;
  assign _184_ = _183_ | _069_;
  assign _185_ = _184_ | _068_;
  assign _186_ = ~(_185_ | _066_);
  assign _187_ = _058_ ? rx_level_above : _186_;
  assign _188_ = _054_ ? PR_REG[5] : _187_;
  assign _189_ = _050_ | ~(_188_);
  assign _190_ = _112_ & ~(_189_);
  assign dat_o[5] = _042_ ? datao[5] : _190_;
  assign _191_ = ~PR_REG[6];
  assign _192_ = ~busy;
  assign _193_ = _079_ | ~(_080_);
  assign _194_ = _193_ | _078_;
  assign _195_ = _194_ | _077_;
  assign _196_ = _195_ | _073_;
  assign _197_ = _196_ | _071_;
  assign _198_ = _197_ | _070_;
  assign _199_ = _198_ | _069_;
  assign _200_ = _199_ | _068_;
  assign _201_ = _200_ | _066_;
  assign _202_ = _058_ ? _192_ : _201_;
  assign _203_ = _054_ ? _191_ : _202_;
  assign _204_ = _203_ | _050_;
  assign _205_ = _112_ & ~(_204_);
  assign dat_o[6] = _042_ ? datao[6] : _205_;
  assign _206_ = ~PR_REG[7];
  assign _207_ = ~done;
  assign _208_ = _058_ ? _207_ : _201_;
  assign _209_ = _054_ ? _206_ : _208_;
  assign _210_ = _209_ | _050_;
  assign _211_ = _112_ & ~(_210_);
  assign dat_o[7] = _042_ ? datao[7] : _211_;
  assign _212_ = _201_ | _058_;
  assign _213_ = _212_ | _054_;
  assign _214_ = _213_ | _050_;
  assign _215_ = _214_ | ~(_112_);
  assign dat_o[31] = ~(_215_ | _042_);
  assign _216_ = ~(stb_i & cyc_i);
  assign _217_ = _216_ | ~(we_i);
  assign _218_ = _217_ | _080_;
  assign _000_[0] = dat_i[0] & ~(_218_);
  assign _000_[1] = dat_i[1] & ~(_218_);
  assign _000_[2] = dat_i[2] & ~(_218_);
  assign _000_[3] = dat_i[3] & ~(_218_);
  assign _000_[4] = dat_i[4] & ~(_218_);
  assign _000_[5] = dat_i[5] & ~(_218_);
  assign rst_n = ~rst_i;
  assign _001_[0] = ~IC_REG[0];
  assign _005_ = _046_ & ~(_217_);
  assign _006_ = _050_ & ~(_217_);
  assign _007_ = _054_ & ~(_217_);
  assign _008_ = _068_ & ~(_217_);
  assign _009_ = _071_ & ~(_217_);
  assign _219_ = _076_ | _053_;
  assign _010_ = ~(_219_ | _217_);
  assign _011_ = _077_ & ~(_217_);
  assign _004_ = ~(_216_ | ack_o);
  assign _220_ = _216_ | we_i;
  assign _221_ = _220_ | ~(_042_);
  assign rd = ack_o & ~(_221_);
  assign _222_ = _067_ | ~(_041_);
  assign _223_ = _222_ | _217_;
  assign wr = ack_o & ~(_223_);
  assign _224_ = _217_ | ~(_073_);
  assign _003_ = dat_i[0] & ~(_224_);
  assign _225_ = _217_ | ~(_069_);
  assign _002_ = dat_i[0] & ~(_225_);
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:202.3-229.8" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) RIS_REG[3] <= 1'h0;
    else if (_013_) RIS_REG[3] <= _001_[3];
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:202.3-229.8" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) RIS_REG[5] <= 1'h0;
    else if (_014_) RIS_REG[5] <= _001_[5];
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:202.3-229.8" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) RIS_REG[0] <= 1'h0;
    else if (_015_) RIS_REG[0] <= _001_[0];
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:202.3-229.8" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) RIS_REG[1] <= 1'h0;
    else if (_016_) RIS_REG[1] <= _001_[1];
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:202.3-229.8" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) RIS_REG[4] <= 1'h0;
    else if (_017_) RIS_REG[4] <= _001_[4];
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:114.3-116.81" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) CFG_REG[0] <= 1'h0;
    else if (_005_) CFG_REG[0] <= dat_i[0];
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:114.3-116.81" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) CFG_REG[1] <= 1'h0;
    else if (_005_) CFG_REG[1] <= dat_i[1];
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:287.3-290.24" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) ack_o <= 1'h0;
    else ack_o <= _004_;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:189.3-192.25" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IC_REG[0] <= 1'h0;
    else IC_REG[0] <= _000_[0];
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:189.3-192.25" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IC_REG[1] <= 1'h0;
    else IC_REG[1] <= _000_[1];
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:189.3-192.25" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IC_REG[2] <= 1'h0;
    else IC_REG[2] <= _000_[2];
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:189.3-192.25" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IC_REG[3] <= 1'h0;
    else IC_REG[3] <= _000_[3];
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:189.3-192.25" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IC_REG[4] <= 1'h0;
    else IC_REG[4] <= _000_[4];
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:189.3-192.25" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IC_REG[5] <= 1'h0;
    else IC_REG[5] <= _000_[5];
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:202.3-229.8" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) RIS_REG[2] <= 1'h0;
    else if (_012_) RIS_REG[2] <= _001_[2];
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:186.3-188.79" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IM_REG[0] <= 1'h0;
    else if (_011_) IM_REG[0] <= dat_i[0];
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:186.3-188.79" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IM_REG[1] <= 1'h0;
    else if (_011_) IM_REG[1] <= dat_i[1];
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:186.3-188.79" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IM_REG[2] <= 1'h0;
    else if (_011_) IM_REG[2] <= dat_i[2];
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:186.3-188.79" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IM_REG[3] <= 1'h0;
    else if (_011_) IM_REG[3] <= dat_i[3];
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:186.3-188.79" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IM_REG[4] <= 1'h0;
    else if (_011_) IM_REG[4] <= dat_i[4];
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:186.3-188.79" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IM_REG[5] <= 1'h0;
    else if (_011_) IM_REG[5] <= dat_i[5];
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:171.3-174.56" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) TX_FIFO_FLUSH_REG <= 1'h0;
    else TX_FIFO_FLUSH_REG <= _003_;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:177.3-179.83" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) GCLK_REG <= 1'h0;
    else if (_010_) GCLK_REG <= dat_i[0];
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:154.3-157.56" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) RX_FIFO_FLUSH_REG <= 1'h0;
    else RX_FIFO_FLUSH_REG <= _002_;
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:164.3-167.47" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) TX_FIFO_THRESHOLD_REG[0] <= 1'h0;
    else if (_009_) TX_FIFO_THRESHOLD_REG[0] <= dat_i[0];
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:164.3-167.47" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) TX_FIFO_THRESHOLD_REG[1] <= 1'h0;
    else if (_009_) TX_FIFO_THRESHOLD_REG[1] <= dat_i[1];
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:164.3-167.47" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) TX_FIFO_THRESHOLD_REG[2] <= 1'h0;
    else if (_009_) TX_FIFO_THRESHOLD_REG[2] <= dat_i[2];
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:164.3-167.47" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) TX_FIFO_THRESHOLD_REG[3] <= 1'h0;
    else if (_009_) TX_FIFO_THRESHOLD_REG[3] <= dat_i[3];
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:147.3-150.47" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) RX_FIFO_THRESHOLD_REG[0] <= 1'h0;
    else if (_008_) RX_FIFO_THRESHOLD_REG[0] <= dat_i[0];
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:147.3-150.47" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) RX_FIFO_THRESHOLD_REG[1] <= 1'h0;
    else if (_008_) RX_FIFO_THRESHOLD_REG[1] <= dat_i[1];
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:147.3-150.47" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) RX_FIFO_THRESHOLD_REG[2] <= 1'h0;
    else if (_008_) RX_FIFO_THRESHOLD_REG[2] <= dat_i[2];
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:147.3-150.47" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) RX_FIFO_THRESHOLD_REG[3] <= 1'h0;
    else if (_008_) RX_FIFO_THRESHOLD_REG[3] <= dat_i[3];
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:128.3-130.81" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) PR_REG[0] <= 1'h0;
    else if (_007_) PR_REG[0] <= dat_i[0];
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:128.3-130.81" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) PR_REG[1] <= 1'h1;
    else if (_007_) PR_REG[1] <= dat_i[1];
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:128.3-130.81" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) PR_REG[2] <= 1'h0;
    else if (_007_) PR_REG[2] <= dat_i[2];
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:128.3-130.81" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) PR_REG[3] <= 1'h0;
    else if (_007_) PR_REG[3] <= dat_i[3];
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:128.3-130.81" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) PR_REG[4] <= 1'h0;
    else if (_007_) PR_REG[4] <= dat_i[4];
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:128.3-130.81" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) PR_REG[5] <= 1'h0;
    else if (_007_) PR_REG[5] <= dat_i[5];
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:128.3-130.81" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) PR_REG[6] <= 1'h0;
    else if (_007_) PR_REG[6] <= dat_i[6];
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:128.3-130.81" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) PR_REG[7] <= 1'h0;
    else if (_007_) PR_REG[7] <= dat_i[7];
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:122.3-124.83" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) CTRL_REG[0] <= 1'h0;
    else if (_006_) CTRL_REG[0] <= dat_i[0];
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:122.3-124.83" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) CTRL_REG[1] <= 1'h0;
    else if (_006_) CTRL_REG[1] <= dat_i[1];
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:122.3-124.83" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) CTRL_REG[2] <= 1'h0;
    else if (_006_) CTRL_REG[2] <= dat_i[2];
  (* module_not_derived = 32'd1 *)
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:67.23-73.4" *)
  cf_util_gating_cell clk_gate_cell (
    .clk(clk_i),
    .clk_en(GCLK_REG),
    .clk_o(clk)
  );
  (* src = "verilog/rtl/periph/CF_SPI_WB.v:236.5-267.4" *)
  \$paramod$c472ad5b357594777851f1f1c93c46d2cb71eced\CF_SPI  instance_to_wrap (
    .CPHA(CFG_REG[1]),
    .CPOL(CFG_REG[0]),
    .busy(busy),
    .clk(clk),
    .clk_divider(PR_REG),
    .csb(csb),
    .datai(dat_i[7:0]),
    .datao(datao),
    .done(done),
    .enable(CTRL_REG[1]),
    .miso(miso),
    .mosi(mosi),
    .rd(rd),
    .rst_n(rst_n),
    .rx_empty(rx_empty),
    .rx_en(CTRL_REG[2]),
    .rx_flush(RX_FIFO_FLUSH_REG),
    .rx_full(rx_full),
    .rx_level(rx_level),
    .rx_level_above(rx_level_above),
    .rx_threshold(RX_FIFO_THRESHOLD_REG),
    .sclk(sclk),
    .ss(CTRL_REG[0]),
    .tx_empty(tx_empty),
    .tx_flush(TX_FIFO_FLUSH_REG),
    .tx_full(tx_full),
    .tx_level(tx_level),
    .tx_level_below(tx_level_below),
    .tx_threshold(TX_FIFO_THRESHOLD_REG),
    .wr(wr)
  );
  assign CPHA = CFG_REG[1];
  assign CPOL = CFG_REG[0];
  assign RXA = rx_level_above;
  assign RXDATA_WIRE = datao;
  assign RXE = rx_empty;
  assign RXF = rx_full;
  assign RX_FIFO_LEVEL_WIRE = rx_level;
  assign STATUS_WIRE = { done, busy, rx_level_above, tx_level_below, rx_full, rx_empty, tx_full, tx_empty };
  assign TXB = tx_level_below;
  assign TXE = tx_empty;
  assign TXF = tx_full;
  assign TX_FIFO_LEVEL_WIRE = tx_level;
  assign clk_divider = PR_REG;
  assign clk_g = clk;
  assign clk_gated_en = GCLK_REG;
  assign dat_o[30:8] = { dat_o[31], 1'h0, dat_o[31], dat_o[31], dat_o[31], dat_o[31], 1'h0, dat_o[31], 1'h0, dat_o[31], 1'h0, dat_o[31], dat_o[31], 1'h0, dat_o[31], dat_o[31], 1'h0, dat_o[31], dat_o[31], dat_o[31], dat_o[31], dat_o[31], 1'h0 };
  assign datai = dat_i[7:0];
  assign enable = CTRL_REG[1];
  assign rx_en = CTRL_REG[2];
  assign rx_flush = RX_FIFO_FLUSH_REG;
  assign rx_threshold = RX_FIFO_THRESHOLD_REG;
  assign ss = CTRL_REG[0];
  assign tx_flush = TX_FIFO_FLUSH_REG;
  assign tx_threshold = TX_FIFO_THRESHOLD_REG;
endmodule

(* src = "verilog/rtl/periph/EF_GPIO8.v:20.1-113.10" *)
module EF_GPIO8(clk, rst_n, io_in, bus_in, io_out, bus_out, io_oe, bus_oe, pin0_hi, pin1_hi, pin2_hi, pin3_hi, pin4_hi, pin5_hi, pin6_hi, pin7_hi, pin0_lo, pin1_lo, pin2_lo, pin3_lo, pin4_lo
, pin5_lo, pin6_lo, pin7_lo, pin0_pe, pin1_pe, pin2_pe, pin3_pe, pin4_pe, pin5_pe, pin6_pe, pin7_pe, pin0_ne, pin1_ne, pin2_ne, pin3_ne, pin4_ne, pin5_ne, pin6_ne, pin7_ne);
  (* src = "verilog/rtl/periph/EF_GPIO8.v:24.25-24.31" *)
  output [7:0] bus_in;
  wire [7:0] bus_in;
  (* src = "verilog/rtl/periph/EF_GPIO8.v:28.25-28.31" *)
  input [7:0] bus_oe;
  wire [7:0] bus_oe;
  (* src = "verilog/rtl/periph/EF_GPIO8.v:26.25-26.32" *)
  input [7:0] bus_out;
  wire [7:0] bus_out;
  (* src = "verilog/rtl/periph/EF_GPIO8.v:21.25-21.28" *)
  input clk;
  wire clk;
  (* src = "verilog/rtl/periph/EF_GPIO8.v:23.25-23.30" *)
  input [7:0] io_in;
  wire [7:0] io_in;
  (* src = "verilog/rtl/periph/EF_GPIO8.v:27.25-27.30" *)
  output [7:0] io_oe;
  wire [7:0] io_oe;
  (* src = "verilog/rtl/periph/EF_GPIO8.v:25.25-25.31" *)
  output [7:0] io_out;
  wire [7:0] io_out;
  (* src = "verilog/rtl/periph/EF_GPIO8.v:30.17-30.24" *)
  output pin0_hi;
  wire pin0_hi;
  (* src = "verilog/rtl/periph/EF_GPIO8.v:39.17-39.24" *)
  output pin0_lo;
  wire pin0_lo;
  (* src = "verilog/rtl/periph/EF_GPIO8.v:57.17-57.24" *)
  output pin0_ne;
  wire pin0_ne;
  (* src = "verilog/rtl/periph/EF_GPIO8.v:48.17-48.24" *)
  output pin0_pe;
  wire pin0_pe;
  (* src = "verilog/rtl/periph/EF_GPIO8.v:31.17-31.24" *)
  output pin1_hi;
  wire pin1_hi;
  (* src = "verilog/rtl/periph/EF_GPIO8.v:40.17-40.24" *)
  output pin1_lo;
  wire pin1_lo;
  (* src = "verilog/rtl/periph/EF_GPIO8.v:58.17-58.24" *)
  output pin1_ne;
  wire pin1_ne;
  (* src = "verilog/rtl/periph/EF_GPIO8.v:49.17-49.24" *)
  output pin1_pe;
  wire pin1_pe;
  (* src = "verilog/rtl/periph/EF_GPIO8.v:32.17-32.24" *)
  output pin2_hi;
  wire pin2_hi;
  (* src = "verilog/rtl/periph/EF_GPIO8.v:41.17-41.24" *)
  output pin2_lo;
  wire pin2_lo;
  (* src = "verilog/rtl/periph/EF_GPIO8.v:59.17-59.24" *)
  output pin2_ne;
  wire pin2_ne;
  (* src = "verilog/rtl/periph/EF_GPIO8.v:50.17-50.24" *)
  output pin2_pe;
  wire pin2_pe;
  (* src = "verilog/rtl/periph/EF_GPIO8.v:33.17-33.24" *)
  output pin3_hi;
  wire pin3_hi;
  (* src = "verilog/rtl/periph/EF_GPIO8.v:42.17-42.24" *)
  output pin3_lo;
  wire pin3_lo;
  (* src = "verilog/rtl/periph/EF_GPIO8.v:60.17-60.24" *)
  output pin3_ne;
  wire pin3_ne;
  (* src = "verilog/rtl/periph/EF_GPIO8.v:51.17-51.24" *)
  output pin3_pe;
  wire pin3_pe;
  (* src = "verilog/rtl/periph/EF_GPIO8.v:34.17-34.24" *)
  output pin4_hi;
  wire pin4_hi;
  (* src = "verilog/rtl/periph/EF_GPIO8.v:43.17-43.24" *)
  output pin4_lo;
  wire pin4_lo;
  (* src = "verilog/rtl/periph/EF_GPIO8.v:61.17-61.24" *)
  output pin4_ne;
  wire pin4_ne;
  (* src = "verilog/rtl/periph/EF_GPIO8.v:52.17-52.24" *)
  output pin4_pe;
  wire pin4_pe;
  (* src = "verilog/rtl/periph/EF_GPIO8.v:35.17-35.24" *)
  output pin5_hi;
  wire pin5_hi;
  (* src = "verilog/rtl/periph/EF_GPIO8.v:44.17-44.24" *)
  output pin5_lo;
  wire pin5_lo;
  (* src = "verilog/rtl/periph/EF_GPIO8.v:62.17-62.24" *)
  output pin5_ne;
  wire pin5_ne;
  (* src = "verilog/rtl/periph/EF_GPIO8.v:53.17-53.24" *)
  output pin5_pe;
  wire pin5_pe;
  (* src = "verilog/rtl/periph/EF_GPIO8.v:36.17-36.24" *)
  output pin6_hi;
  wire pin6_hi;
  (* src = "verilog/rtl/periph/EF_GPIO8.v:45.17-45.24" *)
  output pin6_lo;
  wire pin6_lo;
  (* src = "verilog/rtl/periph/EF_GPIO8.v:63.17-63.24" *)
  output pin6_ne;
  wire pin6_ne;
  (* src = "verilog/rtl/periph/EF_GPIO8.v:54.17-54.24" *)
  output pin6_pe;
  wire pin6_pe;
  (* src = "verilog/rtl/periph/EF_GPIO8.v:37.17-37.24" *)
  output pin7_hi;
  wire pin7_hi;
  (* src = "verilog/rtl/periph/EF_GPIO8.v:46.17-46.24" *)
  output pin7_lo;
  wire pin7_lo;
  (* src = "verilog/rtl/periph/EF_GPIO8.v:64.17-64.24" *)
  output pin7_ne;
  wire pin7_ne;
  (* src = "verilog/rtl/periph/EF_GPIO8.v:55.17-55.24" *)
  output pin7_pe;
  wire pin7_pe;
  (* src = "verilog/rtl/periph/EF_GPIO8.v:22.25-22.30" *)
  input rst_n;
  wire rst_n;
  (* src = "verilog/rtl/periph/EF_GPIO8.v:67.16-67.26" *)
  wire [7:0] sync_io_in;
  assign pin0_lo = ~pin0_hi;
  assign pin1_lo = ~pin1_hi;
  assign pin2_lo = ~pin2_hi;
  assign pin3_lo = ~pin3_hi;
  assign pin4_lo = ~pin4_hi;
  assign pin5_lo = ~pin5_hi;
  assign pin6_lo = ~pin6_hi;
  assign pin7_lo = ~pin7_hi;
  (* module_not_derived = 32'd1 *)
  (* src = "verilog/rtl/periph/EF_GPIO8.v:102.16-102.68" *)
  aucohl_ned ned_0 (
    .clk(clk),
    .in(pin0_hi),
    .out(pin0_ne)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "verilog/rtl/periph/EF_GPIO8.v:103.16-103.68" *)
  aucohl_ned ned_1 (
    .clk(clk),
    .in(pin1_hi),
    .out(pin1_ne)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "verilog/rtl/periph/EF_GPIO8.v:104.16-104.68" *)
  aucohl_ned ned_2 (
    .clk(clk),
    .in(pin2_hi),
    .out(pin2_ne)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "verilog/rtl/periph/EF_GPIO8.v:105.16-105.68" *)
  aucohl_ned ned_3 (
    .clk(clk),
    .in(pin3_hi),
    .out(pin3_ne)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "verilog/rtl/periph/EF_GPIO8.v:106.16-106.68" *)
  aucohl_ned ned_4 (
    .clk(clk),
    .in(pin4_hi),
    .out(pin4_ne)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "verilog/rtl/periph/EF_GPIO8.v:107.16-107.68" *)
  aucohl_ned ned_5 (
    .clk(clk),
    .in(pin5_hi),
    .out(pin5_ne)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "verilog/rtl/periph/EF_GPIO8.v:108.16-108.68" *)
  aucohl_ned ned_6 (
    .clk(clk),
    .in(pin6_hi),
    .out(pin6_ne)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "verilog/rtl/periph/EF_GPIO8.v:109.16-109.68" *)
  aucohl_ned ned_7 (
    .clk(clk),
    .in(pin7_hi),
    .out(pin7_ne)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "verilog/rtl/periph/EF_GPIO8.v:93.16-93.68" *)
  aucohl_ped ped_0 (
    .clk(clk),
    .in(pin0_hi),
    .out(pin0_pe)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "verilog/rtl/periph/EF_GPIO8.v:94.16-94.68" *)
  aucohl_ped ped_1 (
    .clk(clk),
    .in(pin1_hi),
    .out(pin1_pe)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "verilog/rtl/periph/EF_GPIO8.v:95.16-95.68" *)
  aucohl_ped ped_2 (
    .clk(clk),
    .in(pin2_hi),
    .out(pin2_pe)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "verilog/rtl/periph/EF_GPIO8.v:96.16-96.68" *)
  aucohl_ped ped_3 (
    .clk(clk),
    .in(pin3_hi),
    .out(pin3_pe)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "verilog/rtl/periph/EF_GPIO8.v:97.16-97.68" *)
  aucohl_ped ped_4 (
    .clk(clk),
    .in(pin4_hi),
    .out(pin4_pe)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "verilog/rtl/periph/EF_GPIO8.v:98.16-98.68" *)
  aucohl_ped ped_5 (
    .clk(clk),
    .in(pin5_hi),
    .out(pin5_pe)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "verilog/rtl/periph/EF_GPIO8.v:99.16-99.68" *)
  aucohl_ped ped_6 (
    .clk(clk),
    .in(pin6_hi),
    .out(pin6_pe)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "verilog/rtl/periph/EF_GPIO8.v:100.16-100.68" *)
  aucohl_ped ped_7 (
    .clk(clk),
    .in(pin7_hi),
    .out(pin7_pe)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "verilog/rtl/periph/EF_GPIO8.v:69.17-69.76" *)
  aucohl_sync \synchronizer[0]  (
    .clk(clk),
    .in(io_in[0]),
    .out(pin0_hi)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "verilog/rtl/periph/EF_GPIO8.v:69.17-69.76" *)
  aucohl_sync \synchronizer[1]  (
    .clk(clk),
    .in(io_in[1]),
    .out(pin1_hi)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "verilog/rtl/periph/EF_GPIO8.v:69.17-69.76" *)
  aucohl_sync \synchronizer[2]  (
    .clk(clk),
    .in(io_in[2]),
    .out(pin2_hi)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "verilog/rtl/periph/EF_GPIO8.v:69.17-69.76" *)
  aucohl_sync \synchronizer[3]  (
    .clk(clk),
    .in(io_in[3]),
    .out(pin3_hi)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "verilog/rtl/periph/EF_GPIO8.v:69.17-69.76" *)
  aucohl_sync \synchronizer[4]  (
    .clk(clk),
    .in(io_in[4]),
    .out(pin4_hi)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "verilog/rtl/periph/EF_GPIO8.v:69.17-69.76" *)
  aucohl_sync \synchronizer[5]  (
    .clk(clk),
    .in(io_in[5]),
    .out(pin5_hi)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "verilog/rtl/periph/EF_GPIO8.v:69.17-69.76" *)
  aucohl_sync \synchronizer[6]  (
    .clk(clk),
    .in(io_in[6]),
    .out(pin6_hi)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "verilog/rtl/periph/EF_GPIO8.v:69.17-69.76" *)
  aucohl_sync \synchronizer[7]  (
    .clk(clk),
    .in(io_in[7]),
    .out(pin7_hi)
  );
  assign bus_in = { pin7_hi, pin6_hi, pin5_hi, pin4_hi, pin3_hi, pin2_hi, pin1_hi, pin0_hi };
  assign io_oe = bus_oe;
  assign io_out = bus_out;
  assign sync_io_in = { pin7_hi, pin6_hi, pin5_hi, pin4_hi, pin3_hi, pin2_hi, pin1_hi, pin0_hi };
endmodule

(* src = "verilog/rtl/periph/EF_GPIO8_WB.v:26.1-316.10" *)
module EF_GPIO8_WB(ext_clk, clk_i, rst_i, adr_i, dat_i, dat_o, sel_i, cyc_i, stb_i, ack_o, we_i, IRQ, io_in, io_out, io_oe);
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:114.2-118.61" *)
  wire [31:0] _0000_;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:155.2-252.5" *)
  wire [31:0] _0001_;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:309.2-315.18" *)
  wire _0002_;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:102.77-102.118" *)
  wire _0003_;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:106.75-106.114" *)
  wire _0004_;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:113.74-113.112" *)
  wire _0005_;
  wire _0006_;
  wire _0007_;
  wire _0008_;
  wire _0009_;
  wire _0010_;
  wire _0011_;
  wire _0012_;
  wire _0013_;
  wire _0014_;
  wire _0015_;
  wire _0016_;
  wire _0017_;
  wire _0018_;
  wire _0019_;
  wire _0020_;
  wire _0021_;
  wire _0022_;
  wire _0023_;
  wire _0024_;
  wire _0025_;
  wire _0026_;
  wire _0027_;
  wire _0028_;
  wire _0029_;
  wire _0030_;
  wire _0031_;
  wire _0032_;
  wire _0033_;
  wire _0034_;
  wire _0035_;
  wire _0036_;
  wire _0037_;
  wire _0038_;
  wire _0039_;
  wire _0040_;
  wire _0041_;
  wire _0042_;
  wire _0043_;
  wire _0044_;
  wire _0045_;
  wire _0046_;
  wire _0047_;
  wire _0048_;
  wire _0049_;
  wire _0050_;
  wire _0051_;
  wire _0052_;
  wire _0053_;
  wire _0054_;
  wire _0055_;
  wire _0056_;
  wire _0057_;
  wire _0058_;
  wire _0059_;
  wire _0060_;
  wire _0061_;
  wire _0062_;
  wire _0063_;
  wire _0064_;
  wire _0065_;
  wire _0066_;
  wire _0067_;
  wire _0068_;
  wire _0069_;
  wire _0070_;
  wire _0071_;
  wire _0072_;
  wire _0073_;
  wire _0074_;
  wire _0075_;
  wire _0076_;
  wire _0077_;
  wire _0078_;
  wire _0079_;
  wire _0080_;
  wire _0081_;
  wire _0082_;
  wire _0083_;
  wire _0084_;
  wire _0085_;
  wire _0086_;
  wire _0087_;
  wire _0088_;
  wire _0089_;
  wire _0090_;
  wire _0091_;
  wire _0092_;
  wire _0093_;
  wire _0094_;
  wire _0095_;
  wire _0096_;
  wire _0097_;
  wire _0098_;
  wire _0099_;
  wire _0100_;
  wire _0101_;
  wire _0102_;
  wire _0103_;
  wire _0104_;
  wire _0105_;
  wire _0106_;
  wire _0107_;
  wire _0108_;
  wire _0109_;
  wire _0110_;
  wire _0111_;
  wire _0112_;
  wire _0113_;
  wire _0114_;
  wire _0115_;
  wire _0116_;
  wire _0117_;
  wire _0118_;
  wire _0119_;
  wire _0120_;
  wire _0121_;
  wire _0122_;
  wire _0123_;
  wire _0124_;
  wire _0125_;
  wire _0126_;
  wire _0127_;
  wire _0128_;
  wire _0129_;
  wire _0130_;
  wire _0131_;
  wire _0132_;
  wire _0133_;
  wire _0134_;
  wire _0135_;
  wire _0136_;
  wire _0137_;
  wire _0138_;
  wire _0139_;
  wire _0140_;
  wire _0141_;
  wire _0142_;
  wire _0143_;
  wire _0144_;
  wire _0145_;
  wire _0146_;
  wire _0147_;
  wire _0148_;
  wire _0149_;
  wire _0150_;
  wire _0151_;
  wire _0152_;
  wire _0153_;
  wire _0154_;
  wire _0155_;
  wire _0156_;
  wire _0157_;
  wire _0158_;
  wire _0159_;
  wire _0160_;
  wire _0161_;
  wire _0162_;
  wire _0163_;
  wire _0164_;
  wire _0165_;
  wire _0166_;
  wire _0167_;
  wire _0168_;
  wire _0169_;
  wire _0170_;
  wire _0171_;
  wire _0172_;
  wire _0173_;
  wire _0174_;
  wire _0175_;
  wire _0176_;
  wire _0177_;
  wire _0178_;
  wire _0179_;
  wire _0180_;
  wire _0181_;
  wire _0182_;
  wire _0183_;
  wire _0184_;
  wire _0185_;
  wire _0186_;
  wire _0187_;
  wire _0188_;
  wire _0189_;
  wire _0190_;
  wire _0191_;
  wire _0192_;
  wire _0193_;
  wire _0194_;
  wire _0195_;
  wire _0196_;
  wire _0197_;
  wire _0198_;
  wire _0199_;
  wire _0200_;
  wire _0201_;
  wire _0202_;
  wire _0203_;
  wire _0204_;
  wire _0205_;
  wire _0206_;
  wire _0207_;
  wire _0208_;
  wire _0209_;
  wire _0210_;
  wire _0211_;
  wire _0212_;
  wire _0213_;
  wire _0214_;
  wire _0215_;
  wire _0216_;
  wire _0217_;
  wire _0218_;
  wire _0219_;
  wire _0220_;
  wire _0221_;
  wire _0222_;
  wire _0223_;
  wire _0224_;
  wire _0225_;
  wire _0226_;
  wire _0227_;
  wire _0228_;
  wire _0229_;
  wire _0230_;
  wire _0231_;
  wire _0232_;
  wire _0233_;
  wire _0234_;
  wire _0235_;
  wire _0236_;
  wire _0237_;
  wire _0238_;
  wire _0239_;
  wire _0240_;
  wire _0241_;
  wire _0242_;
  wire _0243_;
  wire _0244_;
  wire _0245_;
  wire _0246_;
  wire _0247_;
  wire _0248_;
  wire _0249_;
  wire _0250_;
  wire _0251_;
  wire _0252_;
  wire _0253_;
  wire _0254_;
  wire _0255_;
  wire _0256_;
  wire _0257_;
  wire _0258_;
  wire _0259_;
  wire _0260_;
  wire _0261_;
  wire _0262_;
  wire _0263_;
  wire _0264_;
  wire _0265_;
  wire _0266_;
  wire _0267_;
  wire _0268_;
  wire _0269_;
  wire _0270_;
  wire _0271_;
  wire _0272_;
  wire _0273_;
  wire _0274_;
  wire _0275_;
  wire _0276_;
  wire _0277_;
  wire _0278_;
  wire _0279_;
  wire _0280_;
  wire _0281_;
  wire _0282_;
  wire _0283_;
  wire _0284_;
  wire _0285_;
  wire _0286_;
  wire _0287_;
  wire _0288_;
  wire _0289_;
  wire _0290_;
  wire _0291_;
  wire _0292_;
  wire _0293_;
  wire _0294_;
  wire _0295_;
  wire _0296_;
  wire _0297_;
  wire _0298_;
  wire _0299_;
  wire _0300_;
  wire _0301_;
  wire _0302_;
  wire _0303_;
  wire _0304_;
  wire _0305_;
  wire _0306_;
  wire _0307_;
  wire _0308_;
  wire _0309_;
  wire _0310_;
  wire _0311_;
  wire _0312_;
  wire _0313_;
  wire _0314_;
  wire _0315_;
  wire _0316_;
  wire _0317_;
  wire _0318_;
  wire _0319_;
  wire _0320_;
  wire _0321_;
  wire _0322_;
  wire _0323_;
  wire _0324_;
  wire _0325_;
  wire _0326_;
  wire _0327_;
  wire _0328_;
  wire _0329_;
  wire _0330_;
  wire _0331_;
  wire _0332_;
  wire _0333_;
  wire _0334_;
  wire _0335_;
  wire _0336_;
  wire _0337_;
  wire _0338_;
  wire _0339_;
  wire _0340_;
  wire _0341_;
  wire _0342_;
  wire _0343_;
  wire _0344_;
  wire _0345_;
  wire _0346_;
  wire _0347_;
  wire _0348_;
  wire _0349_;
  wire _0350_;
  wire _0351_;
  wire _0352_;
  wire _0353_;
  wire _0354_;
  wire _0355_;
  wire _0356_;
  wire _0357_;
  wire _0358_;
  wire _0359_;
  wire _0360_;
  wire _0361_;
  wire _0362_;
  wire _0363_;
  wire _0364_;
  wire _0365_;
  wire _0366_;
  wire _0367_;
  wire _0368_;
  wire _0369_;
  wire _0370_;
  wire _0371_;
  wire _0372_;
  wire _0373_;
  wire _0374_;
  wire _0375_;
  wire _0376_;
  wire _0377_;
  wire _0378_;
  wire _0379_;
  wire _0380_;
  wire _0381_;
  wire _0382_;
  wire _0383_;
  wire _0384_;
  wire _0385_;
  wire _0386_;
  wire _0387_;
  wire _0388_;
  wire _0389_;
  wire _0390_;
  wire _0391_;
  wire _0392_;
  wire _0393_;
  wire _0394_;
  wire _0395_;
  wire _0396_;
  wire _0397_;
  wire _0398_;
  wire _0399_;
  wire _0400_;
  wire _0401_;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:97.15-97.25" *)
  wire [7:0] DATAI_WIRE;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:100.14-100.23" *)
  reg [7:0] DATAO_REG;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:104.14-104.21" *)
  reg [7:0] DIR_REG;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:109.13-109.19" *)
  reg [31:0] IC_REG;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:108.13-108.19" *)
  reg [31:0] IM_REG;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:38.65-38.68" *)
  output IRQ;
  wire IRQ;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:120.13-120.17" *)
  wire P0HI;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:128.13-128.17" *)
  wire P0LO;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:144.13-144.17" *)
  wire P0NE;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:136.13-136.17" *)
  wire P0PE;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:121.13-121.17" *)
  wire P1HI;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:129.13-129.17" *)
  wire P1LO;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:145.13-145.17" *)
  wire P1NE;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:137.13-137.17" *)
  wire P1PE;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:122.13-122.17" *)
  wire P2HI;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:130.13-130.17" *)
  wire P2LO;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:146.13-146.17" *)
  wire P2NE;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:138.13-138.17" *)
  wire P2PE;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:123.13-123.17" *)
  wire P3HI;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:131.13-131.17" *)
  wire P3LO;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:147.13-147.17" *)
  wire P3NE;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:139.13-139.17" *)
  wire P3PE;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:124.13-124.17" *)
  wire P4HI;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:132.13-132.17" *)
  wire P4LO;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:148.13-148.17" *)
  wire P4NE;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:140.13-140.17" *)
  wire P4PE;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:125.13-125.17" *)
  wire P5HI;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:133.13-133.17" *)
  wire P5LO;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:149.13-149.17" *)
  wire P5NE;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:141.13-141.17" *)
  wire P5PE;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:126.13-126.17" *)
  wire P6HI;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:134.13-134.17" *)
  wire P6LO;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:150.13-150.17" *)
  wire P6NE;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:142.13-142.17" *)
  wire P6PE;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:127.13-127.17" *)
  wire P7HI;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:135.13-135.17" *)
  wire P7LO;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:151.13-151.17" *)
  wire P7NE;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:143.13-143.17" *)
  wire P7PE;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:110.13-110.20" *)
  reg [31:0] RIS_REG;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:36.65-36.70" *)
  output ack_o;
  reg ack_o;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:30.65-30.70" *)
  input [31:0] adr_i;
  wire [31:0] adr_i;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:61.15-61.21" *)
  wire [7:0] bus_in;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:63.15-63.21" *)
  wire [7:0] bus_oe;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:62.15-62.22" *)
  wire [7:0] bus_out;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:52.8-52.11" *)
  wire clk;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:28.65-28.70" *)
  input clk_i;
  wire clk_i;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:34.65-34.70" *)
  input cyc_i;
  wire cyc_i;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:31.65-31.70" *)
  input [31:0] dat_i;
  wire [31:0] dat_i;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:32.65-32.70" *)
  output [31:0] dat_o;
  wire [31:0] dat_o;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:27.26-27.33" *)
  input ext_clk;
  wire ext_clk;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:39.14-39.19" *)
  input [7:0] io_in;
  wire [7:0] io_in;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:41.15-41.20" *)
  output [7:0] io_oe;
  wire [7:0] io_oe;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:40.15-40.21" *)
  output [7:0] io_out;
  wire [7:0] io_out;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:64.15-64.22" *)
  wire pin0_hi;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:72.15-72.22" *)
  wire pin0_lo;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:88.15-88.22" *)
  wire pin0_ne;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:80.15-80.22" *)
  wire pin0_pe;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:65.15-65.22" *)
  wire pin1_hi;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:73.15-73.22" *)
  wire pin1_lo;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:89.15-89.22" *)
  wire pin1_ne;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:81.15-81.22" *)
  wire pin1_pe;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:66.15-66.22" *)
  wire pin2_hi;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:74.15-74.22" *)
  wire pin2_lo;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:90.15-90.22" *)
  wire pin2_ne;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:82.15-82.22" *)
  wire pin2_pe;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:67.15-67.22" *)
  wire pin3_hi;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:75.15-75.22" *)
  wire pin3_lo;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:91.15-91.22" *)
  wire pin3_ne;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:83.15-83.22" *)
  wire pin3_pe;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:68.15-68.22" *)
  wire pin4_hi;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:76.15-76.22" *)
  wire pin4_lo;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:92.15-92.22" *)
  wire pin4_ne;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:84.15-84.22" *)
  wire pin4_pe;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:69.15-69.22" *)
  wire pin5_hi;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:77.15-77.22" *)
  wire pin5_lo;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:93.15-93.22" *)
  wire pin5_ne;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:85.15-85.22" *)
  wire pin5_pe;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:70.15-70.22" *)
  wire pin6_hi;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:78.15-78.22" *)
  wire pin6_lo;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:94.15-94.22" *)
  wire pin6_ne;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:86.15-86.22" *)
  wire pin6_pe;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:71.15-71.22" *)
  wire pin7_hi;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:79.15-79.22" *)
  wire pin7_lo;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:95.15-95.22" *)
  wire pin7_ne;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:87.15-87.22" *)
  wire pin7_pe;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:29.65-29.70" *)
  input rst_i;
  wire rst_i;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:53.8-53.13" *)
  wire rst_n;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:33.65-33.70" *)
  input [3:0] sel_i;
  wire [3:0] sel_i;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:35.65-35.70" *)
  input stb_i;
  wire stb_i;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:37.65-37.69" *)
  input we_i;
  wire we_i;
  assign _0022_ = pin0_pe | IC_REG[16];
  assign _0020_ = pin6_lo | IC_REG[14];
  assign _0021_ = pin7_lo | IC_REG[15];
  assign _0023_ = pin1_pe | IC_REG[17];
  assign _0024_ = pin2_pe | IC_REG[18];
  assign _0025_ = pin3_pe | IC_REG[19];
  assign _0029_ = pin7_pe | IC_REG[23];
  assign _0027_ = pin5_pe | IC_REG[21];
  assign _0026_ = pin4_pe | IC_REG[20];
  assign _0028_ = pin6_pe | IC_REG[22];
  assign _0031_ = pin1_ne | IC_REG[25];
  assign _0019_ = pin5_lo | IC_REG[13];
  assign _0030_ = pin0_ne | IC_REG[24];
  assign _0032_ = pin2_ne | IC_REG[26];
  assign _0033_ = pin3_ne | IC_REG[27];
  assign _0006_ = pin0_hi | IC_REG[0];
  assign _0007_ = pin1_hi | IC_REG[1];
  assign _0008_ = pin2_hi | IC_REG[2];
  assign _0009_ = pin3_hi | IC_REG[3];
  assign _0010_ = pin4_hi | IC_REG[4];
  assign _0011_ = pin5_hi | IC_REG[5];
  assign _0012_ = pin6_hi | IC_REG[6];
  assign _0013_ = pin7_hi | IC_REG[7];
  assign _0014_ = pin0_lo | IC_REG[8];
  assign _0037_ = pin7_ne | IC_REG[31];
  assign _0036_ = pin6_ne | IC_REG[30];
  assign _0035_ = pin5_ne | IC_REG[29];
  assign _0034_ = pin4_ne | IC_REG[28];
  assign _0016_ = pin2_lo | IC_REG[10];
  assign _0017_ = pin3_lo | IC_REG[11];
  assign _0018_ = pin4_lo | IC_REG[12];
  assign _0038_ = IM_REG[0] & RIS_REG[0];
  assign _0039_ = IM_REG[1] & RIS_REG[1];
  assign _0040_ = _0039_ | _0038_;
  assign _0041_ = IM_REG[2] & RIS_REG[2];
  assign _0042_ = IM_REG[3] & RIS_REG[3];
  assign _0043_ = _0042_ | _0041_;
  assign _0044_ = _0043_ | _0040_;
  assign _0045_ = IM_REG[4] & RIS_REG[4];
  assign _0046_ = IM_REG[5] & RIS_REG[5];
  assign _0047_ = _0046_ | _0045_;
  assign _0048_ = IM_REG[6] & RIS_REG[6];
  assign _0049_ = IM_REG[7] & RIS_REG[7];
  assign _0050_ = _0049_ | _0048_;
  assign _0051_ = _0050_ | _0047_;
  assign _0052_ = _0051_ | _0044_;
  assign _0053_ = IM_REG[8] & RIS_REG[8];
  assign _0054_ = IM_REG[9] & RIS_REG[9];
  assign _0055_ = _0054_ | _0053_;
  assign _0056_ = IM_REG[10] & RIS_REG[10];
  assign _0057_ = IM_REG[11] & RIS_REG[11];
  assign _0058_ = _0057_ | _0056_;
  assign _0059_ = _0058_ | _0055_;
  assign _0060_ = IM_REG[12] & RIS_REG[12];
  assign _0061_ = IM_REG[13] & RIS_REG[13];
  assign _0062_ = _0061_ | _0060_;
  assign _0063_ = IM_REG[14] & RIS_REG[14];
  assign _0064_ = IM_REG[15] & RIS_REG[15];
  assign _0065_ = _0064_ | _0063_;
  assign _0066_ = _0065_ | _0062_;
  assign _0067_ = _0066_ | _0059_;
  assign _0068_ = _0067_ | _0052_;
  assign _0069_ = IM_REG[16] & RIS_REG[16];
  assign _0070_ = IM_REG[17] & RIS_REG[17];
  assign _0071_ = _0070_ | _0069_;
  assign _0072_ = IM_REG[18] & RIS_REG[18];
  assign _0073_ = IM_REG[19] & RIS_REG[19];
  assign _0074_ = _0073_ | _0072_;
  assign _0075_ = _0074_ | _0071_;
  assign _0076_ = IM_REG[20] & RIS_REG[20];
  assign _0077_ = IM_REG[21] & RIS_REG[21];
  assign _0078_ = _0077_ | _0076_;
  assign _0079_ = IM_REG[22] & RIS_REG[22];
  assign _0080_ = IM_REG[23] & RIS_REG[23];
  assign _0081_ = _0080_ | _0079_;
  assign _0082_ = _0081_ | _0078_;
  assign _0083_ = _0082_ | _0075_;
  assign _0084_ = IM_REG[24] & RIS_REG[24];
  assign _0085_ = IM_REG[25] & RIS_REG[25];
  assign _0086_ = _0085_ | _0084_;
  assign _0087_ = RIS_REG[26] & IM_REG[26];
  assign _0088_ = RIS_REG[27] & IM_REG[27];
  assign _0089_ = _0088_ | _0087_;
  assign _0090_ = _0089_ | _0086_;
  assign _0091_ = RIS_REG[28] & IM_REG[28];
  assign _0092_ = RIS_REG[29] & IM_REG[29];
  assign _0093_ = _0092_ | _0091_;
  assign _0094_ = RIS_REG[30] & IM_REG[30];
  assign _0095_ = RIS_REG[31] & IM_REG[31];
  assign _0096_ = _0095_ | _0094_;
  assign _0097_ = _0096_ | _0093_;
  assign _0098_ = _0097_ | _0090_;
  assign _0099_ = _0098_ | _0083_;
  assign IRQ = _0099_ | _0068_;
  assign _0015_ = pin1_lo | IC_REG[9];
  assign _0100_ = adr_i[5] | adr_i[4];
  assign _0101_ = adr_i[7] | adr_i[6];
  assign _0102_ = _0101_ | _0100_;
  assign _0103_ = adr_i[1] | adr_i[0];
  assign _0104_ = adr_i[2] | adr_i[3];
  assign _0105_ = _0104_ | _0103_;
  assign _0106_ = ~(_0105_ | _0102_);
  assign _0107_ = adr_i[13] | adr_i[12];
  assign _0108_ = adr_i[15] | adr_i[14];
  assign _0109_ = _0108_ | _0107_;
  assign _0110_ = adr_i[9] | adr_i[8];
  assign _0111_ = adr_i[11] | adr_i[10];
  assign _0112_ = _0111_ | _0110_;
  assign _0113_ = ~(_0112_ | _0109_);
  assign _0114_ = _0113_ & _0106_;
  assign _0115_ = adr_i[3] | ~(adr_i[2]);
  assign _0116_ = _0115_ | _0103_;
  assign _0117_ = ~(_0116_ | _0102_);
  assign _0118_ = _0117_ & _0113_;
  assign _0119_ = adr_i[2] | ~(adr_i[3]);
  assign _0120_ = _0119_ | _0103_;
  assign _0121_ = ~(_0120_ | _0102_);
  assign _0122_ = _0121_ & _0113_;
  assign _0123_ = ~(adr_i[9] & adr_i[8]);
  assign _0124_ = ~(adr_i[11] & adr_i[10]);
  assign _0125_ = _0124_ | _0123_;
  assign _0126_ = _0125_ | _0109_;
  assign _0127_ = _0106_ & ~(_0126_);
  assign _0128_ = _0117_ & ~(_0126_);
  assign _0129_ = _0121_ & ~(_0126_);
  assign _0130_ = ~(adr_i[2] & adr_i[3]);
  assign _0131_ = _0130_ | _0103_;
  assign _0132_ = _0131_ | _0102_;
  assign _0133_ = _0132_ | _0126_;
  assign _0134_ = _0133_ | IC_REG[0];
  assign _0135_ = _0129_ ? RIS_REG[0] : _0134_;
  assign _0136_ = _0128_ ? _0038_ : _0135_;
  assign _0137_ = _0127_ ? IM_REG[0] : _0136_;
  assign _0138_ = _0122_ ? DIR_REG[0] : _0137_;
  assign _0139_ = _0118_ ? DATAO_REG[0] : _0138_;
  assign dat_o[0] = _0114_ ? bus_in[0] : _0139_;
  assign _0140_ = _0133_ | IC_REG[1];
  assign _0141_ = _0129_ ? RIS_REG[1] : _0140_;
  assign _0142_ = _0128_ ? _0039_ : _0141_;
  assign _0143_ = _0127_ ? IM_REG[1] : _0142_;
  assign _0144_ = _0122_ ? DIR_REG[1] : _0143_;
  assign _0145_ = _0118_ ? DATAO_REG[1] : _0144_;
  assign dat_o[1] = _0114_ ? bus_in[1] : _0145_;
  assign _0146_ = _0133_ | IC_REG[2];
  assign _0147_ = _0129_ ? RIS_REG[2] : _0146_;
  assign _0148_ = _0128_ ? _0041_ : _0147_;
  assign _0149_ = _0127_ ? IM_REG[2] : _0148_;
  assign _0150_ = _0122_ ? DIR_REG[2] : _0149_;
  assign _0151_ = _0118_ ? DATAO_REG[2] : _0150_;
  assign dat_o[2] = _0114_ ? bus_in[2] : _0151_;
  assign _0152_ = _0133_ | IC_REG[3];
  assign _0153_ = _0129_ ? RIS_REG[3] : _0152_;
  assign _0154_ = _0128_ ? _0042_ : _0153_;
  assign _0155_ = _0127_ ? IM_REG[3] : _0154_;
  assign _0156_ = _0122_ ? DIR_REG[3] : _0155_;
  assign _0157_ = _0118_ ? DATAO_REG[3] : _0156_;
  assign dat_o[3] = _0114_ ? bus_in[3] : _0157_;
  assign _0158_ = IC_REG[4] & ~(_0133_);
  assign _0159_ = _0129_ ? RIS_REG[4] : _0158_;
  assign _0160_ = _0128_ ? _0045_ : _0159_;
  assign _0161_ = _0127_ ? IM_REG[4] : _0160_;
  assign _0162_ = _0122_ ? DIR_REG[4] : _0161_;
  assign _0163_ = _0118_ ? DATAO_REG[4] : _0162_;
  assign dat_o[4] = _0114_ ? bus_in[4] : _0163_;
  assign _0164_ = _0133_ | IC_REG[5];
  assign _0165_ = _0129_ ? RIS_REG[5] : _0164_;
  assign _0166_ = _0128_ ? _0046_ : _0165_;
  assign _0167_ = _0127_ ? IM_REG[5] : _0166_;
  assign _0168_ = _0122_ ? DIR_REG[5] : _0167_;
  assign _0169_ = _0118_ ? DATAO_REG[5] : _0168_;
  assign dat_o[5] = _0114_ ? bus_in[5] : _0169_;
  assign _0170_ = _0133_ | IC_REG[6];
  assign _0171_ = _0129_ ? RIS_REG[6] : _0170_;
  assign _0172_ = _0128_ ? _0048_ : _0171_;
  assign _0173_ = _0127_ ? IM_REG[6] : _0172_;
  assign _0174_ = _0122_ ? DIR_REG[6] : _0173_;
  assign _0175_ = _0118_ ? DATAO_REG[6] : _0174_;
  assign dat_o[6] = _0114_ ? bus_in[6] : _0175_;
  assign _0176_ = _0133_ | IC_REG[7];
  assign _0177_ = _0129_ ? RIS_REG[7] : _0176_;
  assign _0178_ = _0128_ ? _0049_ : _0177_;
  assign _0179_ = _0127_ ? IM_REG[7] : _0178_;
  assign _0180_ = _0122_ ? DIR_REG[7] : _0179_;
  assign _0181_ = _0118_ ? DATAO_REG[7] : _0180_;
  assign dat_o[7] = _0114_ ? bus_in[7] : _0181_;
  assign _0182_ = ~_0114_;
  assign _0183_ = ~IM_REG[8];
  assign _0184_ = ~_0053_;
  assign _0185_ = ~RIS_REG[8];
  assign _0001_[8] = ~IC_REG[8];
  assign _0186_ = _0133_ | _0001_[8];
  assign _0187_ = _0129_ ? _0185_ : _0186_;
  assign _0188_ = _0128_ ? _0184_ : _0187_;
  assign _0189_ = _0127_ ? _0183_ : _0188_;
  assign _0190_ = _0189_ | _0122_;
  assign _0191_ = _0190_ | _0118_;
  assign dat_o[8] = _0182_ & ~(_0191_);
  assign _0192_ = ~IM_REG[9];
  assign _0193_ = ~_0054_;
  assign _0194_ = ~RIS_REG[9];
  assign _0001_[9] = ~IC_REG[9];
  assign _0195_ = _0001_[9] & ~(_0133_);
  assign _0196_ = _0129_ ? _0194_ : _0195_;
  assign _0197_ = _0128_ ? _0193_ : _0196_;
  assign _0198_ = _0127_ ? _0192_ : _0197_;
  assign _0199_ = _0198_ | _0122_;
  assign _0200_ = _0199_ | _0118_;
  assign dat_o[9] = _0182_ & ~(_0200_);
  assign _0201_ = ~IM_REG[10];
  assign _0202_ = ~_0056_;
  assign _0203_ = ~RIS_REG[10];
  assign _0001_[10] = ~IC_REG[10];
  assign _0204_ = _0001_[10] & ~(_0133_);
  assign _0205_ = _0129_ ? _0203_ : _0204_;
  assign _0206_ = _0128_ ? _0202_ : _0205_;
  assign _0207_ = _0127_ ? _0201_ : _0206_;
  assign _0208_ = _0207_ | _0122_;
  assign _0209_ = _0208_ | _0118_;
  assign dat_o[10] = _0182_ & ~(_0209_);
  assign _0210_ = ~IM_REG[11];
  assign _0211_ = ~_0057_;
  assign _0212_ = ~RIS_REG[11];
  assign _0001_[11] = ~IC_REG[11];
  assign _0213_ = _0001_[11] & ~(_0133_);
  assign _0214_ = _0129_ ? _0212_ : _0213_;
  assign _0215_ = _0128_ ? _0211_ : _0214_;
  assign _0216_ = _0127_ ? _0210_ : _0215_;
  assign _0217_ = _0216_ | _0122_;
  assign _0218_ = _0217_ | _0118_;
  assign dat_o[11] = _0182_ & ~(_0218_);
  assign _0219_ = ~IM_REG[12];
  assign _0220_ = ~_0060_;
  assign _0221_ = ~RIS_REG[12];
  assign _0001_[12] = ~IC_REG[12];
  assign _0222_ = _0001_[12] & ~(_0133_);
  assign _0223_ = _0129_ ? _0221_ : _0222_;
  assign _0224_ = _0128_ ? _0220_ : _0223_;
  assign _0225_ = _0127_ ? _0219_ : _0224_;
  assign _0226_ = _0225_ | _0122_;
  assign _0227_ = _0226_ | _0118_;
  assign dat_o[12] = _0182_ & ~(_0227_);
  assign _0228_ = ~IM_REG[13];
  assign _0229_ = ~_0061_;
  assign _0230_ = ~RIS_REG[13];
  assign _0001_[13] = ~IC_REG[13];
  assign _0231_ = _0001_[13] & ~(_0133_);
  assign _0232_ = _0129_ ? _0230_ : _0231_;
  assign _0233_ = _0128_ ? _0229_ : _0232_;
  assign _0234_ = _0127_ ? _0228_ : _0233_;
  assign _0235_ = _0234_ | _0122_;
  assign _0236_ = _0235_ | _0118_;
  assign dat_o[13] = _0182_ & ~(_0236_);
  assign _0237_ = ~IM_REG[14];
  assign _0238_ = ~_0063_;
  assign _0239_ = ~RIS_REG[14];
  assign _0001_[14] = ~IC_REG[14];
  assign _0240_ = _0133_ | _0001_[14];
  assign _0241_ = _0129_ ? _0239_ : _0240_;
  assign _0242_ = _0128_ ? _0238_ : _0241_;
  assign _0243_ = _0127_ ? _0237_ : _0242_;
  assign _0244_ = _0243_ | _0122_;
  assign _0245_ = _0244_ | _0118_;
  assign dat_o[14] = _0182_ & ~(_0245_);
  assign _0246_ = ~IM_REG[15];
  assign _0247_ = ~_0064_;
  assign _0248_ = ~RIS_REG[15];
  assign _0001_[15] = ~IC_REG[15];
  assign _0249_ = _0001_[15] & ~(_0133_);
  assign _0250_ = _0129_ ? _0248_ : _0249_;
  assign _0251_ = _0128_ ? _0247_ : _0250_;
  assign _0252_ = _0127_ ? _0246_ : _0251_;
  assign _0253_ = _0252_ | _0122_;
  assign _0254_ = _0253_ | _0118_;
  assign dat_o[15] = _0182_ & ~(_0254_);
  assign _0255_ = ~IM_REG[16];
  assign _0256_ = ~_0069_;
  assign _0257_ = ~RIS_REG[16];
  assign _0001_[16] = ~IC_REG[16];
  assign _0258_ = _0001_[16] & ~(_0133_);
  assign _0259_ = _0129_ ? _0257_ : _0258_;
  assign _0260_ = _0128_ ? _0256_ : _0259_;
  assign _0261_ = _0127_ ? _0255_ : _0260_;
  assign _0262_ = _0261_ | _0122_;
  assign _0263_ = _0262_ | _0118_;
  assign dat_o[16] = _0182_ & ~(_0263_);
  assign _0264_ = ~IM_REG[17];
  assign _0265_ = ~_0070_;
  assign _0266_ = ~RIS_REG[17];
  assign _0001_[17] = ~IC_REG[17];
  assign _0267_ = _0133_ | _0001_[17];
  assign _0268_ = _0129_ ? _0266_ : _0267_;
  assign _0269_ = _0128_ ? _0265_ : _0268_;
  assign _0270_ = _0127_ ? _0264_ : _0269_;
  assign _0271_ = _0270_ | _0122_;
  assign _0272_ = _0271_ | _0118_;
  assign dat_o[17] = _0182_ & ~(_0272_);
  assign _0273_ = ~IM_REG[18];
  assign _0274_ = ~_0072_;
  assign _0275_ = ~RIS_REG[18];
  assign _0001_[18] = ~IC_REG[18];
  assign _0276_ = _0001_[18] & ~(_0133_);
  assign _0277_ = _0129_ ? _0275_ : _0276_;
  assign _0278_ = _0128_ ? _0274_ : _0277_;
  assign _0279_ = _0127_ ? _0273_ : _0278_;
  assign _0280_ = _0279_ | _0122_;
  assign _0281_ = _0280_ | _0118_;
  assign dat_o[18] = _0182_ & ~(_0281_);
  assign _0282_ = ~IM_REG[19];
  assign _0283_ = ~_0073_;
  assign _0284_ = ~RIS_REG[19];
  assign _0001_[19] = ~IC_REG[19];
  assign _0285_ = _0001_[19] & ~(_0133_);
  assign _0286_ = _0129_ ? _0284_ : _0285_;
  assign _0287_ = _0128_ ? _0283_ : _0286_;
  assign _0288_ = _0127_ ? _0282_ : _0287_;
  assign _0289_ = _0288_ | _0122_;
  assign _0290_ = _0289_ | _0118_;
  assign dat_o[19] = _0182_ & ~(_0290_);
  assign _0291_ = ~IM_REG[20];
  assign _0292_ = ~_0076_;
  assign _0293_ = ~RIS_REG[20];
  assign _0001_[20] = ~IC_REG[20];
  assign _0294_ = _0133_ | _0001_[20];
  assign _0295_ = _0129_ ? _0293_ : _0294_;
  assign _0296_ = _0128_ ? _0292_ : _0295_;
  assign _0297_ = _0127_ ? _0291_ : _0296_;
  assign _0298_ = _0297_ | _0122_;
  assign _0299_ = _0298_ | _0118_;
  assign dat_o[20] = _0182_ & ~(_0299_);
  assign _0300_ = ~IM_REG[21];
  assign _0301_ = ~_0077_;
  assign _0302_ = ~RIS_REG[21];
  assign _0001_[21] = ~IC_REG[21];
  assign _0303_ = _0001_[21] & ~(_0133_);
  assign _0304_ = _0129_ ? _0302_ : _0303_;
  assign _0305_ = _0128_ ? _0301_ : _0304_;
  assign _0306_ = _0127_ ? _0300_ : _0305_;
  assign _0307_ = _0306_ | _0122_;
  assign _0308_ = _0307_ | _0118_;
  assign dat_o[21] = _0182_ & ~(_0308_);
  assign _0309_ = ~IM_REG[22];
  assign _0310_ = ~_0079_;
  assign _0311_ = ~RIS_REG[22];
  assign _0001_[22] = ~IC_REG[22];
  assign _0312_ = _0133_ | _0001_[22];
  assign _0313_ = _0129_ ? _0311_ : _0312_;
  assign _0314_ = _0128_ ? _0310_ : _0313_;
  assign _0315_ = _0127_ ? _0309_ : _0314_;
  assign _0316_ = _0315_ | _0122_;
  assign _0317_ = _0316_ | _0118_;
  assign dat_o[22] = _0182_ & ~(_0317_);
  assign _0318_ = ~IM_REG[23];
  assign _0319_ = ~_0080_;
  assign _0320_ = ~RIS_REG[23];
  assign _0001_[23] = ~IC_REG[23];
  assign _0321_ = _0001_[23] & ~(_0133_);
  assign _0322_ = _0129_ ? _0320_ : _0321_;
  assign _0323_ = _0128_ ? _0319_ : _0322_;
  assign _0324_ = _0127_ ? _0318_ : _0323_;
  assign _0325_ = _0324_ | _0122_;
  assign _0326_ = _0325_ | _0118_;
  assign dat_o[23] = _0182_ & ~(_0326_);
  assign _0327_ = ~IM_REG[24];
  assign _0328_ = ~_0084_;
  assign _0329_ = ~RIS_REG[24];
  assign _0001_[24] = ~IC_REG[24];
  assign _0330_ = _0133_ | _0001_[24];
  assign _0331_ = _0129_ ? _0329_ : _0330_;
  assign _0332_ = _0128_ ? _0328_ : _0331_;
  assign _0333_ = _0127_ ? _0327_ : _0332_;
  assign _0334_ = _0333_ | _0122_;
  assign _0335_ = _0334_ | _0118_;
  assign dat_o[24] = _0182_ & ~(_0335_);
  assign _0336_ = ~IM_REG[25];
  assign _0337_ = ~_0085_;
  assign _0338_ = ~RIS_REG[25];
  assign _0001_[25] = ~IC_REG[25];
  assign _0339_ = _0001_[25] & ~(_0133_);
  assign _0340_ = _0129_ ? _0338_ : _0339_;
  assign _0341_ = _0128_ ? _0337_ : _0340_;
  assign _0342_ = _0127_ ? _0336_ : _0341_;
  assign _0343_ = _0342_ | _0122_;
  assign _0344_ = _0343_ | _0118_;
  assign dat_o[25] = _0182_ & ~(_0344_);
  assign _0345_ = ~IM_REG[26];
  assign _0346_ = ~_0087_;
  assign _0347_ = ~RIS_REG[26];
  assign _0001_[26] = ~IC_REG[26];
  assign _0348_ = _0001_[26] & ~(_0133_);
  assign _0349_ = _0129_ ? _0347_ : _0348_;
  assign _0350_ = _0128_ ? _0346_ : _0349_;
  assign _0351_ = _0127_ ? _0345_ : _0350_;
  assign _0352_ = _0351_ | _0122_;
  assign _0353_ = _0352_ | _0118_;
  assign dat_o[26] = _0182_ & ~(_0353_);
  assign _0354_ = ~IM_REG[27];
  assign _0355_ = ~_0088_;
  assign _0356_ = ~RIS_REG[27];
  assign _0001_[27] = ~IC_REG[27];
  assign _0357_ = _0001_[27] & ~(_0133_);
  assign _0358_ = _0129_ ? _0356_ : _0357_;
  assign _0359_ = _0128_ ? _0355_ : _0358_;
  assign _0360_ = _0127_ ? _0354_ : _0359_;
  assign _0361_ = _0360_ | _0122_;
  assign _0362_ = _0361_ | _0118_;
  assign dat_o[27] = _0182_ & ~(_0362_);
  assign _0363_ = ~IM_REG[28];
  assign _0364_ = ~_0091_;
  assign _0365_ = ~RIS_REG[28];
  assign _0001_[28] = ~IC_REG[28];
  assign _0366_ = _0001_[28] & ~(_0133_);
  assign _0367_ = _0129_ ? _0365_ : _0366_;
  assign _0368_ = _0128_ ? _0364_ : _0367_;
  assign _0369_ = _0127_ ? _0363_ : _0368_;
  assign _0370_ = _0369_ | _0122_;
  assign _0371_ = _0370_ | _0118_;
  assign dat_o[28] = _0182_ & ~(_0371_);
  assign _0372_ = ~IM_REG[29];
  assign _0373_ = ~_0092_;
  assign _0374_ = ~RIS_REG[29];
  assign _0001_[29] = ~IC_REG[29];
  assign _0375_ = _0133_ | _0001_[29];
  assign _0376_ = _0129_ ? _0374_ : _0375_;
  assign _0377_ = _0128_ ? _0373_ : _0376_;
  assign _0378_ = _0127_ ? _0372_ : _0377_;
  assign _0379_ = _0378_ | _0122_;
  assign _0380_ = _0379_ | _0118_;
  assign dat_o[29] = _0182_ & ~(_0380_);
  assign _0381_ = ~IM_REG[30];
  assign _0382_ = ~_0094_;
  assign _0383_ = ~RIS_REG[30];
  assign _0001_[30] = ~IC_REG[30];
  assign _0384_ = _0001_[30] & ~(_0133_);
  assign _0385_ = _0129_ ? _0383_ : _0384_;
  assign _0386_ = _0128_ ? _0382_ : _0385_;
  assign _0387_ = _0127_ ? _0381_ : _0386_;
  assign _0388_ = _0387_ | _0122_;
  assign _0389_ = _0388_ | _0118_;
  assign dat_o[30] = _0182_ & ~(_0389_);
  assign _0390_ = ~IM_REG[31];
  assign _0391_ = ~_0095_;
  assign _0392_ = ~RIS_REG[31];
  assign _0001_[31] = ~IC_REG[31];
  assign _0393_ = _0001_[31] & ~(_0133_);
  assign _0394_ = _0129_ ? _0392_ : _0393_;
  assign _0395_ = _0128_ ? _0391_ : _0394_;
  assign _0396_ = _0127_ ? _0390_ : _0395_;
  assign _0397_ = _0396_ | _0122_;
  assign _0398_ = _0397_ | _0118_;
  assign dat_o[31] = _0182_ & ~(_0398_);
  assign _0399_ = ~(stb_i & cyc_i);
  assign _0400_ = _0399_ | ~(we_i);
  assign _0401_ = _0400_ | _0133_;
  assign _0000_[0] = dat_i[0] & ~(_0401_);
  assign _0000_[1] = dat_i[1] & ~(_0401_);
  assign _0000_[2] = dat_i[2] & ~(_0401_);
  assign _0000_[3] = dat_i[3] & ~(_0401_);
  assign _0000_[4] = dat_i[4] & ~(_0401_);
  assign _0000_[5] = dat_i[5] & ~(_0401_);
  assign _0000_[6] = dat_i[6] & ~(_0401_);
  assign _0000_[7] = dat_i[7] & ~(_0401_);
  assign _0000_[8] = dat_i[8] & ~(_0401_);
  assign _0000_[9] = dat_i[9] & ~(_0401_);
  assign _0000_[10] = dat_i[10] & ~(_0401_);
  assign _0000_[11] = dat_i[11] & ~(_0401_);
  assign _0000_[12] = dat_i[12] & ~(_0401_);
  assign _0000_[13] = dat_i[13] & ~(_0401_);
  assign _0000_[14] = dat_i[14] & ~(_0401_);
  assign _0000_[15] = dat_i[15] & ~(_0401_);
  assign _0000_[16] = dat_i[16] & ~(_0401_);
  assign _0000_[17] = dat_i[17] & ~(_0401_);
  assign _0000_[18] = dat_i[18] & ~(_0401_);
  assign _0000_[19] = dat_i[19] & ~(_0401_);
  assign _0000_[20] = dat_i[20] & ~(_0401_);
  assign _0000_[21] = dat_i[21] & ~(_0401_);
  assign _0000_[22] = dat_i[22] & ~(_0401_);
  assign _0000_[23] = dat_i[23] & ~(_0401_);
  assign _0000_[24] = dat_i[24] & ~(_0401_);
  assign _0000_[25] = dat_i[25] & ~(_0401_);
  assign _0000_[26] = dat_i[26] & ~(_0401_);
  assign _0000_[27] = dat_i[27] & ~(_0401_);
  assign _0000_[28] = dat_i[28] & ~(_0401_);
  assign _0000_[29] = dat_i[29] & ~(_0401_);
  assign _0000_[30] = dat_i[30] & ~(_0401_);
  assign _0000_[31] = dat_i[31] & ~(_0401_);
  assign _0001_[7] = ~IC_REG[7];
  assign _0001_[3] = ~IC_REG[3];
  assign _0001_[4] = ~IC_REG[4];
  assign _0001_[1] = ~IC_REG[1];
  assign _0001_[5] = ~IC_REG[5];
  assign _0001_[2] = ~IC_REG[2];
  assign _0001_[6] = ~IC_REG[6];
  assign _0001_[0] = ~IC_REG[0];
  assign rst_n = ~rst_i;
  assign _0002_ = ~(_0399_ | ack_o);
  assign _0003_ = _0118_ & ~(_0400_);
  assign _0004_ = _0122_ & ~(_0400_);
  assign _0005_ = _0127_ & ~(_0400_);
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:155.2-252.5" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) RIS_REG[15] <= 1'h0;
    else if (_0021_) RIS_REG[15] <= _0001_[15];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:155.2-252.5" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) RIS_REG[16] <= 1'h0;
    else if (_0022_) RIS_REG[16] <= _0001_[16];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:155.2-252.5" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) RIS_REG[17] <= 1'h0;
    else if (_0023_) RIS_REG[17] <= _0001_[17];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:155.2-252.5" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) RIS_REG[18] <= 1'h0;
    else if (_0024_) RIS_REG[18] <= _0001_[18];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:155.2-252.5" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) RIS_REG[20] <= 1'h0;
    else if (_0026_) RIS_REG[20] <= _0001_[20];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:155.2-252.5" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) RIS_REG[19] <= 1'h0;
    else if (_0025_) RIS_REG[19] <= _0001_[19];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:155.2-252.5" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) RIS_REG[22] <= 1'h0;
    else if (_0028_) RIS_REG[22] <= _0001_[22];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:155.2-252.5" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) RIS_REG[23] <= 1'h0;
    else if (_0029_) RIS_REG[23] <= _0001_[23];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:155.2-252.5" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) RIS_REG[21] <= 1'h0;
    else if (_0027_) RIS_REG[21] <= _0001_[21];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:155.2-252.5" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) RIS_REG[29] <= 1'h0;
    else if (_0035_) RIS_REG[29] <= _0001_[29];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:155.2-252.5" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) RIS_REG[26] <= 1'h0;
    else if (_0032_) RIS_REG[26] <= _0001_[26];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:155.2-252.5" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) RIS_REG[14] <= 1'h0;
    else if (_0020_) RIS_REG[14] <= _0001_[14];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:155.2-252.5" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) RIS_REG[25] <= 1'h0;
    else if (_0031_) RIS_REG[25] <= _0001_[25];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:155.2-252.5" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) RIS_REG[24] <= 1'h0;
    else if (_0030_) RIS_REG[24] <= _0001_[24];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:155.2-252.5" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) RIS_REG[27] <= 1'h0;
    else if (_0033_) RIS_REG[27] <= _0001_[27];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:155.2-252.5" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) RIS_REG[28] <= 1'h0;
    else if (_0034_) RIS_REG[28] <= _0001_[28];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:155.2-252.5" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) RIS_REG[1] <= 1'h0;
    else if (_0007_) RIS_REG[1] <= _0001_[1];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:155.2-252.5" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) RIS_REG[2] <= 1'h0;
    else if (_0008_) RIS_REG[2] <= _0001_[2];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:155.2-252.5" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) RIS_REG[3] <= 1'h0;
    else if (_0009_) RIS_REG[3] <= _0001_[3];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:155.2-252.5" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) RIS_REG[4] <= 1'h0;
    else if (_0010_) RIS_REG[4] <= _0001_[4];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:155.2-252.5" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) RIS_REG[5] <= 1'h0;
    else if (_0011_) RIS_REG[5] <= _0001_[5];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:155.2-252.5" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) RIS_REG[6] <= 1'h0;
    else if (_0012_) RIS_REG[6] <= _0001_[6];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:155.2-252.5" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) RIS_REG[7] <= 1'h0;
    else if (_0013_) RIS_REG[7] <= _0001_[7];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:155.2-252.5" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) RIS_REG[8] <= 1'h0;
    else if (_0014_) RIS_REG[8] <= _0001_[8];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:155.2-252.5" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) RIS_REG[31] <= 1'h0;
    else if (_0037_) RIS_REG[31] <= _0001_[31];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:155.2-252.5" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) RIS_REG[30] <= 1'h0;
    else if (_0036_) RIS_REG[30] <= _0001_[30];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:309.2-315.18" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) ack_o <= 1'h0;
    else ack_o <= _0002_;
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:114.2-118.61" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IC_REG[0] <= 1'h0;
    else IC_REG[0] <= _0000_[0];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:114.2-118.61" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IC_REG[1] <= 1'h0;
    else IC_REG[1] <= _0000_[1];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:114.2-118.61" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IC_REG[2] <= 1'h0;
    else IC_REG[2] <= _0000_[2];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:114.2-118.61" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IC_REG[3] <= 1'h0;
    else IC_REG[3] <= _0000_[3];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:114.2-118.61" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IC_REG[4] <= 1'h0;
    else IC_REG[4] <= _0000_[4];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:114.2-118.61" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IC_REG[5] <= 1'h0;
    else IC_REG[5] <= _0000_[5];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:114.2-118.61" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IC_REG[6] <= 1'h0;
    else IC_REG[6] <= _0000_[6];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:114.2-118.61" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IC_REG[7] <= 1'h0;
    else IC_REG[7] <= _0000_[7];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:114.2-118.61" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IC_REG[8] <= 1'h0;
    else IC_REG[8] <= _0000_[8];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:114.2-118.61" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IC_REG[9] <= 1'h0;
    else IC_REG[9] <= _0000_[9];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:114.2-118.61" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IC_REG[10] <= 1'h0;
    else IC_REG[10] <= _0000_[10];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:114.2-118.61" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IC_REG[11] <= 1'h0;
    else IC_REG[11] <= _0000_[11];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:114.2-118.61" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IC_REG[12] <= 1'h0;
    else IC_REG[12] <= _0000_[12];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:114.2-118.61" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IC_REG[13] <= 1'h0;
    else IC_REG[13] <= _0000_[13];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:114.2-118.61" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IC_REG[14] <= 1'h0;
    else IC_REG[14] <= _0000_[14];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:114.2-118.61" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IC_REG[15] <= 1'h0;
    else IC_REG[15] <= _0000_[15];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:114.2-118.61" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IC_REG[16] <= 1'h0;
    else IC_REG[16] <= _0000_[16];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:114.2-118.61" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IC_REG[17] <= 1'h0;
    else IC_REG[17] <= _0000_[17];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:114.2-118.61" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IC_REG[18] <= 1'h0;
    else IC_REG[18] <= _0000_[18];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:114.2-118.61" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IC_REG[19] <= 1'h0;
    else IC_REG[19] <= _0000_[19];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:114.2-118.61" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IC_REG[20] <= 1'h0;
    else IC_REG[20] <= _0000_[20];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:114.2-118.61" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IC_REG[21] <= 1'h0;
    else IC_REG[21] <= _0000_[21];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:114.2-118.61" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IC_REG[22] <= 1'h0;
    else IC_REG[22] <= _0000_[22];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:114.2-118.61" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IC_REG[23] <= 1'h0;
    else IC_REG[23] <= _0000_[23];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:114.2-118.61" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IC_REG[24] <= 1'h0;
    else IC_REG[24] <= _0000_[24];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:114.2-118.61" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IC_REG[25] <= 1'h0;
    else IC_REG[25] <= _0000_[25];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:114.2-118.61" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IC_REG[26] <= 1'h0;
    else IC_REG[26] <= _0000_[26];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:114.2-118.61" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IC_REG[27] <= 1'h0;
    else IC_REG[27] <= _0000_[27];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:114.2-118.61" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IC_REG[28] <= 1'h0;
    else IC_REG[28] <= _0000_[28];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:114.2-118.61" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IC_REG[29] <= 1'h0;
    else IC_REG[29] <= _0000_[29];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:114.2-118.61" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IC_REG[30] <= 1'h0;
    else IC_REG[30] <= _0000_[30];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:114.2-118.61" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IC_REG[31] <= 1'h0;
    else IC_REG[31] <= _0000_[31];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:155.2-252.5" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) RIS_REG[0] <= 1'h0;
    else if (_0006_) RIS_REG[0] <= _0001_[0];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:113.2-113.138" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IM_REG[0] <= 1'h0;
    else if (_0005_) IM_REG[0] <= dat_i[0];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:113.2-113.138" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IM_REG[1] <= 1'h0;
    else if (_0005_) IM_REG[1] <= dat_i[1];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:113.2-113.138" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IM_REG[2] <= 1'h0;
    else if (_0005_) IM_REG[2] <= dat_i[2];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:113.2-113.138" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IM_REG[3] <= 1'h0;
    else if (_0005_) IM_REG[3] <= dat_i[3];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:113.2-113.138" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IM_REG[4] <= 1'h0;
    else if (_0005_) IM_REG[4] <= dat_i[4];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:113.2-113.138" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IM_REG[5] <= 1'h0;
    else if (_0005_) IM_REG[5] <= dat_i[5];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:113.2-113.138" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IM_REG[6] <= 1'h0;
    else if (_0005_) IM_REG[6] <= dat_i[6];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:113.2-113.138" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IM_REG[7] <= 1'h0;
    else if (_0005_) IM_REG[7] <= dat_i[7];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:113.2-113.138" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IM_REG[8] <= 1'h0;
    else if (_0005_) IM_REG[8] <= dat_i[8];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:113.2-113.138" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IM_REG[9] <= 1'h0;
    else if (_0005_) IM_REG[9] <= dat_i[9];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:113.2-113.138" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IM_REG[10] <= 1'h0;
    else if (_0005_) IM_REG[10] <= dat_i[10];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:113.2-113.138" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IM_REG[11] <= 1'h0;
    else if (_0005_) IM_REG[11] <= dat_i[11];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:113.2-113.138" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IM_REG[12] <= 1'h0;
    else if (_0005_) IM_REG[12] <= dat_i[12];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:113.2-113.138" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IM_REG[13] <= 1'h0;
    else if (_0005_) IM_REG[13] <= dat_i[13];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:113.2-113.138" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IM_REG[14] <= 1'h0;
    else if (_0005_) IM_REG[14] <= dat_i[14];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:113.2-113.138" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IM_REG[15] <= 1'h0;
    else if (_0005_) IM_REG[15] <= dat_i[15];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:113.2-113.138" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IM_REG[16] <= 1'h0;
    else if (_0005_) IM_REG[16] <= dat_i[16];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:113.2-113.138" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IM_REG[17] <= 1'h0;
    else if (_0005_) IM_REG[17] <= dat_i[17];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:113.2-113.138" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IM_REG[18] <= 1'h0;
    else if (_0005_) IM_REG[18] <= dat_i[18];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:113.2-113.138" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IM_REG[19] <= 1'h0;
    else if (_0005_) IM_REG[19] <= dat_i[19];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:113.2-113.138" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IM_REG[20] <= 1'h0;
    else if (_0005_) IM_REG[20] <= dat_i[20];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:113.2-113.138" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IM_REG[21] <= 1'h0;
    else if (_0005_) IM_REG[21] <= dat_i[21];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:113.2-113.138" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IM_REG[22] <= 1'h0;
    else if (_0005_) IM_REG[22] <= dat_i[22];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:113.2-113.138" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IM_REG[23] <= 1'h0;
    else if (_0005_) IM_REG[23] <= dat_i[23];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:113.2-113.138" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IM_REG[24] <= 1'h0;
    else if (_0005_) IM_REG[24] <= dat_i[24];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:113.2-113.138" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IM_REG[25] <= 1'h0;
    else if (_0005_) IM_REG[25] <= dat_i[25];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:113.2-113.138" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IM_REG[26] <= 1'h0;
    else if (_0005_) IM_REG[26] <= dat_i[26];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:113.2-113.138" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IM_REG[27] <= 1'h0;
    else if (_0005_) IM_REG[27] <= dat_i[27];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:113.2-113.138" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IM_REG[28] <= 1'h0;
    else if (_0005_) IM_REG[28] <= dat_i[28];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:113.2-113.138" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IM_REG[29] <= 1'h0;
    else if (_0005_) IM_REG[29] <= dat_i[29];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:113.2-113.138" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IM_REG[30] <= 1'h0;
    else if (_0005_) IM_REG[30] <= dat_i[30];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:113.2-113.138" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) IM_REG[31] <= 1'h0;
    else if (_0005_) IM_REG[31] <= dat_i[31];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:106.2-106.140" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) DIR_REG[0] <= 1'h0;
    else if (_0004_) DIR_REG[0] <= dat_i[0];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:106.2-106.140" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) DIR_REG[1] <= 1'h0;
    else if (_0004_) DIR_REG[1] <= dat_i[1];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:106.2-106.140" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) DIR_REG[2] <= 1'h0;
    else if (_0004_) DIR_REG[2] <= dat_i[2];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:106.2-106.140" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) DIR_REG[3] <= 1'h0;
    else if (_0004_) DIR_REG[3] <= dat_i[3];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:106.2-106.140" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) DIR_REG[4] <= 1'h0;
    else if (_0004_) DIR_REG[4] <= dat_i[4];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:106.2-106.140" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) DIR_REG[5] <= 1'h0;
    else if (_0004_) DIR_REG[5] <= dat_i[5];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:106.2-106.140" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) DIR_REG[6] <= 1'h0;
    else if (_0004_) DIR_REG[6] <= dat_i[6];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:106.2-106.140" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) DIR_REG[7] <= 1'h0;
    else if (_0004_) DIR_REG[7] <= dat_i[7];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:102.2-102.146" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) DATAO_REG[0] <= 1'h0;
    else if (_0003_) DATAO_REG[0] <= dat_i[0];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:102.2-102.146" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) DATAO_REG[1] <= 1'h0;
    else if (_0003_) DATAO_REG[1] <= dat_i[1];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:102.2-102.146" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) DATAO_REG[2] <= 1'h0;
    else if (_0003_) DATAO_REG[2] <= dat_i[2];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:102.2-102.146" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) DATAO_REG[3] <= 1'h0;
    else if (_0003_) DATAO_REG[3] <= dat_i[3];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:102.2-102.146" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) DATAO_REG[4] <= 1'h0;
    else if (_0003_) DATAO_REG[4] <= dat_i[4];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:102.2-102.146" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) DATAO_REG[5] <= 1'h0;
    else if (_0003_) DATAO_REG[5] <= dat_i[5];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:102.2-102.146" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) DATAO_REG[6] <= 1'h0;
    else if (_0003_) DATAO_REG[6] <= dat_i[6];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:102.2-102.146" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) DATAO_REG[7] <= 1'h0;
    else if (_0003_) DATAO_REG[7] <= dat_i[7];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:155.2-252.5" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) RIS_REG[11] <= 1'h0;
    else if (_0017_) RIS_REG[11] <= _0001_[11];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:155.2-252.5" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) RIS_REG[12] <= 1'h0;
    else if (_0018_) RIS_REG[12] <= _0001_[12];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:155.2-252.5" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) RIS_REG[13] <= 1'h0;
    else if (_0019_) RIS_REG[13] <= _0001_[13];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:155.2-252.5" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) RIS_REG[9] <= 1'h0;
    else if (_0015_) RIS_REG[9] <= _0001_[9];
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:155.2-252.5" *)
  always @(posedge clk_i, posedge rst_i)
    if (rst_i) RIS_REG[10] <= 1'h0;
    else if (_0016_) RIS_REG[10] <= _0001_[10];
  (* module_not_derived = 32'd1 *)
  (* src = "verilog/rtl/periph/EF_GPIO8_WB.v:256.11-297.3" *)
  EF_GPIO8 instance_to_wrap (
    .bus_in(bus_in),
    .bus_oe(DIR_REG),
    .bus_out(DATAO_REG),
    .clk(clk_i),
    .io_in(io_in),
    .io_oe(io_oe),
    .io_out(io_out),
    .pin0_hi(pin0_hi),
    .pin0_lo(pin0_lo),
    .pin0_ne(pin0_ne),
    .pin0_pe(pin0_pe),
    .pin1_hi(pin1_hi),
    .pin1_lo(pin1_lo),
    .pin1_ne(pin1_ne),
    .pin1_pe(pin1_pe),
    .pin2_hi(pin2_hi),
    .pin2_lo(pin2_lo),
    .pin2_ne(pin2_ne),
    .pin2_pe(pin2_pe),
    .pin3_hi(pin3_hi),
    .pin3_lo(pin3_lo),
    .pin3_ne(pin3_ne),
    .pin3_pe(pin3_pe),
    .pin4_hi(pin4_hi),
    .pin4_lo(pin4_lo),
    .pin4_ne(pin4_ne),
    .pin4_pe(pin4_pe),
    .pin5_hi(pin5_hi),
    .pin5_lo(pin5_lo),
    .pin5_ne(pin5_ne),
    .pin5_pe(pin5_pe),
    .pin6_hi(pin6_hi),
    .pin6_lo(pin6_lo),
    .pin6_ne(pin6_ne),
    .pin6_pe(pin6_pe),
    .pin7_hi(pin7_hi),
    .pin7_lo(pin7_lo),
    .pin7_ne(pin7_ne),
    .pin7_pe(pin7_pe),
    .rst_n(rst_n)
  );
  assign DATAI_WIRE = bus_in;
  assign P0HI = pin0_hi;
  assign P0LO = pin0_lo;
  assign P0NE = pin0_ne;
  assign P0PE = pin0_pe;
  assign P1HI = pin1_hi;
  assign P1LO = pin1_lo;
  assign P1NE = pin1_ne;
  assign P1PE = pin1_pe;
  assign P2HI = pin2_hi;
  assign P2LO = pin2_lo;
  assign P2NE = pin2_ne;
  assign P2PE = pin2_pe;
  assign P3HI = pin3_hi;
  assign P3LO = pin3_lo;
  assign P3NE = pin3_ne;
  assign P3PE = pin3_pe;
  assign P4HI = pin4_hi;
  assign P4LO = pin4_lo;
  assign P4NE = pin4_ne;
  assign P4PE = pin4_pe;
  assign P5HI = pin5_hi;
  assign P5LO = pin5_lo;
  assign P5NE = pin5_ne;
  assign P5PE = pin5_pe;
  assign P6HI = pin6_hi;
  assign P6LO = pin6_lo;
  assign P6NE = pin6_ne;
  assign P6PE = pin6_pe;
  assign P7HI = pin7_hi;
  assign P7LO = pin7_lo;
  assign P7NE = pin7_ne;
  assign P7PE = pin7_pe;
  assign bus_oe = DIR_REG;
  assign bus_out = DATAO_REG;
  assign clk = clk_i;
endmodule

(* src = "verilog/rtl/periph/aucohl_lib.v:60.1-69.10" *)
module aucohl_ned(clk, in, out);
  (* src = "verilog/rtl/periph/aucohl_lib.v:61.16-61.19" *)
  input clk;
  wire clk;
  (* src = "verilog/rtl/periph/aucohl_lib.v:62.16-62.18" *)
  input in;
  wire in;
  (* src = "verilog/rtl/periph/aucohl_lib.v:65.9-65.16" *)
  reg last_in;
  (* src = "verilog/rtl/periph/aucohl_lib.v:63.17-63.20" *)
  output out;
  wire out;
  assign out = last_in & ~(in);
  (* src = "verilog/rtl/periph/aucohl_lib.v:66.5-67.23" *)
  always @(posedge clk)
    last_in <= in;
endmodule

(* src = "verilog/rtl/periph/aucohl_lib.v:46.1-55.10" *)
module aucohl_ped(clk, in, out);
  (* src = "verilog/rtl/periph/aucohl_lib.v:47.16-47.19" *)
  input clk;
  wire clk;
  (* src = "verilog/rtl/periph/aucohl_lib.v:48.16-48.18" *)
  input in;
  wire in;
  (* src = "verilog/rtl/periph/aucohl_lib.v:51.9-51.16" *)
  reg last_in;
  (* src = "verilog/rtl/periph/aucohl_lib.v:49.17-49.20" *)
  output out;
  wire out;
  assign out = in & ~(last_in);
  (* src = "verilog/rtl/periph/aucohl_lib.v:52.5-53.16" *)
  always @(posedge clk)
    last_in <= in;
endmodule

(* dynports =  1  *)
(* src = "verilog/rtl/periph/aucohl_lib.v:28.1-41.10" *)
module aucohl_sync(clk, in, out);
  (* src = "verilog/rtl/periph/aucohl_lib.v:29.16-29.19" *)
  input clk;
  wire clk;
  (* src = "verilog/rtl/periph/aucohl_lib.v:30.16-30.18" *)
  input in;
  wire in;
  (* src = "verilog/rtl/periph/aucohl_lib.v:31.17-31.20" *)
  output out;
  wire out;
  (* src = "verilog/rtl/periph/aucohl_lib.v:34.26-34.30" *)
  reg [1:0] sync;
  (* src = "verilog/rtl/periph/aucohl_lib.v:36.5-37.44" *)
  always @(posedge clk)
    sync[0] <= in;
  (* src = "verilog/rtl/periph/aucohl_lib.v:36.5-37.44" *)
  always @(posedge clk)
    sync[1] <= sync[0];
  assign out = sync[1];
endmodule

(* src = "verilog/rtl/periph/cf_util_lib.v:367.1-394.10" *)
module cf_util_gating_cell(clk, rst_n, clk_en, clk_o);
  (* src = "verilog/rtl/periph/cf_util_lib.v:372.21-372.24" *)
  input clk;
  wire clk;
  (* src = "verilog/rtl/periph/cf_util_lib.v:374.21-374.27" *)
  input clk_en;
  wire clk_en;
  (* src = "verilog/rtl/periph/cf_util_lib.v:375.21-375.26" *)
  output clk_o;
  wire clk_o;
  (* src = "verilog/rtl/periph/cf_util_lib.v:373.21-373.26" *)
  input rst_n;
  wire rst_n;
  assign clk_o = clk;
endmodule

(* src = "verilog/rtl/periph/cf_util_lib.v:49.1-58.10" *)
module cf_util_ped(clk, in, out);
  (* src = "verilog/rtl/periph/cf_util_lib.v:50.16-50.19" *)
  input clk;
  wire clk;
  (* src = "verilog/rtl/periph/cf_util_lib.v:51.16-51.18" *)
  input in;
  wire in;
  (* src = "verilog/rtl/periph/cf_util_lib.v:54.9-54.16" *)
  reg last_in;
  (* src = "verilog/rtl/periph/cf_util_lib.v:52.17-52.20" *)
  output out;
  wire out;
  assign out = in & ~(last_in);
  (* src = "verilog/rtl/periph/cf_util_lib.v:55.5-56.16" *)
  always @(posedge clk)
    last_in <= in;
endmodule

(* src = "verilog/rtl/periph/i3c_controller.v:12.1-318.10" *)
module i3c_controller(clk, rst_n, wb_cyc_i, wb_stb_i, wb_we_i, wb_sel_i, wb_adr_i, wb_dat_i, wb_dat_o, wb_ack_o, scl, sda, irq);
  (* src = "verilog/rtl/periph/i3c_controller.v:222.5-307.8" *)
  wire [3:0] _0000_;
  (* src = "verilog/rtl/periph/i3c_controller.v:222.5-307.8" *)
  wire _0001_;
  (* src = "verilog/rtl/periph/i3c_controller.v:160.5-175.8" *)
  wire [7:0] _0002_;
  (* unused_bits = "0" *)
  wire [2:0] _0003_;
  (* src = "verilog/rtl/periph/i3c_controller.v:222.5-307.8" *)
  wire _0004_;
  (* src = "verilog/rtl/periph/i3c_controller.v:160.5-175.8" *)
  wire _0005_;
  (* src = "verilog/rtl/periph/i3c_controller.v:222.5-307.8" *)
  wire _0006_;
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  wire _0007_;
  (* src = "verilog/rtl/periph/i3c_controller.v:137.41-137.65" *)
  wire _0008_;
  (* src = "verilog/rtl/periph/i3c_controller.v:137.41-137.65" *)
  wire _0009_;
  (* src = "verilog/rtl/periph/i3c_controller.v:137.41-137.65" *)
  wire _0010_;
  (* src = "verilog/rtl/periph/i3c_controller.v:137.41-137.65" *)
  wire _0011_;
  (* src = "verilog/rtl/periph/i3c_controller.v:137.41-137.65" *)
  wire _0012_;
  (* src = "verilog/rtl/periph/i3c_controller.v:137.41-137.65" *)
  wire _0013_;
  (* src = "verilog/rtl/periph/i3c_controller.v:137.41-137.65" *)
  wire _0014_;
  (* src = "verilog/rtl/periph/i3c_controller.v:137.41-137.65" *)
  wire _0015_;
  (* src = "verilog/rtl/periph/i3c_controller.v:137.41-137.65" *)
  wire _0016_;
  (* src = "verilog/rtl/periph/i3c_controller.v:137.41-137.65" *)
  wire _0017_;
  (* src = "verilog/rtl/periph/i3c_controller.v:137.41-137.65" *)
  wire _0018_;
  (* src = "verilog/rtl/periph/i3c_controller.v:137.41-137.65" *)
  wire _0019_;
  (* src = "verilog/rtl/periph/i3c_controller.v:137.41-137.65" *)
  wire _0020_;
  (* src = "verilog/rtl/periph/i3c_controller.v:137.41-137.65" *)
  wire _0021_;
  (* src = "verilog/rtl/periph/i3c_controller.v:137.41-137.65" *)
  wire _0022_;
  (* src = "verilog/rtl/periph/i3c_controller.v:137.41-137.65" *)
  wire _0023_;
  (* src = "verilog/rtl/periph/i3c_controller.v:137.41-137.65" *)
  wire _0024_;
  (* src = "verilog/rtl/periph/i3c_controller.v:137.41-137.65" *)
  wire _0025_;
  (* src = "verilog/rtl/periph/i3c_controller.v:137.41-137.65" *)
  wire _0026_;
  (* src = "verilog/rtl/periph/i3c_controller.v:137.41-137.65" *)
  wire _0027_;
  (* src = "verilog/rtl/periph/i3c_controller.v:137.41-137.65" *)
  wire _0028_;
  (* src = "verilog/rtl/periph/i3c_controller.v:137.41-137.65" *)
  wire _0029_;
  (* src = "verilog/rtl/periph/i3c_controller.v:137.41-137.65" *)
  wire _0030_;
  (* src = "verilog/rtl/periph/i3c_controller.v:137.41-137.65" *)
  wire _0031_;
  (* src = "verilog/rtl/periph/i3c_controller.v:137.41-137.65" *)
  wire _0032_;
  (* src = "verilog/rtl/periph/i3c_controller.v:137.41-137.65" *)
  wire _0033_;
  (* src = "verilog/rtl/periph/i3c_controller.v:137.41-137.65" *)
  wire _0034_;
  (* src = "verilog/rtl/periph/i3c_controller.v:137.41-137.65" *)
  wire _0035_;
  (* src = "verilog/rtl/periph/i3c_controller.v:137.41-137.65" *)
  wire _0036_;
  (* src = "verilog/rtl/periph/i3c_controller.v:137.41-137.65" *)
  wire _0037_;
  (* src = "verilog/rtl/periph/i3c_controller.v:137.41-137.65" *)
  wire _0038_;
  wire _0039_;
  wire _0040_;
  wire _0041_;
  wire _0042_;
  wire _0043_;
  wire _0044_;
  wire _0045_;
  wire _0046_;
  wire _0047_;
  wire _0048_;
  wire _0049_;
  wire _0050_;
  wire _0051_;
  wire _0052_;
  wire _0053_;
  wire _0054_;
  wire _0055_;
  wire _0056_;
  wire _0057_;
  wire _0058_;
  wire _0059_;
  wire _0060_;
  wire _0061_;
  wire _0062_;
  wire _0063_;
  wire _0064_;
  wire _0065_;
  wire _0066_;
  wire _0067_;
  wire _0068_;
  wire _0069_;
  wire _0070_;
  wire _0071_;
  wire _0072_;
  wire _0073_;
  wire _0074_;
  wire _0075_;
  wire _0076_;
  wire _0077_;
  wire _0078_;
  wire _0079_;
  wire _0080_;
  wire _0081_;
  wire _0082_;
  wire _0083_;
  wire _0084_;
  wire _0085_;
  wire _0086_;
  wire _0087_;
  wire _0088_;
  wire _0089_;
  wire _0090_;
  wire _0091_;
  wire _0092_;
  wire _0093_;
  wire _0094_;
  wire _0095_;
  wire _0096_;
  wire _0097_;
  wire _0098_;
  wire _0099_;
  wire _0100_;
  wire _0101_;
  wire _0102_;
  wire _0103_;
  wire _0104_;
  wire _0105_;
  wire _0106_;
  wire _0107_;
  wire _0108_;
  wire _0109_;
  wire _0110_;
  wire _0111_;
  wire _0112_;
  wire _0113_;
  wire _0114_;
  wire _0115_;
  wire _0116_;
  wire _0117_;
  wire _0118_;
  wire _0119_;
  wire _0120_;
  wire _0121_;
  wire _0122_;
  wire _0123_;
  wire _0124_;
  wire _0125_;
  wire _0126_;
  wire _0127_;
  wire _0128_;
  wire _0129_;
  wire _0130_;
  wire _0131_;
  wire _0132_;
  wire _0133_;
  wire _0134_;
  wire _0135_;
  wire _0136_;
  wire _0137_;
  wire _0138_;
  wire _0139_;
  wire _0140_;
  wire _0141_;
  wire _0142_;
  wire _0143_;
  wire _0144_;
  wire _0145_;
  wire _0146_;
  wire _0147_;
  wire _0148_;
  wire _0149_;
  wire _0150_;
  wire _0151_;
  wire _0152_;
  wire _0153_;
  wire _0154_;
  wire _0155_;
  wire _0156_;
  wire _0157_;
  wire _0158_;
  wire _0159_;
  wire _0160_;
  wire _0161_;
  wire _0162_;
  wire _0163_;
  wire _0164_;
  wire _0165_;
  wire _0166_;
  wire _0167_;
  wire _0168_;
  wire _0169_;
  wire _0170_;
  wire _0171_;
  wire _0172_;
  wire _0173_;
  wire _0174_;
  wire _0175_;
  wire _0176_;
  wire _0177_;
  wire _0178_;
  wire _0179_;
  wire _0180_;
  wire _0181_;
  wire _0182_;
  wire _0183_;
  wire _0184_;
  wire _0185_;
  wire _0186_;
  wire _0187_;
  wire _0188_;
  wire _0189_;
  wire _0190_;
  wire _0191_;
  wire _0192_;
  wire _0193_;
  wire _0194_;
  wire _0195_;
  wire _0196_;
  wire _0197_;
  wire _0198_;
  wire _0199_;
  wire _0200_;
  wire _0201_;
  wire _0202_;
  wire _0203_;
  wire _0204_;
  wire _0205_;
  wire _0206_;
  wire _0207_;
  wire _0208_;
  wire _0209_;
  wire _0210_;
  wire _0211_;
  wire _0212_;
  wire _0213_;
  wire _0214_;
  wire _0215_;
  wire _0216_;
  wire _0217_;
  wire _0218_;
  wire _0219_;
  wire _0220_;
  wire _0221_;
  wire _0222_;
  wire _0223_;
  wire _0224_;
  wire _0225_;
  wire _0226_;
  wire _0227_;
  wire _0228_;
  wire _0229_;
  wire _0230_;
  wire _0231_;
  wire _0232_;
  wire _0233_;
  wire _0234_;
  wire _0235_;
  wire _0236_;
  wire _0237_;
  wire _0238_;
  wire _0239_;
  wire _0240_;
  wire _0241_;
  wire _0242_;
  wire _0243_;
  wire _0244_;
  wire _0245_;
  wire _0246_;
  wire _0247_;
  wire _0248_;
  wire _0249_;
  wire _0250_;
  wire _0251_;
  wire _0252_;
  wire _0253_;
  wire _0254_;
  wire _0255_;
  wire _0256_;
  wire _0257_;
  wire _0258_;
  wire _0259_;
  wire _0260_;
  wire _0261_;
  wire _0262_;
  wire _0263_;
  wire _0264_;
  wire _0265_;
  wire _0266_;
  wire _0267_;
  wire _0268_;
  wire _0269_;
  wire _0270_;
  wire _0271_;
  wire _0272_;
  wire _0273_;
  wire _0274_;
  wire _0275_;
  wire _0276_;
  wire _0277_;
  wire _0278_;
  wire _0279_;
  wire _0280_;
  wire _0281_;
  wire _0282_;
  wire _0283_;
  wire _0284_;
  wire _0285_;
  wire _0286_;
  wire _0287_;
  wire _0288_;
  wire _0289_;
  wire _0290_;
  wire _0291_;
  wire _0292_;
  wire _0293_;
  wire _0294_;
  wire _0295_;
  wire _0296_;
  wire _0297_;
  wire _0298_;
  wire _0299_;
  wire _0300_;
  wire _0301_;
  wire _0302_;
  wire _0303_;
  wire _0304_;
  wire _0305_;
  wire _0306_;
  wire _0307_;
  wire _0308_;
  wire _0309_;
  wire _0310_;
  wire _0311_;
  wire _0312_;
  wire _0313_;
  wire _0314_;
  wire _0315_;
  wire _0316_;
  wire _0317_;
  wire _0318_;
  wire _0319_;
  wire _0320_;
  wire _0321_;
  wire _0322_;
  wire _0323_;
  wire _0324_;
  wire _0325_;
  wire _0326_;
  wire _0327_;
  wire _0328_;
  wire _0329_;
  wire _0330_;
  wire _0331_;
  wire _0332_;
  wire _0333_;
  wire _0334_;
  wire _0335_;
  wire _0336_;
  wire _0337_;
  wire _0338_;
  wire _0339_;
  wire _0340_;
  wire _0341_;
  wire _0342_;
  wire _0343_;
  wire _0344_;
  wire _0345_;
  wire _0346_;
  wire _0347_;
  wire _0348_;
  wire _0349_;
  wire _0350_;
  wire _0351_;
  wire _0352_;
  wire _0353_;
  wire _0354_;
  wire _0355_;
  wire _0356_;
  wire _0357_;
  wire _0358_;
  wire _0359_;
  wire _0360_;
  wire _0361_;
  wire _0362_;
  wire _0363_;
  wire _0364_;
  wire _0365_;
  wire _0366_;
  wire _0367_;
  wire _0368_;
  wire _0369_;
  wire _0370_;
  wire _0371_;
  wire _0372_;
  wire _0373_;
  wire _0374_;
  wire _0375_;
  wire _0376_;
  wire _0377_;
  wire _0378_;
  wire _0379_;
  wire _0380_;
  wire _0381_;
  wire _0382_;
  wire _0383_;
  wire _0384_;
  wire _0385_;
  wire _0386_;
  wire _0387_;
  wire _0388_;
  wire _0389_;
  wire _0390_;
  wire _0391_;
  wire _0392_;
  wire _0393_;
  wire _0394_;
  wire _0395_;
  wire _0396_;
  wire _0397_;
  wire _0398_;
  wire _0399_;
  wire _0400_;
  wire _0401_;
  wire _0402_;
  wire _0403_;
  wire _0404_;
  wire _0405_;
  wire _0406_;
  wire _0407_;
  wire _0408_;
  wire _0409_;
  wire _0410_;
  wire _0411_;
  wire _0412_;
  wire _0413_;
  wire _0414_;
  wire _0415_;
  wire _0416_;
  wire _0417_;
  wire _0418_;
  wire _0419_;
  wire _0420_;
  wire _0421_;
  wire _0422_;
  wire _0423_;
  wire _0424_;
  wire _0425_;
  wire _0426_;
  wire _0427_;
  wire _0428_;
  wire _0429_;
  wire _0430_;
  wire _0431_;
  wire _0432_;
  wire _0433_;
  wire _0434_;
  wire _0435_;
  wire _0436_;
  wire _0437_;
  wire _0438_;
  wire _0439_;
  wire _0440_;
  wire _0441_;
  wire _0442_;
  wire _0443_;
  wire _0444_;
  wire _0445_;
  wire _0446_;
  wire _0447_;
  wire _0448_;
  wire _0449_;
  wire _0450_;
  wire _0451_;
  wire _0452_;
  wire _0453_;
  wire _0454_;
  wire _0455_;
  wire _0456_;
  wire _0457_;
  wire _0458_;
  wire _0459_;
  wire _0460_;
  wire _0461_;
  wire _0462_;
  wire _0463_;
  wire _0464_;
  wire _0465_;
  wire _0466_;
  wire _0467_;
  wire _0468_;
  wire _0469_;
  wire _0470_;
  wire _0471_;
  wire _0472_;
  wire _0473_;
  wire _0474_;
  wire _0475_;
  wire _0476_;
  wire _0477_;
  wire _0478_;
  wire _0479_;
  wire _0480_;
  wire _0481_;
  wire _0482_;
  wire _0483_;
  wire _0484_;
  wire _0485_;
  wire _0486_;
  wire _0487_;
  wire _0488_;
  wire _0489_;
  wire _0490_;
  wire _0491_;
  wire _0492_;
  wire _0493_;
  wire _0494_;
  wire _0495_;
  wire _0496_;
  wire _0497_;
  wire _0498_;
  wire _0499_;
  wire _0500_;
  wire _0501_;
  wire _0502_;
  wire _0503_;
  wire _0504_;
  wire _0505_;
  wire _0506_;
  wire _0507_;
  wire _0508_;
  wire _0509_;
  wire _0510_;
  wire _0511_;
  wire _0512_;
  wire _0513_;
  wire _0514_;
  wire _0515_;
  wire _0516_;
  wire _0517_;
  wire _0518_;
  wire _0519_;
  wire _0520_;
  wire _0521_;
  wire _0522_;
  wire _0523_;
  wire _0524_;
  wire _0525_;
  wire _0526_;
  wire _0527_;
  wire _0528_;
  wire _0529_;
  wire _0530_;
  wire _0531_;
  wire _0532_;
  wire _0533_;
  wire _0534_;
  wire _0535_;
  wire _0536_;
  wire _0537_;
  wire _0538_;
  wire _0539_;
  wire _0540_;
  wire _0541_;
  wire _0542_;
  wire _0543_;
  wire _0544_;
  wire _0545_;
  wire _0546_;
  wire _0547_;
  wire _0548_;
  wire _0549_;
  wire _0550_;
  wire _0551_;
  wire _0552_;
  wire _0553_;
  wire _0554_;
  wire _0555_;
  wire _0556_;
  wire _0557_;
  wire _0558_;
  wire _0559_;
  wire _0560_;
  wire _0561_;
  wire _0562_;
  wire _0563_;
  wire _0564_;
  wire _0565_;
  wire _0566_;
  wire _0567_;
  wire _0568_;
  wire _0569_;
  wire _0570_;
  wire _0571_;
  wire _0572_;
  wire _0573_;
  wire _0574_;
  wire _0575_;
  wire _0576_;
  wire _0577_;
  wire _0578_;
  wire _0579_;
  wire _0580_;
  wire _0581_;
  wire _0582_;
  wire _0583_;
  wire _0584_;
  wire _0585_;
  wire _0586_;
  wire _0587_;
  wire _0588_;
  wire _0589_;
  wire _0590_;
  wire _0591_;
  wire _0592_;
  wire _0593_;
  wire _0594_;
  wire _0595_;
  wire _0596_;
  wire _0597_;
  wire _0598_;
  wire _0599_;
  wire _0600_;
  wire _0601_;
  wire _0602_;
  wire _0603_;
  wire _0604_;
  wire _0605_;
  wire _0606_;
  wire _0607_;
  wire _0608_;
  wire _0609_;
  wire _0610_;
  (* src = "verilog/rtl/periph/i3c_controller.v:267.37-267.44" *)
  wire _0611_;
  (* force_downto = 32'd1 *)
  (* src = "verilog/rtl/periph/i3c_controller.v:0.0-0.0|verilog/rtl/periph/i3c_controller.v:235.13-305.20|/nix/store/9r0bh7sp051dpm8km8bqlb028anpd3v3-yosys/bin/../share/yosys/techmap.v:576.21-576.22" *)
  wire [7:0] _0612_;
  (* force_downto = 32'd1 *)
  (* src = "verilog/rtl/periph/i3c_controller.v:0.0-0.0|verilog/rtl/periph/i3c_controller.v:235.13-305.20|/nix/store/9r0bh7sp051dpm8km8bqlb028anpd3v3-yosys/bin/../share/yosys/techmap.v:576.21-576.22" *)
  wire _0613_;
  (* force_downto = 32'd1 *)
  (* src = "verilog/rtl/periph/i3c_controller.v:0.0-0.0|verilog/rtl/periph/i3c_controller.v:142.17-150.24|/nix/store/9r0bh7sp051dpm8km8bqlb028anpd3v3-yosys/bin/../share/yosys/techmap.v:576.21-576.22" *)
  wire [31:0] _0614_;
  (* src = "verilog/rtl/periph/i3c_controller.v:62.9-62.21" *)
  reg ack_received;
  (* src = "verilog/rtl/periph/i3c_controller.v:48.16-48.24" *)
  reg [31:0] addr_reg;
  (* src = "verilog/rtl/periph/i3c_controller.v:86.15-86.22" *)
  reg [3:0] bit_cnt;
  (* src = "verilog/rtl/periph/i3c_controller.v:60.9-60.13" *)
  reg busy;
  (* src = "verilog/rtl/periph/i3c_controller.v:14.24-14.27" *)
  input clk;
  wire clk;
  (* src = "verilog/rtl/periph/i3c_controller.v:77.15-77.22" *)
  reg [7:0] clk_div;
  (* src = "verilog/rtl/periph/i3c_controller.v:45.16-45.24" *)
  reg [31:0] ctrl_reg;
  (* src = "verilog/rtl/periph/i3c_controller.v:47.16-47.24" *)
  reg [31:0] data_reg;
  (* src = "verilog/rtl/periph/i3c_controller.v:61.9-61.13" *)
  reg done;
  (* src = "verilog/rtl/periph/i3c_controller.v:53.10-53.16" *)
  wire enable;
  (* src = "verilog/rtl/periph/i3c_controller.v:63.9-63.14" *)
  wire error;
  (* src = "verilog/rtl/periph/i3c_controller.v:78.9-78.16" *)
  reg i3c_clk;
  (* src = "verilog/rtl/periph/i3c_controller.v:32.24-32.27" *)
  output irq;
  wire irq;
  (* src = "verilog/rtl/periph/i3c_controller.v:49.16-49.26" *)
  reg [31:0] irq_en_reg;
  (* src = "verilog/rtl/periph/i3c_controller.v:50.16-50.28" *)
  wire [31:0] irq_stat_reg;
  (* src = "verilog/rtl/periph/i3c_controller.v:74.15-74.25" *)
  wire [2:0] next_state;
  (* src = "verilog/rtl/periph/i3c_controller.v:56.10-56.19" *)
  wire read_mode;
  (* src = "verilog/rtl/periph/i3c_controller.v:92.16-92.24" *)
  wire [7:0] reg_addr;
  (* src = "verilog/rtl/periph/i3c_controller.v:15.24-15.29" *)
  input rst_n;
  wire rst_n;
  (* src = "verilog/rtl/periph/i3c_controller.v:28.24-28.27" *)
  inout scl;
  reg scl;
  (* src = "verilog/rtl/periph/i3c_controller.v:83.10-83.16" *)
  (* unused_bits = "0" *)
  wire scl_in;
  (* src = "verilog/rtl/periph/i3c_controller.v:81.9-81.16" *)
  (* unused_bits = "0" *)
  wire scl_out;
  (* src = "verilog/rtl/periph/i3c_controller.v:29.24-29.27" *)
  inout sda;
  reg sda;
  (* src = "verilog/rtl/periph/i3c_controller.v:83.18-83.24" *)
  wire sda_in;
  (* src = "verilog/rtl/periph/i3c_controller.v:82.9-82.16" *)
  wire sda_out;
  (* src = "verilog/rtl/periph/i3c_controller.v:89.15-89.24" *)
  reg [7:0] shift_reg;
  (* src = "verilog/rtl/periph/i3c_controller.v:54.10-54.15" *)
  wire start;
  (* src = "verilog/rtl/periph/i3c_controller.v:73.15-73.20" *)
  reg [2:0] state;
  (* src = "verilog/rtl/periph/i3c_controller.v:55.10-55.14" *)
  wire stop;
  (* src = "verilog/rtl/periph/i3c_controller.v:25.24-25.32" *)
  output wb_ack_o;
  reg wb_ack_o;
  (* src = "verilog/rtl/periph/i3c_controller.v:22.24-22.32" *)
  input [31:0] wb_adr_i;
  wire [31:0] wb_adr_i;
  (* src = "verilog/rtl/periph/i3c_controller.v:18.24-18.32" *)
  input wb_cyc_i;
  wire wb_cyc_i;
  (* src = "verilog/rtl/periph/i3c_controller.v:23.24-23.32" *)
  input [31:0] wb_dat_i;
  wire [31:0] wb_dat_i;
  (* src = "verilog/rtl/periph/i3c_controller.v:24.24-24.32" *)
  output [31:0] wb_dat_o;
  reg [31:0] wb_dat_o;
  (* src = "verilog/rtl/periph/i3c_controller.v:21.24-21.32" *)
  input [3:0] wb_sel_i;
  wire [3:0] wb_sel_i;
  (* src = "verilog/rtl/periph/i3c_controller.v:19.24-19.32" *)
  input wb_stb_i;
  wire wb_stb_i;
  (* src = "verilog/rtl/periph/i3c_controller.v:20.24-20.31" *)
  input wb_we_i;
  wire wb_we_i;
  (* src = "verilog/rtl/periph/i3c_controller.v:57.10-57.20" *)
  wire write_mode;
  assign _0067_ = irq_en_reg[1] & irq_stat_reg[1];
  assign _0068_ = _0067_ | irq_en_reg[0];
  assign _0069_ = irq_en_reg[2] & irq_stat_reg[2];
  assign _0070_ = irq_en_reg[3] & irq_stat_reg[3];
  assign _0071_ = _0070_ | _0069_;
  assign _0072_ = _0071_ | _0068_;
  assign _0073_ = irq_en_reg[4] & irq_stat_reg[4];
  assign _0074_ = irq_en_reg[5] & irq_stat_reg[5];
  assign _0075_ = _0074_ | _0073_;
  assign _0076_ = irq_en_reg[6] & irq_stat_reg[6];
  assign _0077_ = irq_en_reg[7] & irq_stat_reg[7];
  assign _0078_ = _0077_ | _0076_;
  assign _0079_ = _0078_ | _0075_;
  assign _0080_ = _0079_ | _0072_;
  assign _0081_ = irq_en_reg[8] & irq_stat_reg[8];
  assign _0082_ = irq_en_reg[9] & irq_stat_reg[9];
  assign _0083_ = _0082_ | _0081_;
  assign _0084_ = irq_en_reg[10] & irq_stat_reg[10];
  assign _0085_ = irq_en_reg[11] & irq_stat_reg[11];
  assign _0086_ = _0085_ | _0084_;
  assign _0087_ = _0086_ | _0083_;
  assign _0088_ = irq_en_reg[12] & irq_stat_reg[12];
  assign _0089_ = irq_en_reg[13] & irq_stat_reg[13];
  assign _0090_ = _0089_ | _0088_;
  assign _0091_ = irq_en_reg[14] & irq_stat_reg[14];
  assign _0092_ = irq_en_reg[15] & irq_stat_reg[15];
  assign _0093_ = _0092_ | _0091_;
  assign _0094_ = _0093_ | _0090_;
  assign _0095_ = _0094_ | _0087_;
  assign _0096_ = _0095_ | _0080_;
  assign _0097_ = irq_en_reg[16] & irq_stat_reg[16];
  assign _0098_ = irq_en_reg[17] & irq_stat_reg[17];
  assign _0099_ = _0098_ | _0097_;
  assign _0100_ = irq_en_reg[18] & irq_stat_reg[18];
  assign _0101_ = irq_en_reg[19] & irq_stat_reg[19];
  assign _0102_ = _0101_ | _0100_;
  assign _0103_ = _0102_ | _0099_;
  assign _0104_ = irq_en_reg[20] & irq_stat_reg[20];
  assign _0105_ = irq_en_reg[21] & irq_stat_reg[21];
  assign _0106_ = _0105_ | _0104_;
  assign _0107_ = irq_en_reg[22] & irq_stat_reg[22];
  assign _0108_ = irq_en_reg[23] & irq_stat_reg[23];
  assign _0109_ = _0108_ | _0107_;
  assign _0110_ = _0109_ | _0106_;
  assign _0111_ = _0110_ | _0103_;
  assign _0112_ = irq_en_reg[24] & irq_stat_reg[24];
  assign _0113_ = irq_en_reg[25] & irq_stat_reg[25];
  assign _0114_ = _0113_ | _0112_;
  assign _0115_ = irq_en_reg[26] & irq_stat_reg[26];
  assign _0116_ = irq_en_reg[27] & irq_stat_reg[27];
  assign _0117_ = _0116_ | _0115_;
  assign _0118_ = _0117_ | _0114_;
  assign _0119_ = irq_en_reg[28] & irq_stat_reg[28];
  assign _0120_ = irq_en_reg[29] & irq_stat_reg[29];
  assign _0121_ = _0120_ | _0119_;
  assign _0122_ = irq_en_reg[30] & irq_stat_reg[30];
  assign _0123_ = irq_en_reg[31] & irq_stat_reg[31];
  assign _0124_ = _0123_ | _0122_;
  assign _0125_ = _0124_ | _0121_;
  assign _0126_ = _0125_ | _0118_;
  assign _0127_ = _0126_ | _0111_;
  assign irq = _0127_ | _0096_;
  assign _0128_ = state[1] | ~(state[0]);
  assign _0004_ = state[2] & ~(_0128_);
  assign _0129_ = ~(state[2] | state[1]);
  assign _0041_ = _0129_ | _0004_;
  assign _0130_ = state[2] | ~(state[1]);
  assign _0131_ = ~state[2];
  assign _0132_ = state[0] | state[1];
  assign _0133_ = _0131_ & ~(_0132_);
  assign _0134_ = _0131_ & ~(_0128_);
  assign _0135_ = _0134_ | _0004_;
  assign _0136_ = _0135_ | _0133_;
  assign _0040_ = _0136_ | ~(_0130_);
  assign _0137_ = _0133_ | _0004_;
  assign _0042_ = _0137_ | _0134_;
  assign _0138_ = ~ctrl_reg[4];
  assign _0139_ = ~(state[0] & state[1]);
  assign _0140_ = _0131_ & ~(_0139_);
  assign _0141_ = ~(_0140_ & _0138_);
  assign _0142_ = _0130_ & ~(_0042_);
  assign _0143_ = _0141_ & ~(_0142_);
  assign _0144_ = ~(_0130_ | i3c_clk);
  assign _0064_ = _0143_ & ~(_0144_);
  assign _0145_ = ~(wb_stb_i & wb_cyc_i);
  assign _0146_ = _0145_ | ~(wb_we_i);
  assign _0147_ = _0146_ | wb_ack_o;
  assign _0148_ = wb_sel_i[2] & ~(_0147_);
  assign _0149_ = wb_adr_i[1] | wb_adr_i[0];
  assign _0150_ = wb_adr_i[2] | wb_adr_i[3];
  assign _0151_ = _0150_ | _0149_;
  assign _0152_ = wb_adr_i[5] | ~(wb_adr_i[4]);
  assign _0153_ = wb_adr_i[7] | wb_adr_i[6];
  assign _0154_ = _0153_ | _0152_;
  assign _0155_ = _0154_ | _0151_;
  assign _0046_ = _0148_ & ~(_0155_);
  assign _0156_ = ~(wb_adr_i[2] & wb_adr_i[3]);
  assign _0157_ = ~(_0156_ | _0149_);
  assign _0158_ = wb_adr_i[5] | wb_adr_i[4];
  assign _0159_ = _0158_ | _0153_;
  assign _0160_ = _0159_ | ~(_0157_);
  assign _0050_ = _0148_ & ~(_0160_);
  assign _0161_ = wb_sel_i[1] & ~(_0147_);
  assign _0049_ = _0161_ & ~(_0160_);
  assign _0162_ = wb_sel_i[0] & ~(_0147_);
  assign _0048_ = _0162_ & ~(_0160_);
  assign _0066_ = _0132_ | _0131_;
  assign _0163_ = _0066_ & ~(_0133_);
  assign _0164_ = i3c_clk | ~(_0163_);
  assign _0165_ = state[1] ? state[2] : state[0];
  assign _0166_ = _0164_ & ~(_0165_);
  assign _0167_ = ctrl_reg[4] | ctrl_reg[3];
  assign _0168_ = _0140_ & ~(_0167_);
  assign _0065_ = _0166_ & ~(_0168_);
  assign _0169_ = wb_sel_i[3] & ~(_0147_);
  assign _0047_ = _0169_ & ~(_0155_);
  assign _0170_ = ~(rst_n & ctrl_reg[3]);
  assign _0063_ = _0004_ & ~(_0170_);
  assign _0171_ = _0140_ | ~(_0066_);
  assign _0172_ = state[0] | ~(state[1]);
  assign _0173_ = _0131_ & ~(_0172_);
  assign _0174_ = _0173_ | _0134_;
  assign _0175_ = _0174_ | _0171_;
  assign _0176_ = ~(_0167_ | _0066_);
  assign _0177_ = _0175_ & ~(_0176_);
  assign _0178_ = ctrl_reg[3] & ~(ctrl_reg[4]);
  assign _0179_ = i3c_clk | ~(_0140_);
  assign _0180_ = _0178_ & ~(_0179_);
  assign _0181_ = _0180_ | _0168_;
  assign _0062_ = _0177_ & ~(_0181_);
  assign _0182_ = bit_cnt[1] & bit_cnt[0];
  assign _0183_ = bit_cnt[3] | ~(bit_cnt[2]);
  assign _0184_ = _0182_ & ~(_0183_);
  assign _0185_ = _0184_ | ~(_0173_);
  assign _0186_ = _0140_ & ~(_0184_);
  assign _0187_ = _0185_ & ~(_0186_);
  assign _0188_ = ctrl_reg[1] & ctrl_reg[0];
  assign _0189_ = _0133_ & ~(_0188_);
  assign _0061_ = _0187_ & ~(_0189_);
  assign _0190_ = clk_div[1] & clk_div[0];
  assign _0191_ = ~(clk_div[3] | clk_div[2]);
  assign _0192_ = ~(_0191_ & _0190_);
  assign _0193_ = clk_div[5] & ~(clk_div[4]);
  assign _0194_ = clk_div[7] | ~(clk_div[6]);
  assign _0195_ = _0193_ & ~(_0194_);
  assign _0196_ = _0195_ & ~(_0192_);
  assign _0039_ = _0196_ | ~(ctrl_reg[0]);
  assign _0197_ = _0145_ | wb_we_i;
  assign _0198_ = _0197_ | wb_ack_o;
  assign _0060_ = _0147_ & ~(_0198_);
  assign _0045_ = _0161_ & ~(_0155_);
  assign _0199_ = _0159_ | _0151_;
  assign _0059_ = _0169_ & ~(_0199_);
  assign _0058_ = _0148_ & ~(_0199_);
  assign _0057_ = _0161_ & ~(_0199_);
  assign _0056_ = _0162_ & ~(_0199_);
  assign _0200_ = wb_adr_i[2] | ~(wb_adr_i[3]);
  assign _0201_ = _0200_ | _0149_;
  assign _0202_ = _0201_ | _0159_;
  assign _0055_ = _0169_ & ~(_0202_);
  assign _0054_ = _0148_ & ~(_0202_);
  assign _0053_ = _0161_ & ~(_0202_);
  assign _0052_ = _0162_ & ~(_0202_);
  assign _0051_ = _0169_ & ~(_0160_);
  assign _0044_ = _0162_ & ~(_0155_);
  assign _0203_ = _0201_ | _0154_;
  assign _0043_ = ~(_0203_ | _0147_);
  assign _0007_ = ~(_0145_ | wb_ack_o);
  assign _0000_[0] = _0163_ & ~(bit_cnt[0]);
  assign _0204_ = ~(bit_cnt[1] ^ bit_cnt[0]);
  assign _0000_[1] = _0163_ & ~(_0204_);
  assign _0205_ = ~(_0182_ ^ bit_cnt[2]);
  assign _0000_[2] = _0163_ & ~(_0205_);
  assign _0206_ = ~(_0182_ & bit_cnt[2]);
  assign _0207_ = _0206_ ^ bit_cnt[3];
  assign _0000_[3] = _0163_ & ~(_0207_);
  assign _0002_[0] = ctrl_reg[0] & ~(clk_div[0]);
  assign _0208_ = ~(clk_div[1] ^ clk_div[0]);
  assign _0002_[1] = ctrl_reg[0] & ~(_0208_);
  assign _0209_ = ~(_0190_ ^ clk_div[2]);
  assign _0210_ = _0209_ | _0196_;
  assign _0002_[2] = ctrl_reg[0] & ~(_0210_);
  assign _0211_ = ~(_0190_ & clk_div[2]);
  assign _0212_ = _0211_ ^ clk_div[3];
  assign _0213_ = _0212_ | _0196_;
  assign _0002_[3] = ctrl_reg[0] & ~(_0213_);
  assign _0214_ = ~(clk_div[3] & clk_div[2]);
  assign _0215_ = _0214_ | ~(_0190_);
  assign _0216_ = _0215_ ^ clk_div[4];
  assign _0217_ = _0216_ | _0196_;
  assign _0002_[4] = ctrl_reg[0] & ~(_0217_);
  assign _0218_ = _0215_ | ~(clk_div[4]);
  assign _0219_ = _0218_ ^ clk_div[5];
  assign _0220_ = _0219_ | _0196_;
  assign _0002_[5] = ctrl_reg[0] & ~(_0220_);
  assign _0221_ = ~(clk_div[5] & clk_div[4]);
  assign _0222_ = _0221_ | _0215_;
  assign _0223_ = _0222_ ^ clk_div[6];
  assign _0224_ = _0223_ | _0196_;
  assign _0002_[6] = ctrl_reg[0] & ~(_0224_);
  assign _0225_ = _0222_ | ~(clk_div[6]);
  assign _0226_ = _0225_ ^ clk_div[7];
  assign _0227_ = _0226_ | _0196_;
  assign _0002_[7] = ctrl_reg[0] & ~(_0227_);
  assign _0228_ = ~(wb_dat_i[2] & wb_sel_i[0]);
  assign _0229_ = _0228_ | _0199_;
  assign _0230_ = ~(_0229_ | _0147_);
  assign _0003_[2] = _0230_ & ~(ctrl_reg[2]);
  assign _0231_ = ~(wb_dat_i[1] & wb_sel_i[0]);
  assign _0232_ = _0231_ | _0199_;
  assign _0233_ = ~(_0232_ | _0147_);
  assign _0003_[1] = _0233_ & ~(ctrl_reg[1]);
  assign _0234_ = ~(_0171_ | _0173_);
  assign _0611_ = ~sda;
  assign _0235_ = i3c_clk | ~(shift_reg[0]);
  assign _0236_ = ctrl_reg[4] ? _0235_ : _0611_;
  assign _0237_ = _0140_ & ~(_0236_);
  assign _0238_ = data_reg[0] & ~(_0066_);
  assign _0239_ = _0238_ | _0237_;
  assign _0240_ = _0173_ & ~(_0235_);
  assign _0241_ = _0240_ | _0239_;
  assign _0612_[0] = _0234_ ? addr_reg[0] : _0241_;
  assign _0242_ = ~shift_reg[0];
  assign _0243_ = ~shift_reg[1];
  assign _0244_ = i3c_clk ? _0242_ : _0243_;
  assign _0245_ = ctrl_reg[4] ? _0244_ : _0242_;
  assign _0246_ = _0140_ & ~(_0245_);
  assign _0247_ = data_reg[1] & ~(_0066_);
  assign _0248_ = _0247_ | _0246_;
  assign _0249_ = _0173_ & ~(_0244_);
  assign _0250_ = _0249_ | _0248_;
  assign _0612_[1] = _0234_ ? addr_reg[1] : _0250_;
  assign _0251_ = ~shift_reg[2];
  assign _0252_ = i3c_clk ? _0243_ : _0251_;
  assign _0253_ = ctrl_reg[4] ? _0252_ : _0243_;
  assign _0254_ = _0140_ & ~(_0253_);
  assign _0255_ = data_reg[2] & ~(_0066_);
  assign _0256_ = _0255_ | _0254_;
  assign _0257_ = _0173_ & ~(_0252_);
  assign _0258_ = _0257_ | _0256_;
  assign _0612_[2] = _0234_ ? addr_reg[2] : _0258_;
  assign _0259_ = ~shift_reg[3];
  assign _0260_ = i3c_clk ? _0251_ : _0259_;
  assign _0261_ = ctrl_reg[4] ? _0260_ : _0251_;
  assign _0262_ = _0140_ & ~(_0261_);
  assign _0263_ = data_reg[3] & ~(_0066_);
  assign _0264_ = _0263_ | _0262_;
  assign _0265_ = _0173_ & ~(_0260_);
  assign _0266_ = _0265_ | _0264_;
  assign _0612_[3] = _0234_ ? addr_reg[3] : _0266_;
  assign _0267_ = ~shift_reg[4];
  assign _0268_ = i3c_clk ? _0259_ : _0267_;
  assign _0269_ = ctrl_reg[4] ? _0268_ : _0259_;
  assign _0270_ = _0140_ & ~(_0269_);
  assign _0271_ = data_reg[4] & ~(_0066_);
  assign _0272_ = _0271_ | _0270_;
  assign _0273_ = _0173_ & ~(_0268_);
  assign _0274_ = _0273_ | _0272_;
  assign _0612_[4] = _0234_ ? addr_reg[4] : _0274_;
  assign _0275_ = ~shift_reg[5];
  assign _0276_ = i3c_clk ? _0267_ : _0275_;
  assign _0277_ = ctrl_reg[4] ? _0276_ : _0267_;
  assign _0278_ = _0140_ & ~(_0277_);
  assign _0279_ = data_reg[5] & ~(_0066_);
  assign _0280_ = _0279_ | _0278_;
  assign _0281_ = _0173_ & ~(_0276_);
  assign _0282_ = _0281_ | _0280_;
  assign _0612_[5] = _0234_ ? addr_reg[5] : _0282_;
  assign _0283_ = ~shift_reg[6];
  assign _0284_ = i3c_clk ? _0275_ : _0283_;
  assign _0285_ = ctrl_reg[4] ? _0284_ : _0275_;
  assign _0286_ = _0140_ & ~(_0285_);
  assign _0287_ = data_reg[6] & ~(_0066_);
  assign _0288_ = _0287_ | _0286_;
  assign _0289_ = _0173_ & ~(_0284_);
  assign _0290_ = _0289_ | _0288_;
  assign _0612_[6] = _0234_ ? addr_reg[6] : _0290_;
  assign _0291_ = ~shift_reg[7];
  assign _0292_ = i3c_clk ? _0283_ : _0291_;
  assign _0293_ = ctrl_reg[4] ? _0292_ : _0283_;
  assign _0294_ = _0140_ & ~(_0293_);
  assign _0295_ = data_reg[7] & ~(_0066_);
  assign _0296_ = _0295_ | _0294_;
  assign _0297_ = _0173_ & ~(_0292_);
  assign _0298_ = _0297_ | _0296_;
  assign _0612_[7] = _0234_ ? addr_reg[7] : _0298_;
  assign _0299_ = shift_reg[7] & ~(_0130_);
  assign _0300_ = _0299_ | _0137_;
  assign _0301_ = _0130_ & ~(_0137_);
  assign _0613_ = _0300_ & ~(_0301_);
  assign next_state[0] = _0171_ | _0133_;
  assign _0302_ = _0175_ | _0133_;
  assign _0303_ = ~ack_received;
  assign _0304_ = _0066_ | _0303_;
  assign _0305_ = _0304_ & ~(_0134_);
  assign next_state[1] = _0302_ & ~(_0305_);
  assign _0306_ = _0303_ & ~(_0066_);
  assign _0307_ = _0306_ | _0140_;
  assign _0308_ = ~(_0307_ | _0173_);
  assign next_state[2] = _0302_ & ~(_0308_);
  assign _0309_ = wb_adr_i[3] | ~(wb_adr_i[2]);
  assign _0310_ = _0309_ | _0149_;
  assign _0311_ = _0310_ | _0154_;
  assign _0312_ = irq_en_reg[0] & ~(_0155_);
  assign _0313_ = _0312_ | ~(_0311_);
  assign _0314_ = addr_reg[0] & ~(_0160_);
  assign _0315_ = data_reg[0] & ~(_0202_);
  assign _0316_ = _0315_ | _0314_;
  assign _0317_ = _0316_ | _0313_;
  assign _0318_ = _0310_ | _0159_;
  assign _0319_ = busy & ~(_0318_);
  assign _0320_ = ctrl_reg[0] & ~(_0199_);
  assign _0321_ = _0320_ | _0319_;
  assign _0322_ = _0321_ | _0317_;
  assign _0323_ = ~(_0311_ & _0155_);
  assign _0324_ = ~(_0202_ & _0160_);
  assign _0325_ = _0324_ | _0323_;
  assign _0326_ = ~(_0318_ & _0199_);
  assign _0327_ = _0326_ | _0325_;
  assign _0614_[0] = _0327_ & _0322_;
  assign _0328_ = _0311_ | ~(irq_stat_reg[1]);
  assign _0329_ = irq_en_reg[1] & ~(_0155_);
  assign _0330_ = _0328_ & ~(_0329_);
  assign _0331_ = addr_reg[1] & ~(_0160_);
  assign _0332_ = data_reg[1] & ~(_0202_);
  assign _0333_ = _0332_ | _0331_;
  assign _0334_ = _0330_ & ~(_0333_);
  assign _0335_ = done & ~(_0318_);
  assign _0336_ = ctrl_reg[1] & ~(_0199_);
  assign _0337_ = _0336_ | _0335_;
  assign _0338_ = _0334_ & ~(_0337_);
  assign _0614_[1] = _0327_ & ~(_0338_);
  assign _0339_ = _0311_ | ~(irq_stat_reg[2]);
  assign _0340_ = irq_en_reg[2] & ~(_0155_);
  assign _0341_ = _0339_ & ~(_0340_);
  assign _0342_ = addr_reg[2] & ~(_0160_);
  assign _0343_ = data_reg[2] & ~(_0202_);
  assign _0344_ = _0343_ | _0342_;
  assign _0345_ = _0341_ & ~(_0344_);
  assign _0346_ = ack_received & ~(_0318_);
  assign _0347_ = ctrl_reg[2] & ~(_0199_);
  assign _0348_ = _0347_ | _0346_;
  assign _0349_ = _0345_ & ~(_0348_);
  assign _0614_[2] = _0327_ & ~(_0349_);
  assign _0350_ = _0311_ | ~(irq_stat_reg[3]);
  assign _0351_ = irq_en_reg[3] & ~(_0155_);
  assign _0352_ = _0350_ & ~(_0351_);
  assign _0353_ = addr_reg[3] & ~(_0160_);
  assign _0354_ = data_reg[3] & ~(_0202_);
  assign _0355_ = _0354_ | _0353_;
  assign _0356_ = _0352_ & ~(_0355_);
  assign _0357_ = ctrl_reg[3] & ~(_0199_);
  assign _0358_ = _0356_ & ~(_0357_);
  assign _0614_[3] = _0327_ & ~(_0358_);
  assign _0359_ = _0311_ | ~(irq_stat_reg[4]);
  assign _0360_ = irq_en_reg[4] & ~(_0155_);
  assign _0361_ = _0359_ & ~(_0360_);
  assign _0362_ = addr_reg[4] & ~(_0160_);
  assign _0363_ = data_reg[4] & ~(_0202_);
  assign _0364_ = _0363_ | _0362_;
  assign _0365_ = _0361_ & ~(_0364_);
  assign _0366_ = ctrl_reg[4] & ~(_0199_);
  assign _0367_ = _0365_ & ~(_0366_);
  assign _0614_[4] = _0327_ & ~(_0367_);
  assign _0368_ = _0311_ | ~(irq_stat_reg[5]);
  assign _0369_ = irq_en_reg[5] & ~(_0155_);
  assign _0370_ = _0368_ & ~(_0369_);
  assign _0371_ = addr_reg[5] & ~(_0160_);
  assign _0372_ = data_reg[5] & ~(_0202_);
  assign _0373_ = _0372_ | _0371_;
  assign _0374_ = _0370_ & ~(_0373_);
  assign _0375_ = ctrl_reg[5] & ~(_0199_);
  assign _0376_ = _0374_ & ~(_0375_);
  assign _0614_[5] = _0327_ & ~(_0376_);
  assign _0377_ = _0311_ | ~(irq_stat_reg[6]);
  assign _0378_ = irq_en_reg[6] & ~(_0155_);
  assign _0379_ = _0377_ & ~(_0378_);
  assign _0380_ = addr_reg[6] & ~(_0160_);
  assign _0381_ = data_reg[6] & ~(_0202_);
  assign _0382_ = _0381_ | _0380_;
  assign _0383_ = _0379_ & ~(_0382_);
  assign _0384_ = ctrl_reg[6] & ~(_0199_);
  assign _0385_ = _0383_ & ~(_0384_);
  assign _0614_[6] = _0327_ & ~(_0385_);
  assign _0386_ = _0311_ | ~(irq_stat_reg[7]);
  assign _0387_ = irq_en_reg[7] & ~(_0155_);
  assign _0388_ = _0386_ & ~(_0387_);
  assign _0389_ = addr_reg[7] & ~(_0160_);
  assign _0390_ = data_reg[7] & ~(_0202_);
  assign _0391_ = _0390_ | _0389_;
  assign _0392_ = _0388_ & ~(_0391_);
  assign _0393_ = ctrl_reg[7] & ~(_0199_);
  assign _0394_ = _0392_ & ~(_0393_);
  assign _0614_[7] = _0327_ & ~(_0394_);
  assign _0395_ = _0311_ | ~(irq_stat_reg[8]);
  assign _0396_ = irq_en_reg[8] & ~(_0155_);
  assign _0397_ = _0395_ & ~(_0396_);
  assign _0398_ = addr_reg[8] & ~(_0160_);
  assign _0399_ = data_reg[8] & ~(_0202_);
  assign _0400_ = _0399_ | _0398_;
  assign _0401_ = _0397_ & ~(_0400_);
  assign _0402_ = ctrl_reg[8] & ~(_0199_);
  assign _0403_ = _0401_ & ~(_0402_);
  assign _0614_[8] = _0327_ & ~(_0403_);
  assign _0404_ = _0311_ | ~(irq_stat_reg[9]);
  assign _0405_ = irq_en_reg[9] & ~(_0155_);
  assign _0406_ = _0404_ & ~(_0405_);
  assign _0407_ = addr_reg[9] & ~(_0160_);
  assign _0408_ = data_reg[9] & ~(_0202_);
  assign _0409_ = _0408_ | _0407_;
  assign _0410_ = _0406_ & ~(_0409_);
  assign _0411_ = ctrl_reg[9] & ~(_0199_);
  assign _0412_ = _0410_ & ~(_0411_);
  assign _0614_[9] = _0327_ & ~(_0412_);
  assign _0413_ = _0311_ | ~(irq_stat_reg[10]);
  assign _0414_ = irq_en_reg[10] & ~(_0155_);
  assign _0415_ = _0413_ & ~(_0414_);
  assign _0416_ = addr_reg[10] & ~(_0160_);
  assign _0417_ = data_reg[10] & ~(_0202_);
  assign _0418_ = _0417_ | _0416_;
  assign _0419_ = _0415_ & ~(_0418_);
  assign _0420_ = ctrl_reg[10] & ~(_0199_);
  assign _0421_ = _0419_ & ~(_0420_);
  assign _0614_[10] = _0327_ & ~(_0421_);
  assign _0422_ = _0311_ | ~(irq_stat_reg[11]);
  assign _0423_ = irq_en_reg[11] & ~(_0155_);
  assign _0424_ = _0422_ & ~(_0423_);
  assign _0425_ = addr_reg[11] & ~(_0160_);
  assign _0426_ = data_reg[11] & ~(_0202_);
  assign _0427_ = _0426_ | _0425_;
  assign _0428_ = _0424_ & ~(_0427_);
  assign _0429_ = ctrl_reg[11] & ~(_0199_);
  assign _0430_ = _0428_ & ~(_0429_);
  assign _0614_[11] = _0327_ & ~(_0430_);
  assign _0431_ = _0311_ | ~(irq_stat_reg[12]);
  assign _0432_ = irq_en_reg[12] & ~(_0155_);
  assign _0433_ = _0431_ & ~(_0432_);
  assign _0434_ = addr_reg[12] & ~(_0160_);
  assign _0435_ = data_reg[12] & ~(_0202_);
  assign _0436_ = _0435_ | _0434_;
  assign _0437_ = _0433_ & ~(_0436_);
  assign _0438_ = ctrl_reg[12] & ~(_0199_);
  assign _0439_ = _0437_ & ~(_0438_);
  assign _0614_[12] = _0327_ & ~(_0439_);
  assign _0440_ = _0311_ | ~(irq_stat_reg[13]);
  assign _0441_ = irq_en_reg[13] & ~(_0155_);
  assign _0442_ = _0440_ & ~(_0441_);
  assign _0443_ = addr_reg[13] & ~(_0160_);
  assign _0444_ = data_reg[13] & ~(_0202_);
  assign _0445_ = _0444_ | _0443_;
  assign _0446_ = _0442_ & ~(_0445_);
  assign _0447_ = ctrl_reg[13] & ~(_0199_);
  assign _0448_ = _0446_ & ~(_0447_);
  assign _0614_[13] = _0327_ & ~(_0448_);
  assign _0449_ = _0311_ | ~(irq_stat_reg[14]);
  assign _0450_ = irq_en_reg[14] & ~(_0155_);
  assign _0451_ = _0449_ & ~(_0450_);
  assign _0452_ = addr_reg[14] & ~(_0160_);
  assign _0453_ = data_reg[14] & ~(_0202_);
  assign _0454_ = _0453_ | _0452_;
  assign _0455_ = _0451_ & ~(_0454_);
  assign _0456_ = ctrl_reg[14] & ~(_0199_);
  assign _0457_ = _0455_ & ~(_0456_);
  assign _0614_[14] = _0327_ & ~(_0457_);
  assign _0458_ = _0311_ | ~(irq_stat_reg[15]);
  assign _0459_ = irq_en_reg[15] & ~(_0155_);
  assign _0460_ = _0458_ & ~(_0459_);
  assign _0461_ = addr_reg[15] & ~(_0160_);
  assign _0462_ = data_reg[15] & ~(_0202_);
  assign _0463_ = _0462_ | _0461_;
  assign _0464_ = _0460_ & ~(_0463_);
  assign _0465_ = ctrl_reg[15] & ~(_0199_);
  assign _0466_ = _0464_ & ~(_0465_);
  assign _0614_[15] = _0327_ & ~(_0466_);
  assign _0467_ = _0311_ | ~(irq_stat_reg[16]);
  assign _0468_ = irq_en_reg[16] & ~(_0155_);
  assign _0469_ = _0467_ & ~(_0468_);
  assign _0470_ = addr_reg[16] & ~(_0160_);
  assign _0471_ = data_reg[16] & ~(_0202_);
  assign _0472_ = _0471_ | _0470_;
  assign _0473_ = _0469_ & ~(_0472_);
  assign _0474_ = ctrl_reg[16] & ~(_0199_);
  assign _0475_ = _0473_ & ~(_0474_);
  assign _0614_[16] = _0327_ & ~(_0475_);
  assign _0476_ = _0311_ | ~(irq_stat_reg[17]);
  assign _0477_ = irq_en_reg[17] & ~(_0155_);
  assign _0478_ = _0476_ & ~(_0477_);
  assign _0479_ = addr_reg[17] & ~(_0160_);
  assign _0480_ = data_reg[17] & ~(_0202_);
  assign _0481_ = _0480_ | _0479_;
  assign _0482_ = _0478_ & ~(_0481_);
  assign _0483_ = ctrl_reg[17] & ~(_0199_);
  assign _0484_ = _0482_ & ~(_0483_);
  assign _0614_[17] = _0327_ & ~(_0484_);
  assign _0485_ = _0311_ | ~(irq_stat_reg[18]);
  assign _0486_ = irq_en_reg[18] & ~(_0155_);
  assign _0487_ = _0485_ & ~(_0486_);
  assign _0488_ = addr_reg[18] & ~(_0160_);
  assign _0489_ = data_reg[18] & ~(_0202_);
  assign _0490_ = _0489_ | _0488_;
  assign _0491_ = _0487_ & ~(_0490_);
  assign _0492_ = ctrl_reg[18] & ~(_0199_);
  assign _0493_ = _0491_ & ~(_0492_);
  assign _0614_[18] = _0327_ & ~(_0493_);
  assign _0494_ = _0311_ | ~(irq_stat_reg[19]);
  assign _0495_ = irq_en_reg[19] & ~(_0155_);
  assign _0496_ = _0494_ & ~(_0495_);
  assign _0497_ = addr_reg[19] & ~(_0160_);
  assign _0498_ = data_reg[19] & ~(_0202_);
  assign _0499_ = _0498_ | _0497_;
  assign _0500_ = _0496_ & ~(_0499_);
  assign _0501_ = ctrl_reg[19] & ~(_0199_);
  assign _0502_ = _0500_ & ~(_0501_);
  assign _0614_[19] = _0327_ & ~(_0502_);
  assign _0503_ = _0311_ | ~(irq_stat_reg[20]);
  assign _0504_ = irq_en_reg[20] & ~(_0155_);
  assign _0505_ = _0503_ & ~(_0504_);
  assign _0506_ = addr_reg[20] & ~(_0160_);
  assign _0507_ = data_reg[20] & ~(_0202_);
  assign _0508_ = _0507_ | _0506_;
  assign _0509_ = _0505_ & ~(_0508_);
  assign _0510_ = ctrl_reg[20] & ~(_0199_);
  assign _0511_ = _0509_ & ~(_0510_);
  assign _0614_[20] = _0327_ & ~(_0511_);
  assign _0512_ = _0311_ | ~(irq_stat_reg[21]);
  assign _0513_ = irq_en_reg[21] & ~(_0155_);
  assign _0514_ = _0512_ & ~(_0513_);
  assign _0515_ = addr_reg[21] & ~(_0160_);
  assign _0516_ = data_reg[21] & ~(_0202_);
  assign _0517_ = _0516_ | _0515_;
  assign _0518_ = _0514_ & ~(_0517_);
  assign _0519_ = ctrl_reg[21] & ~(_0199_);
  assign _0520_ = _0518_ & ~(_0519_);
  assign _0614_[21] = _0327_ & ~(_0520_);
  assign _0521_ = _0311_ | ~(irq_stat_reg[22]);
  assign _0522_ = irq_en_reg[22] & ~(_0155_);
  assign _0523_ = _0521_ & ~(_0522_);
  assign _0524_ = addr_reg[22] & ~(_0160_);
  assign _0525_ = data_reg[22] & ~(_0202_);
  assign _0526_ = _0525_ | _0524_;
  assign _0527_ = _0523_ & ~(_0526_);
  assign _0528_ = ctrl_reg[22] & ~(_0199_);
  assign _0529_ = _0527_ & ~(_0528_);
  assign _0614_[22] = _0327_ & ~(_0529_);
  assign _0530_ = _0311_ | ~(irq_stat_reg[23]);
  assign _0531_ = irq_en_reg[23] & ~(_0155_);
  assign _0532_ = _0530_ & ~(_0531_);
  assign _0533_ = addr_reg[23] & ~(_0160_);
  assign _0534_ = data_reg[23] & ~(_0202_);
  assign _0535_ = _0534_ | _0533_;
  assign _0536_ = _0532_ & ~(_0535_);
  assign _0537_ = ctrl_reg[23] & ~(_0199_);
  assign _0538_ = _0536_ & ~(_0537_);
  assign _0614_[23] = _0327_ & ~(_0538_);
  assign _0539_ = _0311_ | ~(irq_stat_reg[24]);
  assign _0540_ = irq_en_reg[24] & ~(_0155_);
  assign _0541_ = _0539_ & ~(_0540_);
  assign _0542_ = addr_reg[24] & ~(_0160_);
  assign _0543_ = data_reg[24] & ~(_0202_);
  assign _0544_ = _0543_ | _0542_;
  assign _0545_ = _0541_ & ~(_0544_);
  assign _0546_ = ctrl_reg[24] & ~(_0199_);
  assign _0547_ = _0545_ & ~(_0546_);
  assign _0614_[24] = _0327_ & ~(_0547_);
  assign _0548_ = _0311_ | ~(irq_stat_reg[25]);
  assign _0549_ = irq_en_reg[25] & ~(_0155_);
  assign _0550_ = _0548_ & ~(_0549_);
  assign _0551_ = addr_reg[25] & ~(_0160_);
  assign _0552_ = data_reg[25] & ~(_0202_);
  assign _0553_ = _0552_ | _0551_;
  assign _0554_ = _0550_ & ~(_0553_);
  assign _0555_ = ctrl_reg[25] & ~(_0199_);
  assign _0556_ = _0554_ & ~(_0555_);
  assign _0614_[25] = _0327_ & ~(_0556_);
  assign _0557_ = _0311_ | ~(irq_stat_reg[26]);
  assign _0558_ = irq_en_reg[26] & ~(_0155_);
  assign _0559_ = _0557_ & ~(_0558_);
  assign _0560_ = addr_reg[26] & ~(_0160_);
  assign _0561_ = data_reg[26] & ~(_0202_);
  assign _0562_ = _0561_ | _0560_;
  assign _0563_ = _0559_ & ~(_0562_);
  assign _0564_ = ctrl_reg[26] & ~(_0199_);
  assign _0565_ = _0563_ & ~(_0564_);
  assign _0614_[26] = _0327_ & ~(_0565_);
  assign _0566_ = _0311_ | ~(irq_stat_reg[27]);
  assign _0567_ = irq_en_reg[27] & ~(_0155_);
  assign _0568_ = _0566_ & ~(_0567_);
  assign _0569_ = addr_reg[27] & ~(_0160_);
  assign _0570_ = data_reg[27] & ~(_0202_);
  assign _0571_ = _0570_ | _0569_;
  assign _0572_ = _0568_ & ~(_0571_);
  assign _0573_ = ctrl_reg[27] & ~(_0199_);
  assign _0574_ = _0572_ & ~(_0573_);
  assign _0614_[27] = _0327_ & ~(_0574_);
  assign _0575_ = _0311_ | ~(irq_stat_reg[28]);
  assign _0576_ = irq_en_reg[28] & ~(_0155_);
  assign _0577_ = _0575_ & ~(_0576_);
  assign _0578_ = addr_reg[28] & ~(_0160_);
  assign _0579_ = data_reg[28] & ~(_0202_);
  assign _0580_ = _0579_ | _0578_;
  assign _0581_ = _0577_ & ~(_0580_);
  assign _0582_ = ctrl_reg[28] & ~(_0199_);
  assign _0583_ = _0581_ & ~(_0582_);
  assign _0614_[28] = _0327_ & ~(_0583_);
  assign _0584_ = _0311_ | ~(irq_stat_reg[29]);
  assign _0585_ = irq_en_reg[29] & ~(_0155_);
  assign _0586_ = _0584_ & ~(_0585_);
  assign _0587_ = addr_reg[29] & ~(_0160_);
  assign _0588_ = data_reg[29] & ~(_0202_);
  assign _0589_ = _0588_ | _0587_;
  assign _0590_ = _0586_ & ~(_0589_);
  assign _0591_ = ctrl_reg[29] & ~(_0199_);
  assign _0592_ = _0590_ & ~(_0591_);
  assign _0614_[29] = _0327_ & ~(_0592_);
  assign _0593_ = _0311_ | ~(irq_stat_reg[30]);
  assign _0594_ = irq_en_reg[30] & ~(_0155_);
  assign _0595_ = _0593_ & ~(_0594_);
  assign _0596_ = addr_reg[30] & ~(_0160_);
  assign _0597_ = data_reg[30] & ~(_0202_);
  assign _0598_ = _0597_ | _0596_;
  assign _0599_ = _0595_ & ~(_0598_);
  assign _0600_ = ctrl_reg[30] & ~(_0199_);
  assign _0601_ = _0599_ & ~(_0600_);
  assign _0614_[30] = _0327_ & ~(_0601_);
  assign _0602_ = _0311_ | ~(irq_stat_reg[31]);
  assign _0603_ = irq_en_reg[31] & ~(_0155_);
  assign _0604_ = _0602_ & ~(_0603_);
  assign _0605_ = addr_reg[31] & ~(_0160_);
  assign _0606_ = data_reg[31] & ~(_0202_);
  assign _0607_ = _0606_ | _0605_;
  assign _0608_ = _0604_ & ~(_0607_);
  assign _0609_ = ctrl_reg[31] & ~(_0199_);
  assign _0610_ = _0608_ & ~(_0609_);
  assign _0614_[31] = _0327_ & ~(_0610_);
  assign _0001_ = ~_0137_;
  assign _0018_ = irq_stat_reg[1] & ~(wb_dat_i[1]);
  assign _0029_ = irq_stat_reg[2] & ~(wb_dat_i[2]);
  assign _0032_ = irq_stat_reg[3] & ~(wb_dat_i[3]);
  assign _0033_ = irq_stat_reg[4] & ~(wb_dat_i[4]);
  assign _0034_ = irq_stat_reg[5] & ~(wb_dat_i[5]);
  assign _0035_ = irq_stat_reg[6] & ~(wb_dat_i[6]);
  assign _0036_ = irq_stat_reg[7] & ~(wb_dat_i[7]);
  assign _0037_ = irq_stat_reg[8] & ~(wb_dat_i[8]);
  assign _0038_ = irq_stat_reg[9] & ~(wb_dat_i[9]);
  assign _0008_ = irq_stat_reg[10] & ~(wb_dat_i[10]);
  assign _0009_ = irq_stat_reg[11] & ~(wb_dat_i[11]);
  assign _0010_ = irq_stat_reg[12] & ~(wb_dat_i[12]);
  assign _0011_ = irq_stat_reg[13] & ~(wb_dat_i[13]);
  assign _0012_ = irq_stat_reg[14] & ~(wb_dat_i[14]);
  assign _0013_ = irq_stat_reg[15] & ~(wb_dat_i[15]);
  assign _0014_ = irq_stat_reg[16] & ~(wb_dat_i[16]);
  assign _0015_ = irq_stat_reg[17] & ~(wb_dat_i[17]);
  assign _0016_ = irq_stat_reg[18] & ~(wb_dat_i[18]);
  assign _0017_ = irq_stat_reg[19] & ~(wb_dat_i[19]);
  assign _0019_ = irq_stat_reg[20] & ~(wb_dat_i[20]);
  assign _0020_ = irq_stat_reg[21] & ~(wb_dat_i[21]);
  assign _0021_ = irq_stat_reg[22] & ~(wb_dat_i[22]);
  assign _0022_ = irq_stat_reg[23] & ~(wb_dat_i[23]);
  assign _0023_ = irq_stat_reg[24] & ~(wb_dat_i[24]);
  assign _0024_ = irq_stat_reg[25] & ~(wb_dat_i[25]);
  assign _0025_ = irq_stat_reg[26] & ~(wb_dat_i[26]);
  assign _0026_ = irq_stat_reg[27] & ~(wb_dat_i[27]);
  assign _0027_ = irq_stat_reg[28] & ~(wb_dat_i[28]);
  assign _0028_ = irq_stat_reg[29] & ~(wb_dat_i[29]);
  assign _0030_ = irq_stat_reg[30] & ~(wb_dat_i[30]);
  assign _0031_ = irq_stat_reg[31] & ~(wb_dat_i[31]);
  assign _0006_ = _0136_ | i3c_clk;
  assign _0005_ = ctrl_reg[0] & ~(i3c_clk);
  (* src = "verilog/rtl/periph/i3c_controller.v:222.5-307.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) sda <= 1'h1;
    else if (_0064_) sda <= _0613_;
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) irq_en_reg[24] <= 1'h0;
    else if (_0047_) irq_en_reg[24] <= wb_dat_i[24];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) irq_en_reg[25] <= 1'h0;
    else if (_0047_) irq_en_reg[25] <= wb_dat_i[25];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) irq_en_reg[26] <= 1'h0;
    else if (_0047_) irq_en_reg[26] <= wb_dat_i[26];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) irq_en_reg[27] <= 1'h0;
    else if (_0047_) irq_en_reg[27] <= wb_dat_i[27];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) irq_en_reg[28] <= 1'h0;
    else if (_0047_) irq_en_reg[28] <= wb_dat_i[28];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) irq_en_reg[29] <= 1'h0;
    else if (_0047_) irq_en_reg[29] <= wb_dat_i[29];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) irq_en_reg[30] <= 1'h0;
    else if (_0047_) irq_en_reg[30] <= wb_dat_i[30];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) irq_en_reg[31] <= 1'h0;
    else if (_0047_) irq_en_reg[31] <= wb_dat_i[31];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) addr_reg[16] <= 1'h0;
    else if (_0050_) addr_reg[16] <= wb_dat_i[16];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) addr_reg[17] <= 1'h0;
    else if (_0050_) addr_reg[17] <= wb_dat_i[17];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) addr_reg[18] <= 1'h0;
    else if (_0050_) addr_reg[18] <= wb_dat_i[18];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) addr_reg[19] <= 1'h0;
    else if (_0050_) addr_reg[19] <= wb_dat_i[19];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) addr_reg[20] <= 1'h0;
    else if (_0050_) addr_reg[20] <= wb_dat_i[20];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) addr_reg[21] <= 1'h0;
    else if (_0050_) addr_reg[21] <= wb_dat_i[21];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) addr_reg[22] <= 1'h0;
    else if (_0050_) addr_reg[22] <= wb_dat_i[22];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) addr_reg[23] <= 1'h0;
    else if (_0050_) addr_reg[23] <= wb_dat_i[23];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) addr_reg[8] <= 1'h0;
    else if (_0049_) addr_reg[8] <= wb_dat_i[8];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) addr_reg[9] <= 1'h0;
    else if (_0049_) addr_reg[9] <= wb_dat_i[9];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) addr_reg[10] <= 1'h0;
    else if (_0049_) addr_reg[10] <= wb_dat_i[10];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) addr_reg[11] <= 1'h0;
    else if (_0049_) addr_reg[11] <= wb_dat_i[11];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) addr_reg[12] <= 1'h0;
    else if (_0049_) addr_reg[12] <= wb_dat_i[12];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) addr_reg[13] <= 1'h0;
    else if (_0049_) addr_reg[13] <= wb_dat_i[13];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) addr_reg[14] <= 1'h0;
    else if (_0049_) addr_reg[14] <= wb_dat_i[14];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) addr_reg[15] <= 1'h0;
    else if (_0049_) addr_reg[15] <= wb_dat_i[15];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) irq_en_reg[16] <= 1'h0;
    else if (_0046_) irq_en_reg[16] <= wb_dat_i[16];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) irq_en_reg[17] <= 1'h0;
    else if (_0046_) irq_en_reg[17] <= wb_dat_i[17];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) irq_en_reg[18] <= 1'h0;
    else if (_0046_) irq_en_reg[18] <= wb_dat_i[18];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) irq_en_reg[19] <= 1'h0;
    else if (_0046_) irq_en_reg[19] <= wb_dat_i[19];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) irq_en_reg[20] <= 1'h0;
    else if (_0046_) irq_en_reg[20] <= wb_dat_i[20];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) irq_en_reg[21] <= 1'h0;
    else if (_0046_) irq_en_reg[21] <= wb_dat_i[21];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) irq_en_reg[22] <= 1'h0;
    else if (_0046_) irq_en_reg[22] <= wb_dat_i[22];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) irq_en_reg[23] <= 1'h0;
    else if (_0046_) irq_en_reg[23] <= wb_dat_i[23];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) ctrl_reg[1] <= 1'h0;
    else ctrl_reg[1] <= _0003_[1];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) ctrl_reg[2] <= 1'h0;
    else ctrl_reg[2] <= _0003_[2];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) ctrl_reg[24] <= 1'h0;
    else if (_0059_) ctrl_reg[24] <= wb_dat_i[24];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) ctrl_reg[25] <= 1'h0;
    else if (_0059_) ctrl_reg[25] <= wb_dat_i[25];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) ctrl_reg[26] <= 1'h0;
    else if (_0059_) ctrl_reg[26] <= wb_dat_i[26];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) ctrl_reg[27] <= 1'h0;
    else if (_0059_) ctrl_reg[27] <= wb_dat_i[27];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) ctrl_reg[28] <= 1'h0;
    else if (_0059_) ctrl_reg[28] <= wb_dat_i[28];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) ctrl_reg[29] <= 1'h0;
    else if (_0059_) ctrl_reg[29] <= wb_dat_i[29];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) ctrl_reg[30] <= 1'h0;
    else if (_0059_) ctrl_reg[30] <= wb_dat_i[30];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) ctrl_reg[31] <= 1'h0;
    else if (_0059_) ctrl_reg[31] <= wb_dat_i[31];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) ctrl_reg[16] <= 1'h0;
    else if (_0058_) ctrl_reg[16] <= wb_dat_i[16];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) ctrl_reg[17] <= 1'h0;
    else if (_0058_) ctrl_reg[17] <= wb_dat_i[17];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) ctrl_reg[18] <= 1'h0;
    else if (_0058_) ctrl_reg[18] <= wb_dat_i[18];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) ctrl_reg[19] <= 1'h0;
    else if (_0058_) ctrl_reg[19] <= wb_dat_i[19];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) ctrl_reg[20] <= 1'h0;
    else if (_0058_) ctrl_reg[20] <= wb_dat_i[20];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) ctrl_reg[21] <= 1'h0;
    else if (_0058_) ctrl_reg[21] <= wb_dat_i[21];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) ctrl_reg[22] <= 1'h0;
    else if (_0058_) ctrl_reg[22] <= wb_dat_i[22];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) ctrl_reg[23] <= 1'h0;
    else if (_0058_) ctrl_reg[23] <= wb_dat_i[23];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) ctrl_reg[8] <= 1'h0;
    else if (_0057_) ctrl_reg[8] <= wb_dat_i[8];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) ctrl_reg[9] <= 1'h0;
    else if (_0057_) ctrl_reg[9] <= wb_dat_i[9];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) ctrl_reg[10] <= 1'h0;
    else if (_0057_) ctrl_reg[10] <= wb_dat_i[10];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) ctrl_reg[11] <= 1'h0;
    else if (_0057_) ctrl_reg[11] <= wb_dat_i[11];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) ctrl_reg[12] <= 1'h0;
    else if (_0057_) ctrl_reg[12] <= wb_dat_i[12];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) ctrl_reg[13] <= 1'h0;
    else if (_0057_) ctrl_reg[13] <= wb_dat_i[13];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) ctrl_reg[14] <= 1'h0;
    else if (_0057_) ctrl_reg[14] <= wb_dat_i[14];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) ctrl_reg[15] <= 1'h0;
    else if (_0057_) ctrl_reg[15] <= wb_dat_i[15];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) data_reg[24] <= 1'h0;
    else if (_0055_) data_reg[24] <= wb_dat_i[24];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) data_reg[25] <= 1'h0;
    else if (_0055_) data_reg[25] <= wb_dat_i[25];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) data_reg[26] <= 1'h0;
    else if (_0055_) data_reg[26] <= wb_dat_i[26];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) data_reg[27] <= 1'h0;
    else if (_0055_) data_reg[27] <= wb_dat_i[27];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) data_reg[28] <= 1'h0;
    else if (_0055_) data_reg[28] <= wb_dat_i[28];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) data_reg[29] <= 1'h0;
    else if (_0055_) data_reg[29] <= wb_dat_i[29];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) data_reg[30] <= 1'h0;
    else if (_0055_) data_reg[30] <= wb_dat_i[30];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) data_reg[31] <= 1'h0;
    else if (_0055_) data_reg[31] <= wb_dat_i[31];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) data_reg[16] <= 1'h0;
    else if (_0054_) data_reg[16] <= wb_dat_i[16];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) data_reg[17] <= 1'h0;
    else if (_0054_) data_reg[17] <= wb_dat_i[17];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) data_reg[18] <= 1'h0;
    else if (_0054_) data_reg[18] <= wb_dat_i[18];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) data_reg[19] <= 1'h0;
    else if (_0054_) data_reg[19] <= wb_dat_i[19];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) data_reg[20] <= 1'h0;
    else if (_0054_) data_reg[20] <= wb_dat_i[20];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) data_reg[21] <= 1'h0;
    else if (_0054_) data_reg[21] <= wb_dat_i[21];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) data_reg[22] <= 1'h0;
    else if (_0054_) data_reg[22] <= wb_dat_i[22];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) data_reg[23] <= 1'h0;
    else if (_0054_) data_reg[23] <= wb_dat_i[23];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) data_reg[8] <= 1'h0;
    else if (_0053_) data_reg[8] <= wb_dat_i[8];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) data_reg[9] <= 1'h0;
    else if (_0053_) data_reg[9] <= wb_dat_i[9];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) data_reg[10] <= 1'h0;
    else if (_0053_) data_reg[10] <= wb_dat_i[10];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) data_reg[11] <= 1'h0;
    else if (_0053_) data_reg[11] <= wb_dat_i[11];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) data_reg[12] <= 1'h0;
    else if (_0053_) data_reg[12] <= wb_dat_i[12];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) data_reg[13] <= 1'h0;
    else if (_0053_) data_reg[13] <= wb_dat_i[13];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) data_reg[14] <= 1'h0;
    else if (_0053_) data_reg[14] <= wb_dat_i[14];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) data_reg[15] <= 1'h0;
    else if (_0053_) data_reg[15] <= wb_dat_i[15];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) addr_reg[24] <= 1'h0;
    else if (_0051_) addr_reg[24] <= wb_dat_i[24];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) addr_reg[25] <= 1'h0;
    else if (_0051_) addr_reg[25] <= wb_dat_i[25];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) addr_reg[26] <= 1'h0;
    else if (_0051_) addr_reg[26] <= wb_dat_i[26];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) addr_reg[27] <= 1'h0;
    else if (_0051_) addr_reg[27] <= wb_dat_i[27];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) addr_reg[28] <= 1'h0;
    else if (_0051_) addr_reg[28] <= wb_dat_i[28];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) addr_reg[29] <= 1'h0;
    else if (_0051_) addr_reg[29] <= wb_dat_i[29];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) addr_reg[30] <= 1'h0;
    else if (_0051_) addr_reg[30] <= wb_dat_i[30];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) addr_reg[31] <= 1'h0;
    else if (_0051_) addr_reg[31] <= wb_dat_i[31];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) irq_en_reg[8] <= 1'h0;
    else if (_0045_) irq_en_reg[8] <= wb_dat_i[8];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) irq_en_reg[9] <= 1'h0;
    else if (_0045_) irq_en_reg[9] <= wb_dat_i[9];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) irq_en_reg[10] <= 1'h0;
    else if (_0045_) irq_en_reg[10] <= wb_dat_i[10];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) irq_en_reg[11] <= 1'h0;
    else if (_0045_) irq_en_reg[11] <= wb_dat_i[11];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) irq_en_reg[12] <= 1'h0;
    else if (_0045_) irq_en_reg[12] <= wb_dat_i[12];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) irq_en_reg[13] <= 1'h0;
    else if (_0045_) irq_en_reg[13] <= wb_dat_i[13];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) irq_en_reg[14] <= 1'h0;
    else if (_0045_) irq_en_reg[14] <= wb_dat_i[14];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) irq_en_reg[15] <= 1'h0;
    else if (_0045_) irq_en_reg[15] <= wb_dat_i[15];
  reg \irq_stat_reg_reg[1] ;
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) \irq_stat_reg_reg[1]  <= 1'h0;
    else if (_0043_) \irq_stat_reg_reg[1]  <= _0018_;
  assign irq_stat_reg[1] = \irq_stat_reg_reg[1] ;
  reg \irq_stat_reg_reg[2] ;
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) \irq_stat_reg_reg[2]  <= 1'h0;
    else if (_0043_) \irq_stat_reg_reg[2]  <= _0029_;
  assign irq_stat_reg[2] = \irq_stat_reg_reg[2] ;
  reg \irq_stat_reg_reg[3] ;
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) \irq_stat_reg_reg[3]  <= 1'h0;
    else if (_0043_) \irq_stat_reg_reg[3]  <= _0032_;
  assign irq_stat_reg[3] = \irq_stat_reg_reg[3] ;
  reg \irq_stat_reg_reg[4] ;
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) \irq_stat_reg_reg[4]  <= 1'h0;
    else if (_0043_) \irq_stat_reg_reg[4]  <= _0033_;
  assign irq_stat_reg[4] = \irq_stat_reg_reg[4] ;
  reg \irq_stat_reg_reg[5] ;
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) \irq_stat_reg_reg[5]  <= 1'h0;
    else if (_0043_) \irq_stat_reg_reg[5]  <= _0034_;
  assign irq_stat_reg[5] = \irq_stat_reg_reg[5] ;
  reg \irq_stat_reg_reg[6] ;
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) \irq_stat_reg_reg[6]  <= 1'h0;
    else if (_0043_) \irq_stat_reg_reg[6]  <= _0035_;
  assign irq_stat_reg[6] = \irq_stat_reg_reg[6] ;
  reg \irq_stat_reg_reg[7] ;
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) \irq_stat_reg_reg[7]  <= 1'h0;
    else if (_0043_) \irq_stat_reg_reg[7]  <= _0036_;
  assign irq_stat_reg[7] = \irq_stat_reg_reg[7] ;
  reg \irq_stat_reg_reg[8] ;
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) \irq_stat_reg_reg[8]  <= 1'h0;
    else if (_0043_) \irq_stat_reg_reg[8]  <= _0037_;
  assign irq_stat_reg[8] = \irq_stat_reg_reg[8] ;
  reg \irq_stat_reg_reg[9] ;
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) \irq_stat_reg_reg[9]  <= 1'h0;
    else if (_0043_) \irq_stat_reg_reg[9]  <= _0038_;
  assign irq_stat_reg[9] = \irq_stat_reg_reg[9] ;
  reg \irq_stat_reg_reg[10] ;
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) \irq_stat_reg_reg[10]  <= 1'h0;
    else if (_0043_) \irq_stat_reg_reg[10]  <= _0008_;
  assign irq_stat_reg[10] = \irq_stat_reg_reg[10] ;
  reg \irq_stat_reg_reg[11] ;
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) \irq_stat_reg_reg[11]  <= 1'h0;
    else if (_0043_) \irq_stat_reg_reg[11]  <= _0009_;
  assign irq_stat_reg[11] = \irq_stat_reg_reg[11] ;
  reg \irq_stat_reg_reg[12] ;
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) \irq_stat_reg_reg[12]  <= 1'h0;
    else if (_0043_) \irq_stat_reg_reg[12]  <= _0010_;
  assign irq_stat_reg[12] = \irq_stat_reg_reg[12] ;
  reg \irq_stat_reg_reg[13] ;
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) \irq_stat_reg_reg[13]  <= 1'h0;
    else if (_0043_) \irq_stat_reg_reg[13]  <= _0011_;
  assign irq_stat_reg[13] = \irq_stat_reg_reg[13] ;
  reg \irq_stat_reg_reg[14] ;
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) \irq_stat_reg_reg[14]  <= 1'h0;
    else if (_0043_) \irq_stat_reg_reg[14]  <= _0012_;
  assign irq_stat_reg[14] = \irq_stat_reg_reg[14] ;
  reg \irq_stat_reg_reg[15] ;
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) \irq_stat_reg_reg[15]  <= 1'h0;
    else if (_0043_) \irq_stat_reg_reg[15]  <= _0013_;
  assign irq_stat_reg[15] = \irq_stat_reg_reg[15] ;
  reg \irq_stat_reg_reg[16] ;
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) \irq_stat_reg_reg[16]  <= 1'h0;
    else if (_0043_) \irq_stat_reg_reg[16]  <= _0014_;
  assign irq_stat_reg[16] = \irq_stat_reg_reg[16] ;
  reg \irq_stat_reg_reg[17] ;
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) \irq_stat_reg_reg[17]  <= 1'h0;
    else if (_0043_) \irq_stat_reg_reg[17]  <= _0015_;
  assign irq_stat_reg[17] = \irq_stat_reg_reg[17] ;
  reg \irq_stat_reg_reg[18] ;
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) \irq_stat_reg_reg[18]  <= 1'h0;
    else if (_0043_) \irq_stat_reg_reg[18]  <= _0016_;
  assign irq_stat_reg[18] = \irq_stat_reg_reg[18] ;
  reg \irq_stat_reg_reg[19] ;
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) \irq_stat_reg_reg[19]  <= 1'h0;
    else if (_0043_) \irq_stat_reg_reg[19]  <= _0017_;
  assign irq_stat_reg[19] = \irq_stat_reg_reg[19] ;
  reg \irq_stat_reg_reg[20] ;
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) \irq_stat_reg_reg[20]  <= 1'h0;
    else if (_0043_) \irq_stat_reg_reg[20]  <= _0019_;
  assign irq_stat_reg[20] = \irq_stat_reg_reg[20] ;
  reg \irq_stat_reg_reg[21] ;
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) \irq_stat_reg_reg[21]  <= 1'h0;
    else if (_0043_) \irq_stat_reg_reg[21]  <= _0020_;
  assign irq_stat_reg[21] = \irq_stat_reg_reg[21] ;
  reg \irq_stat_reg_reg[22] ;
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) \irq_stat_reg_reg[22]  <= 1'h0;
    else if (_0043_) \irq_stat_reg_reg[22]  <= _0021_;
  assign irq_stat_reg[22] = \irq_stat_reg_reg[22] ;
  reg \irq_stat_reg_reg[23] ;
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) \irq_stat_reg_reg[23]  <= 1'h0;
    else if (_0043_) \irq_stat_reg_reg[23]  <= _0022_;
  assign irq_stat_reg[23] = \irq_stat_reg_reg[23] ;
  reg \irq_stat_reg_reg[24] ;
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) \irq_stat_reg_reg[24]  <= 1'h0;
    else if (_0043_) \irq_stat_reg_reg[24]  <= _0023_;
  assign irq_stat_reg[24] = \irq_stat_reg_reg[24] ;
  reg \irq_stat_reg_reg[25] ;
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) \irq_stat_reg_reg[25]  <= 1'h0;
    else if (_0043_) \irq_stat_reg_reg[25]  <= _0024_;
  assign irq_stat_reg[25] = \irq_stat_reg_reg[25] ;
  reg \irq_stat_reg_reg[26] ;
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) \irq_stat_reg_reg[26]  <= 1'h0;
    else if (_0043_) \irq_stat_reg_reg[26]  <= _0025_;
  assign irq_stat_reg[26] = \irq_stat_reg_reg[26] ;
  reg \irq_stat_reg_reg[27] ;
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) \irq_stat_reg_reg[27]  <= 1'h0;
    else if (_0043_) \irq_stat_reg_reg[27]  <= _0026_;
  assign irq_stat_reg[27] = \irq_stat_reg_reg[27] ;
  reg \irq_stat_reg_reg[28] ;
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) \irq_stat_reg_reg[28]  <= 1'h0;
    else if (_0043_) \irq_stat_reg_reg[28]  <= _0027_;
  assign irq_stat_reg[28] = \irq_stat_reg_reg[28] ;
  reg \irq_stat_reg_reg[29] ;
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) \irq_stat_reg_reg[29]  <= 1'h0;
    else if (_0043_) \irq_stat_reg_reg[29]  <= _0028_;
  assign irq_stat_reg[29] = \irq_stat_reg_reg[29] ;
  reg \irq_stat_reg_reg[30] ;
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) \irq_stat_reg_reg[30]  <= 1'h0;
    else if (_0043_) \irq_stat_reg_reg[30]  <= _0030_;
  assign irq_stat_reg[30] = \irq_stat_reg_reg[30] ;
  reg \irq_stat_reg_reg[31] ;
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) \irq_stat_reg_reg[31]  <= 1'h0;
    else if (_0043_) \irq_stat_reg_reg[31]  <= _0031_;
  assign irq_stat_reg[31] = \irq_stat_reg_reg[31] ;
  (* src = "verilog/rtl/periph/i3c_controller.v:222.5-307.8" *)
  always @(posedge clk)
    if (_0063_) data_reg[0] <= shift_reg[0];
  (* src = "verilog/rtl/periph/i3c_controller.v:222.5-307.8" *)
  always @(posedge clk)
    if (_0063_) data_reg[1] <= shift_reg[1];
  (* src = "verilog/rtl/periph/i3c_controller.v:222.5-307.8" *)
  always @(posedge clk)
    if (_0063_) data_reg[2] <= shift_reg[2];
  (* src = "verilog/rtl/periph/i3c_controller.v:222.5-307.8" *)
  always @(posedge clk)
    if (_0063_) data_reg[3] <= shift_reg[3];
  (* src = "verilog/rtl/periph/i3c_controller.v:222.5-307.8" *)
  always @(posedge clk)
    if (_0063_) data_reg[4] <= shift_reg[4];
  (* src = "verilog/rtl/periph/i3c_controller.v:222.5-307.8" *)
  always @(posedge clk)
    if (_0063_) data_reg[5] <= shift_reg[5];
  (* src = "verilog/rtl/periph/i3c_controller.v:222.5-307.8" *)
  always @(posedge clk)
    if (_0063_) data_reg[6] <= shift_reg[6];
  (* src = "verilog/rtl/periph/i3c_controller.v:222.5-307.8" *)
  always @(posedge clk)
    if (_0063_) data_reg[7] <= shift_reg[7];
  (* src = "verilog/rtl/periph/i3c_controller.v:222.5-307.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) busy <= 1'h0;
    else if (_0042_) busy <= _0001_;
  (* src = "verilog/rtl/periph/i3c_controller.v:222.5-307.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) done <= 1'h0;
    else if (_0041_) done <= _0004_;
  (* src = "verilog/rtl/periph/i3c_controller.v:222.5-307.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) ack_received <= 1'h0;
    else if (!_0066_) ack_received <= _0611_;
  (* src = "verilog/rtl/periph/i3c_controller.v:222.5-307.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) scl <= 1'h1;
    else if (_0040_) scl <= _0006_;
  (* src = "verilog/rtl/periph/i3c_controller.v:222.5-307.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) bit_cnt[0] <= 1'h0;
    else if (_0065_) bit_cnt[0] <= _0000_[0];
  (* src = "verilog/rtl/periph/i3c_controller.v:222.5-307.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) bit_cnt[1] <= 1'h0;
    else if (_0065_) bit_cnt[1] <= _0000_[1];
  (* src = "verilog/rtl/periph/i3c_controller.v:222.5-307.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) bit_cnt[2] <= 1'h0;
    else if (_0065_) bit_cnt[2] <= _0000_[2];
  (* src = "verilog/rtl/periph/i3c_controller.v:222.5-307.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) bit_cnt[3] <= 1'h0;
    else if (_0065_) bit_cnt[3] <= _0000_[3];
  (* src = "verilog/rtl/periph/i3c_controller.v:222.5-307.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) shift_reg[0] <= 1'h0;
    else if (_0062_) shift_reg[0] <= _0612_[0];
  (* src = "verilog/rtl/periph/i3c_controller.v:222.5-307.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) shift_reg[1] <= 1'h0;
    else if (_0062_) shift_reg[1] <= _0612_[1];
  (* src = "verilog/rtl/periph/i3c_controller.v:222.5-307.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) shift_reg[2] <= 1'h0;
    else if (_0062_) shift_reg[2] <= _0612_[2];
  (* src = "verilog/rtl/periph/i3c_controller.v:222.5-307.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) shift_reg[3] <= 1'h0;
    else if (_0062_) shift_reg[3] <= _0612_[3];
  (* src = "verilog/rtl/periph/i3c_controller.v:222.5-307.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) shift_reg[4] <= 1'h0;
    else if (_0062_) shift_reg[4] <= _0612_[4];
  (* src = "verilog/rtl/periph/i3c_controller.v:222.5-307.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) shift_reg[5] <= 1'h0;
    else if (_0062_) shift_reg[5] <= _0612_[5];
  (* src = "verilog/rtl/periph/i3c_controller.v:222.5-307.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) shift_reg[6] <= 1'h0;
    else if (_0062_) shift_reg[6] <= _0612_[6];
  (* src = "verilog/rtl/periph/i3c_controller.v:222.5-307.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) shift_reg[7] <= 1'h0;
    else if (_0062_) shift_reg[7] <= _0612_[7];
  (* src = "verilog/rtl/periph/i3c_controller.v:160.5-175.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) clk_div[0] <= 1'h0;
    else clk_div[0] <= _0002_[0];
  (* src = "verilog/rtl/periph/i3c_controller.v:160.5-175.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) clk_div[1] <= 1'h0;
    else clk_div[1] <= _0002_[1];
  (* src = "verilog/rtl/periph/i3c_controller.v:160.5-175.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) clk_div[2] <= 1'h0;
    else clk_div[2] <= _0002_[2];
  (* src = "verilog/rtl/periph/i3c_controller.v:160.5-175.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) clk_div[3] <= 1'h0;
    else clk_div[3] <= _0002_[3];
  (* src = "verilog/rtl/periph/i3c_controller.v:160.5-175.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) clk_div[4] <= 1'h0;
    else clk_div[4] <= _0002_[4];
  (* src = "verilog/rtl/periph/i3c_controller.v:160.5-175.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) clk_div[5] <= 1'h0;
    else clk_div[5] <= _0002_[5];
  (* src = "verilog/rtl/periph/i3c_controller.v:160.5-175.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) clk_div[6] <= 1'h0;
    else clk_div[6] <= _0002_[6];
  (* src = "verilog/rtl/periph/i3c_controller.v:160.5-175.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) clk_div[7] <= 1'h0;
    else clk_div[7] <= _0002_[7];
  (* src = "verilog/rtl/periph/i3c_controller.v:178.5-184.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) state[0] <= 1'h0;
    else if (_0061_) state[0] <= next_state[0];
  (* src = "verilog/rtl/periph/i3c_controller.v:178.5-184.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) state[1] <= 1'h0;
    else if (_0061_) state[1] <= next_state[1];
  (* src = "verilog/rtl/periph/i3c_controller.v:178.5-184.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) state[2] <= 1'h0;
    else if (_0061_) state[2] <= next_state[2];
  (* src = "verilog/rtl/periph/i3c_controller.v:160.5-175.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) i3c_clk <= 1'h0;
    else if (_0039_) i3c_clk <= _0005_;
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) wb_ack_o <= 1'h0;
    else wb_ack_o <= _0007_;
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) wb_dat_o[0] <= 1'h0;
    else if (_0060_) wb_dat_o[0] <= _0614_[0];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) wb_dat_o[1] <= 1'h0;
    else if (_0060_) wb_dat_o[1] <= _0614_[1];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) wb_dat_o[2] <= 1'h0;
    else if (_0060_) wb_dat_o[2] <= _0614_[2];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) wb_dat_o[3] <= 1'h0;
    else if (_0060_) wb_dat_o[3] <= _0614_[3];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) wb_dat_o[4] <= 1'h0;
    else if (_0060_) wb_dat_o[4] <= _0614_[4];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) wb_dat_o[5] <= 1'h0;
    else if (_0060_) wb_dat_o[5] <= _0614_[5];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) wb_dat_o[6] <= 1'h0;
    else if (_0060_) wb_dat_o[6] <= _0614_[6];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) wb_dat_o[7] <= 1'h0;
    else if (_0060_) wb_dat_o[7] <= _0614_[7];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) wb_dat_o[8] <= 1'h0;
    else if (_0060_) wb_dat_o[8] <= _0614_[8];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) wb_dat_o[9] <= 1'h0;
    else if (_0060_) wb_dat_o[9] <= _0614_[9];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) wb_dat_o[10] <= 1'h0;
    else if (_0060_) wb_dat_o[10] <= _0614_[10];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) wb_dat_o[11] <= 1'h0;
    else if (_0060_) wb_dat_o[11] <= _0614_[11];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) wb_dat_o[12] <= 1'h0;
    else if (_0060_) wb_dat_o[12] <= _0614_[12];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) wb_dat_o[13] <= 1'h0;
    else if (_0060_) wb_dat_o[13] <= _0614_[13];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) wb_dat_o[14] <= 1'h0;
    else if (_0060_) wb_dat_o[14] <= _0614_[14];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) wb_dat_o[15] <= 1'h0;
    else if (_0060_) wb_dat_o[15] <= _0614_[15];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) wb_dat_o[16] <= 1'h0;
    else if (_0060_) wb_dat_o[16] <= _0614_[16];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) wb_dat_o[17] <= 1'h0;
    else if (_0060_) wb_dat_o[17] <= _0614_[17];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) wb_dat_o[18] <= 1'h0;
    else if (_0060_) wb_dat_o[18] <= _0614_[18];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) wb_dat_o[19] <= 1'h0;
    else if (_0060_) wb_dat_o[19] <= _0614_[19];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) wb_dat_o[20] <= 1'h0;
    else if (_0060_) wb_dat_o[20] <= _0614_[20];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) wb_dat_o[21] <= 1'h0;
    else if (_0060_) wb_dat_o[21] <= _0614_[21];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) wb_dat_o[22] <= 1'h0;
    else if (_0060_) wb_dat_o[22] <= _0614_[22];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) wb_dat_o[23] <= 1'h0;
    else if (_0060_) wb_dat_o[23] <= _0614_[23];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) wb_dat_o[24] <= 1'h0;
    else if (_0060_) wb_dat_o[24] <= _0614_[24];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) wb_dat_o[25] <= 1'h0;
    else if (_0060_) wb_dat_o[25] <= _0614_[25];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) wb_dat_o[26] <= 1'h0;
    else if (_0060_) wb_dat_o[26] <= _0614_[26];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) wb_dat_o[27] <= 1'h0;
    else if (_0060_) wb_dat_o[27] <= _0614_[27];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) wb_dat_o[28] <= 1'h0;
    else if (_0060_) wb_dat_o[28] <= _0614_[28];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) wb_dat_o[29] <= 1'h0;
    else if (_0060_) wb_dat_o[29] <= _0614_[29];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) wb_dat_o[30] <= 1'h0;
    else if (_0060_) wb_dat_o[30] <= _0614_[30];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) wb_dat_o[31] <= 1'h0;
    else if (_0060_) wb_dat_o[31] <= _0614_[31];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) ctrl_reg[0] <= 1'h0;
    else if (_0056_) ctrl_reg[0] <= wb_dat_i[0];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) ctrl_reg[3] <= 1'h0;
    else if (_0056_) ctrl_reg[3] <= wb_dat_i[3];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) ctrl_reg[4] <= 1'h0;
    else if (_0056_) ctrl_reg[4] <= wb_dat_i[4];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) ctrl_reg[5] <= 1'h0;
    else if (_0056_) ctrl_reg[5] <= wb_dat_i[5];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) ctrl_reg[6] <= 1'h0;
    else if (_0056_) ctrl_reg[6] <= wb_dat_i[6];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) ctrl_reg[7] <= 1'h0;
    else if (_0056_) ctrl_reg[7] <= wb_dat_i[7];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) data_reg[0] <= 1'h0;
    else if (_0052_) data_reg[0] <= wb_dat_i[0];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) data_reg[1] <= 1'h0;
    else if (_0052_) data_reg[1] <= wb_dat_i[1];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) data_reg[2] <= 1'h0;
    else if (_0052_) data_reg[2] <= wb_dat_i[2];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) data_reg[3] <= 1'h0;
    else if (_0052_) data_reg[3] <= wb_dat_i[3];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) data_reg[4] <= 1'h0;
    else if (_0052_) data_reg[4] <= wb_dat_i[4];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) data_reg[5] <= 1'h0;
    else if (_0052_) data_reg[5] <= wb_dat_i[5];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) data_reg[6] <= 1'h0;
    else if (_0052_) data_reg[6] <= wb_dat_i[6];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) data_reg[7] <= 1'h0;
    else if (_0052_) data_reg[7] <= wb_dat_i[7];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) addr_reg[0] <= 1'h0;
    else if (_0048_) addr_reg[0] <= wb_dat_i[0];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) addr_reg[1] <= 1'h0;
    else if (_0048_) addr_reg[1] <= wb_dat_i[1];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) addr_reg[2] <= 1'h0;
    else if (_0048_) addr_reg[2] <= wb_dat_i[2];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) addr_reg[3] <= 1'h0;
    else if (_0048_) addr_reg[3] <= wb_dat_i[3];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) addr_reg[4] <= 1'h0;
    else if (_0048_) addr_reg[4] <= wb_dat_i[4];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) addr_reg[5] <= 1'h0;
    else if (_0048_) addr_reg[5] <= wb_dat_i[5];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) addr_reg[6] <= 1'h0;
    else if (_0048_) addr_reg[6] <= wb_dat_i[6];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) addr_reg[7] <= 1'h0;
    else if (_0048_) addr_reg[7] <= wb_dat_i[7];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) irq_en_reg[0] <= 1'h0;
    else if (_0044_) irq_en_reg[0] <= wb_dat_i[0];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) irq_en_reg[1] <= 1'h0;
    else if (_0044_) irq_en_reg[1] <= wb_dat_i[1];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) irq_en_reg[2] <= 1'h0;
    else if (_0044_) irq_en_reg[2] <= wb_dat_i[2];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) irq_en_reg[3] <= 1'h0;
    else if (_0044_) irq_en_reg[3] <= wb_dat_i[3];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) irq_en_reg[4] <= 1'h0;
    else if (_0044_) irq_en_reg[4] <= wb_dat_i[4];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) irq_en_reg[5] <= 1'h0;
    else if (_0044_) irq_en_reg[5] <= wb_dat_i[5];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) irq_en_reg[6] <= 1'h0;
    else if (_0044_) irq_en_reg[6] <= wb_dat_i[6];
  (* src = "verilog/rtl/periph/i3c_controller.v:96.5-157.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) irq_en_reg[7] <= 1'h0;
    else if (_0044_) irq_en_reg[7] <= wb_dat_i[7];
  assign enable = ctrl_reg[0];
  assign error = 1'h0;
  assign irq_stat_reg[0] = 1'h1;
  assign read_mode = ctrl_reg[3];
  assign reg_addr = wb_adr_i[7:0];
  assign scl_in = scl;
  assign scl_out = scl;
  assign sda_in = sda;
  assign sda_out = sda;
  assign start = ctrl_reg[1];
  assign stop = ctrl_reg[2];
  assign write_mode = ctrl_reg[4];
endmodule

(* src = "verilog/rtl/user_project.v:12.1-371.10" *)
module user_project(wb_clk_i, wb_rst_i, wbs_stb_i, wbs_cyc_i, wbs_we_i, wbs_sel_i, wbs_dat_i, wbs_adr_i, wbs_dat_o, wbs_ack_o, la_data_in, la_data_out, la_oenb, io_in, io_out, io_oeb, irq);
  wire _0_;
  wire _1_;
  (* src = "verilog/rtl/user_project.v:82.17-82.25" *)
  wire gpio_ack;
  (* src = "verilog/rtl/user_project.v:81.17-81.25" *)
  wire [31:0] gpio_adr;
  (* src = "verilog/rtl/user_project.v:79.17-79.25" *)
  wire gpio_cyc;
  (* src = "verilog/rtl/user_project.v:81.42-81.55" *)
  wire [31:0] gpio_dat_miso;
  (* src = "verilog/rtl/user_project.v:81.27-81.40" *)
  wire [31:0] gpio_dat_mosi;
  (* src = "verilog/rtl/user_project.v:96.31-96.43" *)
  (* unused_bits = "2 3 4 5 6 7" *)
  wire [7:0] gpio_full_oe;
  (* src = "verilog/rtl/user_project.v:96.16-96.29" *)
  (* unused_bits = "2 3 4 5 6 7" *)
  wire [7:0] gpio_full_out;
  (* src = "verilog/rtl/user_project.v:95.16-95.23" *)
  wire [1:0] gpio_in;
  (* src = "verilog/rtl/user_project.v:100.19-100.27" *)
  wire gpio_irq;
  (* src = "verilog/rtl/user_project.v:95.35-95.42" *)
  wire [1:0] gpio_oe;
  (* src = "verilog/rtl/user_project.v:95.25-95.33" *)
  wire [1:0] gpio_out;
  (* src = "verilog/rtl/user_project.v:80.17-80.25" *)
  wire [3:0] gpio_sel;
  (* src = "verilog/rtl/user_project.v:79.27-79.35" *)
  wire gpio_stb;
  (* src = "verilog/rtl/user_project.v:79.37-79.44" *)
  wire gpio_we;
  (* src = "verilog/rtl/user_project.v:76.17-76.24" *)
  wire i3c_ack;
  (* src = "verilog/rtl/user_project.v:75.17-75.24" *)
  wire [31:0] i3c_adr;
  (* src = "verilog/rtl/user_project.v:73.17-73.24" *)
  wire i3c_cyc;
  (* src = "verilog/rtl/user_project.v:75.40-75.52" *)
  wire [31:0] i3c_dat_miso;
  (* src = "verilog/rtl/user_project.v:75.26-75.38" *)
  wire [31:0] i3c_dat_mosi;
  (* src = "verilog/rtl/user_project.v:100.10-100.17" *)
  wire i3c_irq;
  (* src = "verilog/rtl/user_project.v:92.10-92.17" *)
  wire i3c_scl;
  (* src = "verilog/rtl/user_project.v:92.19-92.26" *)
  wire i3c_sda;
  (* src = "verilog/rtl/user_project.v:74.17-74.24" *)
  wire [3:0] i3c_sel;
  (* src = "verilog/rtl/user_project.v:73.26-73.33" *)
  wire i3c_stb;
  (* src = "verilog/rtl/user_project.v:73.35-73.41" *)
  wire i3c_we;
  (* src = "verilog/rtl/user_project.v:36.19-36.24" *)
  input [37:0] io_in;
  wire [37:0] io_in;
  (* src = "verilog/rtl/user_project.v:38.19-38.25" *)
  output [37:0] io_oeb;
  wire [37:0] io_oeb;
  (* src = "verilog/rtl/user_project.v:37.19-37.25" *)
  output [37:0] io_out;
  wire [37:0] io_out;
  (* src = "verilog/rtl/user_project.v:41.18-41.21" *)
  output [2:0] irq;
  wire [2:0] irq;
  (* src = "verilog/rtl/user_project.v:31.20-31.30" *)
  input [127:0] la_data_in;
  wire [127:0] la_data_in;
  (* src = "verilog/rtl/user_project.v:32.20-32.31" *)
  output [127:0] la_data_out;
  wire [127:0] la_data_out;
  (* src = "verilog/rtl/user_project.v:33.20-33.27" *)
  input [127:0] la_oenb;
  wire [127:0] la_oenb;
  (* src = "verilog/rtl/user_project.v:45.10-45.15" *)
  wire rst_n;
  (* src = "verilog/rtl/user_project.v:52.17-52.25" *)
  wire spi0_ack;
  (* src = "verilog/rtl/user_project.v:51.17-51.25" *)
  wire [31:0] spi0_adr;
  (* src = "verilog/rtl/user_project.v:86.32-86.40" *)
  wire spi0_csb;
  (* src = "verilog/rtl/user_project.v:49.17-49.25" *)
  wire spi0_cyc;
  (* src = "verilog/rtl/user_project.v:51.42-51.55" *)
  wire [31:0] spi0_dat_miso;
  (* src = "verilog/rtl/user_project.v:51.27-51.40" *)
  wire [31:0] spi0_dat_mosi;
  (* src = "verilog/rtl/user_project.v:99.10-99.18" *)
  wire spi0_irq;
  (* src = "verilog/rtl/user_project.v:86.10-86.19" *)
  wire spi0_miso;
  (* src = "verilog/rtl/user_project.v:86.21-86.30" *)
  wire spi0_mosi;
  (* src = "verilog/rtl/user_project.v:86.42-86.51" *)
  wire spi0_sclk;
  (* src = "verilog/rtl/user_project.v:50.17-50.25" *)
  wire [3:0] spi0_sel;
  (* src = "verilog/rtl/user_project.v:49.27-49.35" *)
  wire spi0_stb;
  (* src = "verilog/rtl/user_project.v:49.37-49.44" *)
  wire spi0_we;
  (* src = "verilog/rtl/user_project.v:58.17-58.25" *)
  wire spi1_ack;
  (* src = "verilog/rtl/user_project.v:57.17-57.25" *)
  wire [31:0] spi1_adr;
  (* src = "verilog/rtl/user_project.v:87.32-87.40" *)
  wire spi1_csb;
  (* src = "verilog/rtl/user_project.v:55.17-55.25" *)
  wire spi1_cyc;
  (* src = "verilog/rtl/user_project.v:57.42-57.55" *)
  wire [31:0] spi1_dat_miso;
  (* src = "verilog/rtl/user_project.v:57.27-57.40" *)
  wire [31:0] spi1_dat_mosi;
  (* src = "verilog/rtl/user_project.v:99.20-99.28" *)
  wire spi1_irq;
  (* src = "verilog/rtl/user_project.v:87.10-87.19" *)
  wire spi1_miso;
  (* src = "verilog/rtl/user_project.v:87.21-87.30" *)
  wire spi1_mosi;
  (* src = "verilog/rtl/user_project.v:87.42-87.51" *)
  wire spi1_sclk;
  (* src = "verilog/rtl/user_project.v:56.17-56.25" *)
  wire [3:0] spi1_sel;
  (* src = "verilog/rtl/user_project.v:55.27-55.35" *)
  wire spi1_stb;
  (* src = "verilog/rtl/user_project.v:55.37-55.44" *)
  wire spi1_we;
  (* src = "verilog/rtl/user_project.v:64.17-64.25" *)
  wire spi2_ack;
  (* src = "verilog/rtl/user_project.v:63.17-63.25" *)
  wire [31:0] spi2_adr;
  (* src = "verilog/rtl/user_project.v:88.32-88.40" *)
  wire spi2_csb;
  (* src = "verilog/rtl/user_project.v:61.17-61.25" *)
  wire spi2_cyc;
  (* src = "verilog/rtl/user_project.v:63.42-63.55" *)
  wire [31:0] spi2_dat_miso;
  (* src = "verilog/rtl/user_project.v:63.27-63.40" *)
  wire [31:0] spi2_dat_mosi;
  (* src = "verilog/rtl/user_project.v:99.30-99.38" *)
  wire spi2_irq;
  (* src = "verilog/rtl/user_project.v:88.10-88.19" *)
  wire spi2_miso;
  (* src = "verilog/rtl/user_project.v:88.21-88.30" *)
  wire spi2_mosi;
  (* src = "verilog/rtl/user_project.v:88.42-88.51" *)
  wire spi2_sclk;
  (* src = "verilog/rtl/user_project.v:62.17-62.25" *)
  wire [3:0] spi2_sel;
  (* src = "verilog/rtl/user_project.v:61.27-61.35" *)
  wire spi2_stb;
  (* src = "verilog/rtl/user_project.v:61.37-61.44" *)
  wire spi2_we;
  (* src = "verilog/rtl/user_project.v:70.17-70.25" *)
  wire spi3_ack;
  (* src = "verilog/rtl/user_project.v:69.17-69.25" *)
  wire [31:0] spi3_adr;
  (* src = "verilog/rtl/user_project.v:89.32-89.40" *)
  wire spi3_csb;
  (* src = "verilog/rtl/user_project.v:67.17-67.25" *)
  wire spi3_cyc;
  (* src = "verilog/rtl/user_project.v:69.42-69.55" *)
  wire [31:0] spi3_dat_miso;
  (* src = "verilog/rtl/user_project.v:69.27-69.40" *)
  wire [31:0] spi3_dat_mosi;
  (* src = "verilog/rtl/user_project.v:99.40-99.48" *)
  wire spi3_irq;
  (* src = "verilog/rtl/user_project.v:89.10-89.19" *)
  wire spi3_miso;
  (* src = "verilog/rtl/user_project.v:89.21-89.30" *)
  wire spi3_mosi;
  (* src = "verilog/rtl/user_project.v:89.42-89.51" *)
  wire spi3_sclk;
  (* src = "verilog/rtl/user_project.v:68.17-68.25" *)
  wire [3:0] spi3_sel;
  (* src = "verilog/rtl/user_project.v:67.27-67.35" *)
  wire spi3_stb;
  (* src = "verilog/rtl/user_project.v:67.37-67.44" *)
  wire spi3_we;
  (* src = "verilog/rtl/user_project.v:19.19-19.27" *)
  input wb_clk_i;
  wire wb_clk_i;
  (* src = "verilog/rtl/user_project.v:20.19-20.27" *)
  input wb_rst_i;
  wire wb_rst_i;
  (* src = "verilog/rtl/user_project.v:28.19-28.28" *)
  output wbs_ack_o;
  wire wbs_ack_o;
  (* src = "verilog/rtl/user_project.v:26.19-26.28" *)
  input [31:0] wbs_adr_i;
  wire [31:0] wbs_adr_i;
  (* src = "verilog/rtl/user_project.v:22.19-22.28" *)
  input wbs_cyc_i;
  wire wbs_cyc_i;
  (* src = "verilog/rtl/user_project.v:25.19-25.28" *)
  input [31:0] wbs_dat_i;
  wire [31:0] wbs_dat_i;
  (* src = "verilog/rtl/user_project.v:27.19-27.28" *)
  output [31:0] wbs_dat_o;
  wire [31:0] wbs_dat_o;
  (* src = "verilog/rtl/user_project.v:24.19-24.28" *)
  input [3:0] wbs_sel_i;
  wire [3:0] wbs_sel_i;
  (* src = "verilog/rtl/user_project.v:21.19-21.28" *)
  input wbs_stb_i;
  wire wbs_stb_i;
  (* src = "verilog/rtl/user_project.v:23.19-23.27" *)
  input wbs_we_i;
  wire wbs_we_i;
  assign rst_n = ~wb_rst_i;
  assign io_oeb[22] = ~gpio_full_oe[0];
  assign io_oeb[23] = ~gpio_full_oe[1];
  assign _0_ = spi1_irq | spi0_irq;
  assign _1_ = _0_ | spi2_irq;
  assign irq[0] = _1_ | spi3_irq;
  (* module_not_derived = 32'd1 *)
  (* src = "verilog/rtl/user_project.v:272.17-288.6" *)
  EF_GPIO8_WB gpio_inst (
    .IRQ(gpio_irq),
    .ack_o(gpio_ack),
    .adr_i(gpio_adr),
    .clk_i(wb_clk_i),
    .cyc_i(gpio_cyc),
    .dat_i(gpio_dat_mosi),
    .dat_o(gpio_dat_miso),
    .ext_clk(wb_clk_i),
    .io_in({ 6'h00, io_in[23:22] }),
    .io_oe(gpio_full_oe),
    .io_out(gpio_full_out),
    .rst_i(wb_rst_i),
    .sel_i(gpio_sel),
    .stb_i(gpio_stb),
    .we_i(gpio_we)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "verilog/rtl/user_project.v:255.20-269.6" *)
  i3c_controller i3c_inst (
    .clk(wb_clk_i),
    .irq(i3c_irq),
    .rst_n(rst_n),
    .scl(i3c_scl),
    .sda(i3c_sda),
    .wb_ack_o(i3c_ack),
    .wb_adr_i(i3c_adr),
    .wb_cyc_i(i3c_cyc),
    .wb_dat_i(i3c_dat_mosi),
    .wb_dat_o(i3c_dat_miso),
    .wb_sel_i(i3c_sel),
    .wb_stb_i(i3c_stb),
    .wb_we_i(i3c_we)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "verilog/rtl/user_project.v:179.15-195.6" *)
  CF_SPI_WB spi0_inst (
    .IRQ(spi0_irq),
    .ack_o(spi0_ack),
    .adr_i(spi0_adr),
    .clk_i(wb_clk_i),
    .csb(spi0_csb),
    .cyc_i(spi0_cyc),
    .dat_i(spi0_dat_mosi),
    .dat_o(spi0_dat_miso),
    .miso(io_in[7]),
    .mosi(spi0_mosi),
    .rst_i(wb_rst_i),
    .sclk(spi0_sclk),
    .sel_i(spi0_sel),
    .stb_i(spi0_stb),
    .we_i(spi0_we)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "verilog/rtl/user_project.v:198.15-214.6" *)
  CF_SPI_WB spi1_inst (
    .IRQ(spi1_irq),
    .ack_o(spi1_ack),
    .adr_i(spi1_adr),
    .clk_i(wb_clk_i),
    .csb(spi1_csb),
    .cyc_i(spi1_cyc),
    .dat_i(spi1_dat_mosi),
    .dat_o(spi1_dat_miso),
    .miso(io_in[11]),
    .mosi(spi1_mosi),
    .rst_i(wb_rst_i),
    .sclk(spi1_sclk),
    .sel_i(spi1_sel),
    .stb_i(spi1_stb),
    .we_i(spi1_we)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "verilog/rtl/user_project.v:217.15-233.6" *)
  CF_SPI_WB spi2_inst (
    .IRQ(spi2_irq),
    .ack_o(spi2_ack),
    .adr_i(spi2_adr),
    .clk_i(wb_clk_i),
    .csb(spi2_csb),
    .cyc_i(spi2_cyc),
    .dat_i(spi2_dat_mosi),
    .dat_o(spi2_dat_miso),
    .miso(io_in[15]),
    .mosi(spi2_mosi),
    .rst_i(wb_rst_i),
    .sclk(spi2_sclk),
    .sel_i(spi2_sel),
    .stb_i(spi2_stb),
    .we_i(spi2_we)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "verilog/rtl/user_project.v:236.15-252.6" *)
  CF_SPI_WB spi3_inst (
    .IRQ(spi3_irq),
    .ack_o(spi3_ack),
    .adr_i(spi3_adr),
    .clk_i(wb_clk_i),
    .csb(spi3_csb),
    .cyc_i(spi3_cyc),
    .dat_i(spi3_dat_mosi),
    .dat_o(spi3_dat_miso),
    .miso(io_in[19]),
    .mosi(spi3_mosi),
    .rst_i(wb_rst_i),
    .sclk(spi3_sclk),
    .sel_i(spi3_sel),
    .stb_i(spi3_stb),
    .we_i(spi3_we)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "verilog/rtl/user_project.v:103.21-176.6" *)
  wb_interconnect wb_intercon (
    .gpio_ack_i(gpio_ack),
    .gpio_adr_o(gpio_adr),
    .gpio_cyc_o(gpio_cyc),
    .gpio_dat_i(gpio_dat_miso),
    .gpio_dat_o(gpio_dat_mosi),
    .gpio_sel_o(gpio_sel),
    .gpio_stb_o(gpio_stb),
    .gpio_we_o(gpio_we),
    .i3c_ack_i(i3c_ack),
    .i3c_adr_o(i3c_adr),
    .i3c_cyc_o(i3c_cyc),
    .i3c_dat_i(i3c_dat_miso),
    .i3c_dat_o(i3c_dat_mosi),
    .i3c_sel_o(i3c_sel),
    .i3c_stb_o(i3c_stb),
    .i3c_we_o(i3c_we),
    .spi0_ack_i(spi0_ack),
    .spi0_adr_o(spi0_adr),
    .spi0_cyc_o(spi0_cyc),
    .spi0_dat_i(spi0_dat_miso),
    .spi0_dat_o(spi0_dat_mosi),
    .spi0_sel_o(spi0_sel),
    .spi0_stb_o(spi0_stb),
    .spi0_we_o(spi0_we),
    .spi1_ack_i(spi1_ack),
    .spi1_adr_o(spi1_adr),
    .spi1_cyc_o(spi1_cyc),
    .spi1_dat_i(spi1_dat_miso),
    .spi1_dat_o(spi1_dat_mosi),
    .spi1_sel_o(spi1_sel),
    .spi1_stb_o(spi1_stb),
    .spi1_we_o(spi1_we),
    .spi2_ack_i(spi2_ack),
    .spi2_adr_o(spi2_adr),
    .spi2_cyc_o(spi2_cyc),
    .spi2_dat_i(spi2_dat_miso),
    .spi2_dat_o(spi2_dat_mosi),
    .spi2_sel_o(spi2_sel),
    .spi2_stb_o(spi2_stb),
    .spi2_we_o(spi2_we),
    .spi3_ack_i(spi3_ack),
    .spi3_adr_o(spi3_adr),
    .spi3_cyc_o(spi3_cyc),
    .spi3_dat_i(spi3_dat_miso),
    .spi3_dat_o(spi3_dat_mosi),
    .spi3_sel_o(spi3_sel),
    .spi3_stb_o(spi3_stb),
    .spi3_we_o(spi3_we),
    .wb_clk_i(wb_clk_i),
    .wb_rst_i(wb_rst_i),
    .wbs_ack_o(wbs_ack_o),
    .wbs_adr_i(wbs_adr_i),
    .wbs_cyc_i(wbs_cyc_i),
    .wbs_dat_i(wbs_dat_i),
    .wbs_dat_o(wbs_dat_o),
    .wbs_sel_i(wbs_sel_i),
    .wbs_stb_i(wbs_stb_i),
    .wbs_we_i(wbs_we_i)
  );
  assign gpio_in = io_in[23:22];
  assign gpio_oe = gpio_full_oe[1:0];
  assign gpio_out = gpio_full_out[1:0];
  assign { io_oeb[37:24], io_oeb[21:0] } = { 14'h0001, i3c_sda, i3c_scl, 20'h88881 };
  assign io_out = { 14'h0000, gpio_full_out[1:0], 3'b00x, spi3_sclk, spi3_mosi, spi3_csb, 1'hx, spi2_sclk, spi2_mosi, spi2_csb, 1'hx, spi1_sclk, spi1_mosi, spi1_csb, 1'hx, spi0_sclk, spi0_mosi, spi0_csb, 4'h0 };
  assign irq[2:1] = { gpio_irq, i3c_irq };
  assign la_data_out = { 25'h0000000, gpio_irq, i3c_irq, irq[0], wbs_ack_o, wbs_we_i, wbs_stb_i, wbs_cyc_i, wbs_dat_o, wbs_dat_i, wbs_adr_i };
  assign spi0_miso = io_in[7];
  assign spi1_miso = io_in[11];
  assign spi2_miso = io_in[15];
  assign spi3_miso = io_in[19];
endmodule

(* top =  1  *)
(* src = "verilog/rtl/user_project_wb_wrapper.v:12.1-69.10" *)
module user_project_wb_wrapper(wb_clk_i, wb_rst_i, wbs_stb_i, wbs_cyc_i, wbs_we_i, wbs_sel_i, wbs_dat_i, wbs_adr_i, wbs_dat_o, wbs_ack_o, la_data_in, la_data_out, la_oenb, io_in, io_out, io_oeb, user_irq);
  (* src = "verilog/rtl/user_project_wb_wrapper.v:36.19-36.24" *)
  input [37:0] io_in;
  wire [37:0] io_in;
  (* src = "verilog/rtl/user_project_wb_wrapper.v:38.19-38.25" *)
  output [37:0] io_oeb;
  wire [37:0] io_oeb;
  (* src = "verilog/rtl/user_project_wb_wrapper.v:37.19-37.25" *)
  output [37:0] io_out;
  wire [37:0] io_out;
  (* src = "verilog/rtl/user_project_wb_wrapper.v:31.20-31.30" *)
  input [127:0] la_data_in;
  wire [127:0] la_data_in;
  (* src = "verilog/rtl/user_project_wb_wrapper.v:32.20-32.31" *)
  output [127:0] la_data_out;
  wire [127:0] la_data_out;
  (* src = "verilog/rtl/user_project_wb_wrapper.v:33.20-33.27" *)
  input [127:0] la_oenb;
  wire [127:0] la_oenb;
  (* src = "verilog/rtl/user_project_wb_wrapper.v:41.18-41.26" *)
  output [2:0] user_irq;
  wire [2:0] user_irq;
  (* src = "verilog/rtl/user_project_wb_wrapper.v:19.19-19.27" *)
  input wb_clk_i;
  wire wb_clk_i;
  (* src = "verilog/rtl/user_project_wb_wrapper.v:20.19-20.27" *)
  input wb_rst_i;
  wire wb_rst_i;
  (* src = "verilog/rtl/user_project_wb_wrapper.v:28.19-28.28" *)
  output wbs_ack_o;
  wire wbs_ack_o;
  (* src = "verilog/rtl/user_project_wb_wrapper.v:26.19-26.28" *)
  input [31:0] wbs_adr_i;
  wire [31:0] wbs_adr_i;
  (* src = "verilog/rtl/user_project_wb_wrapper.v:22.19-22.28" *)
  input wbs_cyc_i;
  wire wbs_cyc_i;
  (* src = "verilog/rtl/user_project_wb_wrapper.v:25.19-25.28" *)
  input [31:0] wbs_dat_i;
  wire [31:0] wbs_dat_i;
  (* src = "verilog/rtl/user_project_wb_wrapper.v:27.19-27.28" *)
  output [31:0] wbs_dat_o;
  wire [31:0] wbs_dat_o;
  (* src = "verilog/rtl/user_project_wb_wrapper.v:24.19-24.28" *)
  input [3:0] wbs_sel_i;
  wire [3:0] wbs_sel_i;
  (* src = "verilog/rtl/user_project_wb_wrapper.v:21.19-21.28" *)
  input wbs_stb_i;
  wire wbs_stb_i;
  (* src = "verilog/rtl/user_project_wb_wrapper.v:23.19-23.27" *)
  input wbs_we_i;
  wire wbs_we_i;
  (* module_not_derived = 32'd1 *)
  (* src = "verilog/rtl/user_project_wb_wrapper.v:45.18-67.6" *)
  user_project user_proj_inst (
    .io_in(io_in),
    .io_oeb(io_oeb),
    .io_out(io_out),
    .irq(user_irq),
    .la_data_in(la_data_in),
    .la_data_out(la_data_out),
    .la_oenb(la_oenb),
    .wb_clk_i(wb_clk_i),
    .wb_rst_i(wb_rst_i),
    .wbs_ack_o(wbs_ack_o),
    .wbs_adr_i(wbs_adr_i),
    .wbs_cyc_i(wbs_cyc_i),
    .wbs_dat_i(wbs_dat_i),
    .wbs_dat_o(wbs_dat_o),
    .wbs_sel_i(wbs_sel_i),
    .wbs_stb_i(wbs_stb_i),
    .wbs_we_i(wbs_we_i)
  );
endmodule

(* src = "verilog/rtl/wb_interconnect.v:12.1-183.10" *)
module wb_interconnect(wb_clk_i, wb_rst_i, wbs_cyc_i, wbs_stb_i, wbs_we_i, wbs_sel_i, wbs_adr_i, wbs_dat_i, wbs_dat_o, wbs_ack_o, spi0_cyc_o, spi0_stb_o, spi0_we_o, spi0_sel_o, spi0_adr_o, spi0_dat_o, spi0_dat_i, spi0_ack_i, spi1_cyc_o, spi1_stb_o, spi1_we_o
, spi1_sel_o, spi1_adr_o, spi1_dat_o, spi1_dat_i, spi1_ack_i, spi2_cyc_o, spi2_stb_o, spi2_we_o, spi2_sel_o, spi2_adr_o, spi2_dat_o, spi2_dat_i, spi2_ack_i, spi3_cyc_o, spi3_stb_o, spi3_we_o, spi3_sel_o, spi3_adr_o, spi3_dat_o, spi3_dat_i, spi3_ack_i
, i3c_cyc_o, i3c_stb_o, i3c_we_o, i3c_sel_o, i3c_adr_o, i3c_dat_o, i3c_dat_i, i3c_ack_i, gpio_cyc_o, gpio_stb_o, gpio_we_o, gpio_sel_o, gpio_adr_o, gpio_dat_o, gpio_dat_i, gpio_ack_i);
  wire _0000_;
  wire _0001_;
  wire _0002_;
  wire _0003_;
  wire _0004_;
  wire _0005_;
  wire _0006_;
  wire _0007_;
  wire _0008_;
  wire _0009_;
  wire _0010_;
  wire _0011_;
  wire _0012_;
  wire _0013_;
  wire _0014_;
  wire _0015_;
  wire _0016_;
  wire _0017_;
  wire _0018_;
  wire _0019_;
  wire _0020_;
  wire _0021_;
  wire _0022_;
  wire _0023_;
  wire _0024_;
  wire _0025_;
  wire _0026_;
  wire _0027_;
  wire _0028_;
  wire _0029_;
  wire _0030_;
  wire _0031_;
  wire _0032_;
  wire _0033_;
  wire _0034_;
  wire _0035_;
  wire _0036_;
  wire _0037_;
  wire _0038_;
  wire _0039_;
  wire _0040_;
  wire _0041_;
  wire _0042_;
  wire _0043_;
  wire _0044_;
  wire _0045_;
  wire _0046_;
  wire _0047_;
  wire _0048_;
  wire _0049_;
  wire _0050_;
  wire _0051_;
  wire _0052_;
  wire _0053_;
  wire _0054_;
  wire _0055_;
  wire _0056_;
  wire _0057_;
  wire _0058_;
  wire _0059_;
  wire _0060_;
  wire _0061_;
  wire _0062_;
  wire _0063_;
  wire _0064_;
  wire _0065_;
  wire _0066_;
  wire _0067_;
  wire _0068_;
  wire _0069_;
  wire _0070_;
  wire _0071_;
  wire _0072_;
  wire _0073_;
  wire _0074_;
  wire _0075_;
  wire _0076_;
  wire _0077_;
  wire _0078_;
  wire _0079_;
  wire _0080_;
  wire _0081_;
  wire _0082_;
  wire _0083_;
  wire _0084_;
  wire _0085_;
  wire _0086_;
  wire _0087_;
  wire _0088_;
  wire _0089_;
  wire _0090_;
  wire _0091_;
  wire _0092_;
  wire _0093_;
  wire _0094_;
  wire _0095_;
  wire _0096_;
  wire _0097_;
  wire _0098_;
  wire _0099_;
  wire _0100_;
  wire _0101_;
  wire _0102_;
  wire _0103_;
  wire _0104_;
  wire _0105_;
  wire _0106_;
  wire _0107_;
  wire _0108_;
  wire _0109_;
  wire _0110_;
  wire _0111_;
  wire _0112_;
  wire _0113_;
  wire _0114_;
  wire _0115_;
  wire _0116_;
  wire _0117_;
  wire _0118_;
  wire _0119_;
  wire _0120_;
  wire _0121_;
  wire _0122_;
  wire _0123_;
  wire _0124_;
  wire _0125_;
  wire _0126_;
  wire _0127_;
  wire _0128_;
  wire _0129_;
  wire _0130_;
  wire _0131_;
  wire _0132_;
  wire _0133_;
  wire _0134_;
  wire _0135_;
  wire _0136_;
  wire _0137_;
  wire _0138_;
  wire _0139_;
  wire _0140_;
  wire _0141_;
  wire _0142_;
  wire _0143_;
  wire _0144_;
  wire _0145_;
  wire _0146_;
  wire _0147_;
  wire _0148_;
  wire _0149_;
  wire _0150_;
  wire _0151_;
  wire _0152_;
  wire _0153_;
  wire _0154_;
  wire _0155_;
  wire _0156_;
  wire _0157_;
  wire _0158_;
  wire _0159_;
  wire _0160_;
  wire _0161_;
  wire _0162_;
  wire _0163_;
  wire _0164_;
  wire _0165_;
  wire _0166_;
  wire _0167_;
  wire _0168_;
  wire _0169_;
  wire _0170_;
  wire _0171_;
  wire _0172_;
  wire _0173_;
  wire _0174_;
  wire _0175_;
  wire _0176_;
  wire _0177_;
  wire _0178_;
  wire _0179_;
  wire _0180_;
  wire _0181_;
  wire _0182_;
  wire _0183_;
  wire _0184_;
  wire _0185_;
  wire _0186_;
  wire _0187_;
  wire _0188_;
  wire _0189_;
  wire _0190_;
  wire _0191_;
  wire _0192_;
  wire _0193_;
  wire _0194_;
  wire _0195_;
  wire _0196_;
  wire _0197_;
  wire _0198_;
  wire _0199_;
  wire _0200_;
  wire _0201_;
  wire _0202_;
  wire _0203_;
  wire _0204_;
  wire _0205_;
  wire _0206_;
  wire _0207_;
  wire _0208_;
  wire _0209_;
  wire _0210_;
  wire _0211_;
  wire _0212_;
  wire _0213_;
  wire _0214_;
  wire _0215_;
  wire _0216_;
  wire _0217_;
  wire _0218_;
  wire _0219_;
  wire _0220_;
  wire _0221_;
  wire _0222_;
  wire _0223_;
  wire _0224_;
  wire _0225_;
  wire _0226_;
  wire _0227_;
  wire _0228_;
  wire _0229_;
  wire _0230_;
  wire _0231_;
  wire _0232_;
  wire _0233_;
  wire _0234_;
  wire _0235_;
  wire _0236_;
  wire _0237_;
  wire _0238_;
  wire _0239_;
  wire _0240_;
  wire _0241_;
  wire _0242_;
  wire _0243_;
  wire _0244_;
  wire _0245_;
  wire _0246_;
  wire _0247_;
  wire _0248_;
  wire _0249_;
  wire _0250_;
  wire _0251_;
  wire _0252_;
  wire _0253_;
  wire _0254_;
  wire _0255_;
  wire _0256_;
  wire _0257_;
  wire _0258_;
  wire _0259_;
  wire _0260_;
  wire _0261_;
  wire _0262_;
  wire _0263_;
  wire _0264_;
  wire _0265_;
  wire _0266_;
  wire _0267_;
  wire _0268_;
  wire _0269_;
  wire _0270_;
  wire _0271_;
  wire _0272_;
  wire _0273_;
  wire _0274_;
  wire _0275_;
  wire _0276_;
  wire _0277_;
  wire _0278_;
  wire _0279_;
  wire _0280_;
  wire _0281_;
  wire _0282_;
  wire _0283_;
  wire _0284_;
  wire _0285_;
  wire _0286_;
  wire _0287_;
  wire _0288_;
  wire _0289_;
  wire _0290_;
  wire _0291_;
  wire _0292_;
  wire _0293_;
  wire _0294_;
  wire _0295_;
  wire _0296_;
  wire _0297_;
  wire _0298_;
  wire _0299_;
  wire _0300_;
  wire _0301_;
  wire _0302_;
  wire _0303_;
  wire _0304_;
  wire _0305_;
  wire _0306_;
  wire _0307_;
  wire _0308_;
  wire _0309_;
  wire _0310_;
  wire _0311_;
  wire _0312_;
  wire _0313_;
  wire _0314_;
  wire _0315_;
  wire _0316_;
  wire _0317_;
  wire _0318_;
  wire _0319_;
  wire _0320_;
  wire _0321_;
  wire _0322_;
  wire _0323_;
  wire _0324_;
  wire _0325_;
  wire _0326_;
  wire _0327_;
  wire _0328_;
  wire _0329_;
  wire _0330_;
  wire _0331_;
  wire _0332_;
  wire _0333_;
  wire _0334_;
  wire _0335_;
  wire _0336_;
  wire _0337_;
  wire _0338_;
  wire _0339_;
  wire _0340_;
  wire _0341_;
  wire _0342_;
  wire _0343_;
  wire _0344_;
  wire _0345_;
  wire _0346_;
  wire _0347_;
  wire _0348_;
  wire _0349_;
  wire _0350_;
  wire _0351_;
  wire _0352_;
  wire _0353_;
  wire _0354_;
  wire _0355_;
  wire _0356_;
  wire _0357_;
  wire _0358_;
  wire _0359_;
  wire _0360_;
  wire _0361_;
  wire _0362_;
  wire _0363_;
  wire _0364_;
  wire _0365_;
  wire _0366_;
  wire _0367_;
  wire _0368_;
  wire _0369_;
  wire _0370_;
  wire _0371_;
  wire _0372_;
  wire _0373_;
  wire _0374_;
  wire _0375_;
  wire _0376_;
  wire _0377_;
  wire _0378_;
  wire _0379_;
  wire _0380_;
  wire _0381_;
  wire _0382_;
  wire _0383_;
  wire _0384_;
  wire _0385_;
  wire _0386_;
  wire _0387_;
  wire _0388_;
  wire _0389_;
  wire _0390_;
  wire _0391_;
  wire _0392_;
  wire _0393_;
  wire _0394_;
  wire _0395_;
  wire _0396_;
  wire _0397_;
  wire _0398_;
  wire _0399_;
  wire _0400_;
  wire _0401_;
  wire _0402_;
  wire _0403_;
  wire _0404_;
  wire _0405_;
  wire _0406_;
  wire _0407_;
  wire _0408_;
  wire _0409_;
  wire _0410_;
  wire _0411_;
  wire _0412_;
  wire _0413_;
  wire _0414_;
  wire _0415_;
  wire _0416_;
  wire _0417_;
  wire _0418_;
  wire _0419_;
  wire _0420_;
  wire _0421_;
  wire _0422_;
  wire _0423_;
  wire _0424_;
  wire _0425_;
  wire _0426_;
  wire _0427_;
  wire _0428_;
  wire _0429_;
  wire _0430_;
  wire _0431_;
  wire _0432_;
  wire _0433_;
  wire _0434_;
  wire _0435_;
  wire _0436_;
  wire _0437_;
  wire _0438_;
  wire _0439_;
  wire _0440_;
  wire _0441_;
  wire _0442_;
  wire _0443_;
  wire _0444_;
  wire _0445_;
  wire _0446_;
  wire _0447_;
  wire _0448_;
  wire _0449_;
  wire _0450_;
  wire _0451_;
  wire _0452_;
  wire _0453_;
  wire _0454_;
  wire _0455_;
  wire _0456_;
  wire _0457_;
  wire _0458_;
  wire _0459_;
  wire _0460_;
  wire _0461_;
  wire _0462_;
  wire _0463_;
  wire _0464_;
  wire _0465_;
  wire _0466_;
  wire _0467_;
  wire _0468_;
  wire _0469_;
  wire _0470_;
  wire _0471_;
  wire _0472_;
  wire _0473_;
  wire _0474_;
  wire _0475_;
  wire _0476_;
  wire _0477_;
  wire _0478_;
  wire _0479_;
  wire _0480_;
  wire _0481_;
  wire _0482_;
  wire _0483_;
  wire _0484_;
  wire _0485_;
  wire _0486_;
  wire _0487_;
  wire _0488_;
  wire _0489_;
  wire _0490_;
  wire _0491_;
  wire _0492_;
  (* src = "verilog/rtl/wb_interconnect.v:85.24-85.34" *)
  input gpio_ack_i;
  wire gpio_ack_i;
  (* src = "verilog/rtl/wb_interconnect.v:82.24-82.34" *)
  output [31:0] gpio_adr_o;
  wire [31:0] gpio_adr_o;
  (* src = "verilog/rtl/wb_interconnect.v:78.24-78.34" *)
  output gpio_cyc_o;
  wire gpio_cyc_o;
  (* src = "verilog/rtl/wb_interconnect.v:84.24-84.34" *)
  input [31:0] gpio_dat_i;
  wire [31:0] gpio_dat_i;
  (* src = "verilog/rtl/wb_interconnect.v:83.24-83.34" *)
  output [31:0] gpio_dat_o;
  wire [31:0] gpio_dat_o;
  (* src = "verilog/rtl/wb_interconnect.v:81.24-81.34" *)
  output [3:0] gpio_sel_o;
  wire [3:0] gpio_sel_o;
  (* src = "verilog/rtl/wb_interconnect.v:79.24-79.34" *)
  output gpio_stb_o;
  wire gpio_stb_o;
  (* src = "verilog/rtl/wb_interconnect.v:80.24-80.33" *)
  output gpio_we_o;
  wire gpio_we_o;
  (* src = "verilog/rtl/wb_interconnect.v:75.24-75.33" *)
  input i3c_ack_i;
  wire i3c_ack_i;
  (* src = "verilog/rtl/wb_interconnect.v:72.24-72.33" *)
  output [31:0] i3c_adr_o;
  wire [31:0] i3c_adr_o;
  (* src = "verilog/rtl/wb_interconnect.v:68.24-68.33" *)
  output i3c_cyc_o;
  wire i3c_cyc_o;
  (* src = "verilog/rtl/wb_interconnect.v:74.24-74.33" *)
  input [31:0] i3c_dat_i;
  wire [31:0] i3c_dat_i;
  (* src = "verilog/rtl/wb_interconnect.v:73.24-73.33" *)
  output [31:0] i3c_dat_o;
  wire [31:0] i3c_dat_o;
  (* src = "verilog/rtl/wb_interconnect.v:71.24-71.33" *)
  output [3:0] i3c_sel_o;
  wire [3:0] i3c_sel_o;
  (* src = "verilog/rtl/wb_interconnect.v:69.24-69.33" *)
  output i3c_stb_o;
  wire i3c_stb_o;
  (* src = "verilog/rtl/wb_interconnect.v:70.24-70.32" *)
  output i3c_we_o;
  wire i3c_we_o;
  (* src = "verilog/rtl/wb_interconnect.v:35.24-35.34" *)
  input spi0_ack_i;
  wire spi0_ack_i;
  (* src = "verilog/rtl/wb_interconnect.v:32.24-32.34" *)
  output [31:0] spi0_adr_o;
  wire [31:0] spi0_adr_o;
  (* src = "verilog/rtl/wb_interconnect.v:28.24-28.34" *)
  output spi0_cyc_o;
  wire spi0_cyc_o;
  (* src = "verilog/rtl/wb_interconnect.v:34.24-34.34" *)
  input [31:0] spi0_dat_i;
  wire [31:0] spi0_dat_i;
  (* src = "verilog/rtl/wb_interconnect.v:33.24-33.34" *)
  output [31:0] spi0_dat_o;
  wire [31:0] spi0_dat_o;
  (* src = "verilog/rtl/wb_interconnect.v:31.24-31.34" *)
  output [3:0] spi0_sel_o;
  wire [3:0] spi0_sel_o;
  (* src = "verilog/rtl/wb_interconnect.v:29.24-29.34" *)
  output spi0_stb_o;
  wire spi0_stb_o;
  (* src = "verilog/rtl/wb_interconnect.v:30.24-30.33" *)
  output spi0_we_o;
  wire spi0_we_o;
  (* src = "verilog/rtl/wb_interconnect.v:45.24-45.34" *)
  input spi1_ack_i;
  wire spi1_ack_i;
  (* src = "verilog/rtl/wb_interconnect.v:42.24-42.34" *)
  output [31:0] spi1_adr_o;
  wire [31:0] spi1_adr_o;
  (* src = "verilog/rtl/wb_interconnect.v:38.24-38.34" *)
  output spi1_cyc_o;
  wire spi1_cyc_o;
  (* src = "verilog/rtl/wb_interconnect.v:44.24-44.34" *)
  input [31:0] spi1_dat_i;
  wire [31:0] spi1_dat_i;
  (* src = "verilog/rtl/wb_interconnect.v:43.24-43.34" *)
  output [31:0] spi1_dat_o;
  wire [31:0] spi1_dat_o;
  (* src = "verilog/rtl/wb_interconnect.v:41.24-41.34" *)
  output [3:0] spi1_sel_o;
  wire [3:0] spi1_sel_o;
  (* src = "verilog/rtl/wb_interconnect.v:39.24-39.34" *)
  output spi1_stb_o;
  wire spi1_stb_o;
  (* src = "verilog/rtl/wb_interconnect.v:40.24-40.33" *)
  output spi1_we_o;
  wire spi1_we_o;
  (* src = "verilog/rtl/wb_interconnect.v:55.24-55.34" *)
  input spi2_ack_i;
  wire spi2_ack_i;
  (* src = "verilog/rtl/wb_interconnect.v:52.24-52.34" *)
  output [31:0] spi2_adr_o;
  wire [31:0] spi2_adr_o;
  (* src = "verilog/rtl/wb_interconnect.v:48.24-48.34" *)
  output spi2_cyc_o;
  wire spi2_cyc_o;
  (* src = "verilog/rtl/wb_interconnect.v:54.24-54.34" *)
  input [31:0] spi2_dat_i;
  wire [31:0] spi2_dat_i;
  (* src = "verilog/rtl/wb_interconnect.v:53.24-53.34" *)
  output [31:0] spi2_dat_o;
  wire [31:0] spi2_dat_o;
  (* src = "verilog/rtl/wb_interconnect.v:51.24-51.34" *)
  output [3:0] spi2_sel_o;
  wire [3:0] spi2_sel_o;
  (* src = "verilog/rtl/wb_interconnect.v:49.24-49.34" *)
  output spi2_stb_o;
  wire spi2_stb_o;
  (* src = "verilog/rtl/wb_interconnect.v:50.24-50.33" *)
  output spi2_we_o;
  wire spi2_we_o;
  (* src = "verilog/rtl/wb_interconnect.v:65.24-65.34" *)
  input spi3_ack_i;
  wire spi3_ack_i;
  (* src = "verilog/rtl/wb_interconnect.v:62.24-62.34" *)
  output [31:0] spi3_adr_o;
  wire [31:0] spi3_adr_o;
  (* src = "verilog/rtl/wb_interconnect.v:58.24-58.34" *)
  output spi3_cyc_o;
  wire spi3_cyc_o;
  (* src = "verilog/rtl/wb_interconnect.v:64.24-64.34" *)
  input [31:0] spi3_dat_i;
  wire [31:0] spi3_dat_i;
  (* src = "verilog/rtl/wb_interconnect.v:63.24-63.34" *)
  output [31:0] spi3_dat_o;
  wire [31:0] spi3_dat_o;
  (* src = "verilog/rtl/wb_interconnect.v:61.24-61.34" *)
  output [3:0] spi3_sel_o;
  wire [3:0] spi3_sel_o;
  (* src = "verilog/rtl/wb_interconnect.v:59.24-59.34" *)
  output spi3_stb_o;
  wire spi3_stb_o;
  (* src = "verilog/rtl/wb_interconnect.v:60.24-60.33" *)
  output spi3_we_o;
  wire spi3_we_o;
  (* src = "verilog/rtl/wb_interconnect.v:14.24-14.32" *)
  input wb_clk_i;
  wire wb_clk_i;
  (* src = "verilog/rtl/wb_interconnect.v:15.24-15.32" *)
  input wb_rst_i;
  wire wb_rst_i;
  (* src = "verilog/rtl/wb_interconnect.v:25.24-25.33" *)
  output wbs_ack_o;
  wire wbs_ack_o;
  (* src = "verilog/rtl/wb_interconnect.v:22.24-22.33" *)
  input [31:0] wbs_adr_i;
  wire [31:0] wbs_adr_i;
  (* src = "verilog/rtl/wb_interconnect.v:18.24-18.33" *)
  input wbs_cyc_i;
  wire wbs_cyc_i;
  (* src = "verilog/rtl/wb_interconnect.v:23.24-23.33" *)
  input [31:0] wbs_dat_i;
  wire [31:0] wbs_dat_i;
  (* src = "verilog/rtl/wb_interconnect.v:24.24-24.33" *)
  output [31:0] wbs_dat_o;
  wire [31:0] wbs_dat_o;
  (* src = "verilog/rtl/wb_interconnect.v:21.24-21.33" *)
  input [3:0] wbs_sel_i;
  wire [3:0] wbs_sel_i;
  (* src = "verilog/rtl/wb_interconnect.v:19.24-19.33" *)
  input wbs_stb_i;
  wire wbs_stb_i;
  (* src = "verilog/rtl/wb_interconnect.v:20.24-20.32" *)
  input wbs_we_i;
  wire wbs_we_i;
  assign _0032_ = ~wbs_cyc_i;
  assign _0033_ = wbs_adr_i[30] | wbs_adr_i[31];
  assign _0034_ = ~(wbs_adr_i[29] & wbs_adr_i[28]);
  assign _0035_ = ~(_0034_ | _0033_);
  assign _0036_ = wbs_adr_i[27] | wbs_adr_i[26];
  assign _0037_ = wbs_adr_i[24] | wbs_adr_i[25];
  assign _0038_ = _0037_ | _0036_;
  assign _0039_ = _0035_ & ~(_0038_);
  assign _0040_ = wbs_adr_i[22] | wbs_adr_i[23];
  assign _0041_ = wbs_adr_i[21] | wbs_adr_i[20];
  assign _0042_ = _0041_ | _0040_;
  assign _0043_ = ~(wbs_adr_i[19] | wbs_adr_i[18]);
  assign _0044_ = wbs_adr_i[16] | wbs_adr_i[17];
  assign _0045_ = _0044_ | ~(_0043_);
  assign _0046_ = _0045_ | _0042_;
  assign _0047_ = _0039_ & ~(_0046_);
  assign _0048_ = wbs_adr_i[15] | wbs_adr_i[14];
  assign _0049_ = wbs_adr_i[13] | wbs_adr_i[12];
  assign _0050_ = ~(_0049_ | _0048_);
  assign _0051_ = wbs_adr_i[10] | wbs_adr_i[11];
  assign _0052_ = wbs_adr_i[9] | wbs_adr_i[8];
  assign _0053_ = _0052_ | _0051_;
  assign _0054_ = _0053_ | ~(_0050_);
  assign _0055_ = wbs_adr_i[7] | wbs_adr_i[6];
  assign _0056_ = wbs_adr_i[5] | wbs_adr_i[4];
  assign _0057_ = _0056_ | _0055_;
  assign _0058_ = wbs_adr_i[2] | wbs_adr_i[3];
  assign _0059_ = wbs_adr_i[1] | wbs_adr_i[0];
  assign _0060_ = _0059_ | _0058_;
  assign _0061_ = _0060_ | _0057_;
  assign _0062_ = _0061_ | _0054_;
  assign _0063_ = _0047_ & ~(_0062_);
  assign _0064_ = wbs_adr_i[29] & wbs_adr_i[28];
  assign _0065_ = _0064_ | _0033_;
  assign _0066_ = _0065_ | _0063_;
  assign _0067_ = wbs_adr_i[9] | ~(wbs_adr_i[8]);
  assign _0068_ = _0067_ | _0051_;
  assign _0069_ = _0068_ | ~(_0050_);
  assign _0070_ = _0069_ | _0061_;
  assign _0071_ = _0047_ & ~(_0070_);
  assign _0072_ = _0070_ & _0054_;
  assign _0073_ = _0047_ & ~(_0072_);
  assign _0074_ = _0065_ & ~(_0073_);
  assign _0075_ = _0074_ | _0071_;
  assign _0076_ = _0066_ & ~(_0075_);
  assign spi0_cyc_o = _0076_ & ~(_0032_);
  assign _0077_ = ~wbs_stb_i;
  assign spi0_stb_o = _0076_ & ~(_0077_);
  assign _0078_ = wbs_adr_i[8] | ~(wbs_adr_i[9]);
  assign _0079_ = ~(_0078_ | _0051_);
  assign _0080_ = ~(_0079_ & _0050_);
  assign _0081_ = _0080_ | _0061_;
  assign _0082_ = _0047_ & ~(_0081_);
  assign _0083_ = _0051_ | wbs_adr_i[9];
  assign _0084_ = _0050_ & ~(_0083_);
  assign _0085_ = _0081_ & ~(_0084_);
  assign _0086_ = _0047_ & ~(_0085_);
  assign _0087_ = _0065_ & ~(_0086_);
  assign _0088_ = _0087_ | _0082_;
  assign _0089_ = _0075_ & ~(_0088_);
  assign spi1_cyc_o = _0089_ & ~(_0032_);
  assign spi1_stb_o = _0089_ & ~(_0077_);
  assign _0090_ = ~(wbs_adr_i[9] & wbs_adr_i[8]);
  assign _0091_ = _0090_ | _0051_;
  assign _0092_ = _0091_ | ~(_0050_);
  assign _0093_ = _0092_ | _0061_;
  assign _0094_ = _0047_ & ~(_0093_);
  assign _0095_ = wbs_adr_i[9] & wbs_adr_i[8];
  assign _0096_ = _0095_ | _0051_;
  assign _0097_ = _0050_ & ~(_0096_);
  assign _0098_ = _0093_ & ~(_0097_);
  assign _0099_ = _0047_ & ~(_0098_);
  assign _0100_ = _0065_ & ~(_0099_);
  assign _0101_ = _0100_ | _0094_;
  assign _0102_ = _0088_ & ~(_0101_);
  assign spi2_cyc_o = _0102_ & ~(_0032_);
  assign spi2_stb_o = _0102_ & ~(_0077_);
  assign _0103_ = _0050_ & ~(_0051_);
  assign _0104_ = wbs_adr_i[11] | ~(wbs_adr_i[10]);
  assign _0105_ = ~(_0104_ | _0052_);
  assign _0106_ = ~(_0105_ & _0050_);
  assign _0107_ = _0106_ | _0061_;
  assign _0108_ = _0107_ & ~(_0103_);
  assign _0109_ = _0047_ & ~(_0108_);
  assign _0110_ = _0065_ & ~(_0109_);
  assign _0111_ = _0047_ & ~(_0107_);
  assign _0112_ = _0111_ | _0110_;
  assign _0113_ = _0101_ & ~(_0112_);
  assign spi3_cyc_o = _0113_ & ~(_0032_);
  assign spi3_stb_o = _0113_ & ~(_0077_);
  assign _0114_ = wbs_adr_i[13] | ~(wbs_adr_i[12]);
  assign _0115_ = _0114_ | _0048_;
  assign _0116_ = _0115_ | _0053_;
  assign _0117_ = _0116_ | _0061_;
  assign _0118_ = _0047_ & ~(_0117_);
  assign _0119_ = ~_0050_;
  assign _0120_ = _0117_ & _0119_;
  assign _0121_ = _0047_ & ~(_0120_);
  assign _0122_ = _0065_ & ~(_0121_);
  assign _0123_ = _0122_ | _0118_;
  assign _0124_ = ~(_0116_ & _0119_);
  assign _0125_ = _0115_ | _0068_;
  assign _0126_ = _0125_ | _0061_;
  assign _0127_ = _0126_ & ~(_0124_);
  assign _0128_ = _0047_ & ~(_0127_);
  assign _0129_ = _0065_ & ~(_0128_);
  assign _0130_ = _0047_ & ~(_0126_);
  assign _0131_ = _0130_ | _0129_;
  assign _0132_ = _0123_ & ~(_0131_);
  assign i3c_cyc_o = _0132_ & ~(_0032_);
  assign i3c_stb_o = _0132_ & ~(_0077_);
  assign _0133_ = wbs_adr_i[12] | ~(wbs_adr_i[13]);
  assign _0134_ = _0133_ | _0048_;
  assign _0135_ = _0134_ | _0053_;
  assign _0136_ = _0135_ | _0061_;
  assign _0137_ = _0136_ | ~(_0047_);
  assign gpio_adr_o[13] = ~wbs_adr_i[13];
  assign _0138_ = gpio_adr_o[13] & ~(_0048_);
  assign _0139_ = _0136_ & ~(_0138_);
  assign _0140_ = _0047_ & ~(_0139_);
  assign _0141_ = _0065_ & ~(_0140_);
  assign _0142_ = _0137_ & ~(_0141_);
  assign _0143_ = _0138_ | ~(_0135_);
  assign _0144_ = _0134_ | _0068_;
  assign _0145_ = _0144_ | _0061_;
  assign _0146_ = _0145_ & ~(_0143_);
  assign _0147_ = _0047_ & ~(_0146_);
  assign _0148_ = _0065_ & ~(_0147_);
  assign _0149_ = _0047_ & ~(_0145_);
  assign _0150_ = _0149_ | _0148_;
  assign _0151_ = _0150_ | _0142_;
  assign gpio_cyc_o = wbs_cyc_i & ~(_0151_);
  assign gpio_stb_o = wbs_stb_i & ~(_0151_);
  assign _0152_ = gpio_ack_i & ~(_0151_);
  assign _0153_ = _0132_ ? i3c_ack_i : _0152_;
  assign _0154_ = _0113_ ? spi3_ack_i : _0153_;
  assign _0155_ = _0102_ ? spi2_ack_i : _0154_;
  assign _0156_ = _0089_ ? spi1_ack_i : _0155_;
  assign wbs_ack_o = _0076_ ? spi0_ack_i : _0156_;
  assign _0157_ = gpio_dat_i[0] & ~(_0151_);
  assign _0158_ = _0132_ ? i3c_dat_i[0] : _0157_;
  assign _0159_ = _0113_ ? spi3_dat_i[0] : _0158_;
  assign _0160_ = _0102_ ? spi2_dat_i[0] : _0159_;
  assign _0161_ = _0089_ ? spi1_dat_i[0] : _0160_;
  assign wbs_dat_o[0] = _0076_ ? spi0_dat_i[0] : _0161_;
  assign _0162_ = gpio_dat_i[1] & ~(_0151_);
  assign _0163_ = _0132_ ? i3c_dat_i[1] : _0162_;
  assign _0164_ = _0113_ ? spi3_dat_i[1] : _0163_;
  assign _0165_ = _0102_ ? spi2_dat_i[1] : _0164_;
  assign _0166_ = _0089_ ? spi1_dat_i[1] : _0165_;
  assign wbs_dat_o[1] = _0076_ ? spi0_dat_i[1] : _0166_;
  assign _0167_ = gpio_dat_i[2] & ~(_0151_);
  assign _0168_ = _0132_ ? i3c_dat_i[2] : _0167_;
  assign _0169_ = _0113_ ? spi3_dat_i[2] : _0168_;
  assign _0170_ = _0102_ ? spi2_dat_i[2] : _0169_;
  assign _0171_ = _0089_ ? spi1_dat_i[2] : _0170_;
  assign wbs_dat_o[2] = _0076_ ? spi0_dat_i[2] : _0171_;
  assign _0172_ = gpio_dat_i[3] & ~(_0151_);
  assign _0173_ = _0132_ ? i3c_dat_i[3] : _0172_;
  assign _0174_ = _0113_ ? spi3_dat_i[3] : _0173_;
  assign _0175_ = _0102_ ? spi2_dat_i[3] : _0174_;
  assign _0176_ = _0089_ ? spi1_dat_i[3] : _0175_;
  assign wbs_dat_o[3] = _0076_ ? spi0_dat_i[3] : _0176_;
  assign _0177_ = gpio_dat_i[4] & ~(_0151_);
  assign _0178_ = _0132_ ? i3c_dat_i[4] : _0177_;
  assign _0179_ = _0113_ ? spi3_dat_i[4] : _0178_;
  assign _0180_ = _0102_ ? spi2_dat_i[4] : _0179_;
  assign _0181_ = _0089_ ? spi1_dat_i[4] : _0180_;
  assign wbs_dat_o[4] = _0076_ ? spi0_dat_i[4] : _0181_;
  assign _0182_ = gpio_dat_i[5] & ~(_0151_);
  assign _0183_ = _0132_ ? i3c_dat_i[5] : _0182_;
  assign _0184_ = _0113_ ? spi3_dat_i[5] : _0183_;
  assign _0185_ = _0102_ ? spi2_dat_i[5] : _0184_;
  assign _0186_ = _0089_ ? spi1_dat_i[5] : _0185_;
  assign wbs_dat_o[5] = _0076_ ? spi0_dat_i[5] : _0186_;
  assign _0187_ = gpio_dat_i[6] & ~(_0151_);
  assign _0188_ = _0132_ ? i3c_dat_i[6] : _0187_;
  assign _0189_ = _0113_ ? spi3_dat_i[6] : _0188_;
  assign _0190_ = _0102_ ? spi2_dat_i[6] : _0189_;
  assign _0191_ = _0089_ ? spi1_dat_i[6] : _0190_;
  assign wbs_dat_o[6] = _0076_ ? spi0_dat_i[6] : _0191_;
  assign _0192_ = gpio_dat_i[7] & ~(_0151_);
  assign _0193_ = _0132_ ? i3c_dat_i[7] : _0192_;
  assign _0194_ = _0113_ ? spi3_dat_i[7] : _0193_;
  assign _0195_ = _0102_ ? spi2_dat_i[7] : _0194_;
  assign _0196_ = _0089_ ? spi1_dat_i[7] : _0195_;
  assign wbs_dat_o[7] = _0076_ ? spi0_dat_i[7] : _0196_;
  assign _0197_ = gpio_dat_i[8] & ~(_0151_);
  assign _0198_ = _0132_ ? i3c_dat_i[8] : _0197_;
  assign _0199_ = _0113_ ? spi3_dat_i[8] : _0198_;
  assign _0200_ = _0102_ ? spi2_dat_i[8] : _0199_;
  assign _0201_ = _0089_ ? spi1_dat_i[8] : _0200_;
  assign wbs_dat_o[8] = _0076_ ? spi0_dat_i[8] : _0201_;
  assign _0202_ = gpio_dat_i[9] & ~(_0151_);
  assign _0203_ = _0132_ ? i3c_dat_i[9] : _0202_;
  assign _0204_ = _0113_ ? spi3_dat_i[9] : _0203_;
  assign _0205_ = _0102_ ? spi2_dat_i[9] : _0204_;
  assign _0206_ = _0089_ ? spi1_dat_i[9] : _0205_;
  assign wbs_dat_o[9] = _0076_ ? spi0_dat_i[9] : _0206_;
  assign _0207_ = gpio_dat_i[10] & ~(_0151_);
  assign _0208_ = _0132_ ? i3c_dat_i[10] : _0207_;
  assign _0209_ = _0113_ ? spi3_dat_i[10] : _0208_;
  assign _0210_ = _0102_ ? spi2_dat_i[10] : _0209_;
  assign _0211_ = _0089_ ? spi1_dat_i[10] : _0210_;
  assign wbs_dat_o[10] = _0076_ ? spi0_dat_i[10] : _0211_;
  assign _0212_ = gpio_dat_i[11] & ~(_0151_);
  assign _0213_ = _0132_ ? i3c_dat_i[11] : _0212_;
  assign _0214_ = _0113_ ? spi3_dat_i[11] : _0213_;
  assign _0215_ = _0102_ ? spi2_dat_i[11] : _0214_;
  assign _0216_ = _0089_ ? spi1_dat_i[11] : _0215_;
  assign wbs_dat_o[11] = _0076_ ? spi0_dat_i[11] : _0216_;
  assign _0217_ = gpio_dat_i[12] & ~(_0151_);
  assign _0218_ = _0132_ ? i3c_dat_i[12] : _0217_;
  assign _0219_ = _0113_ ? spi3_dat_i[12] : _0218_;
  assign _0220_ = _0102_ ? spi2_dat_i[12] : _0219_;
  assign _0221_ = _0089_ ? spi1_dat_i[12] : _0220_;
  assign wbs_dat_o[12] = _0076_ ? spi0_dat_i[12] : _0221_;
  assign _0222_ = gpio_dat_i[13] & ~(_0151_);
  assign _0223_ = _0132_ ? i3c_dat_i[13] : _0222_;
  assign _0224_ = _0113_ ? spi3_dat_i[13] : _0223_;
  assign _0225_ = _0102_ ? spi2_dat_i[13] : _0224_;
  assign _0226_ = _0089_ ? spi1_dat_i[13] : _0225_;
  assign wbs_dat_o[13] = _0076_ ? spi0_dat_i[13] : _0226_;
  assign _0227_ = gpio_dat_i[14] & ~(_0151_);
  assign _0228_ = _0132_ ? i3c_dat_i[14] : _0227_;
  assign _0229_ = _0113_ ? spi3_dat_i[14] : _0228_;
  assign _0230_ = _0102_ ? spi2_dat_i[14] : _0229_;
  assign _0231_ = _0089_ ? spi1_dat_i[14] : _0230_;
  assign wbs_dat_o[14] = _0076_ ? spi0_dat_i[14] : _0231_;
  assign _0232_ = gpio_dat_i[15] & ~(_0151_);
  assign _0233_ = _0132_ ? i3c_dat_i[15] : _0232_;
  assign _0234_ = _0113_ ? spi3_dat_i[15] : _0233_;
  assign _0235_ = _0102_ ? spi2_dat_i[15] : _0234_;
  assign _0236_ = _0089_ ? spi1_dat_i[15] : _0235_;
  assign wbs_dat_o[15] = _0076_ ? spi0_dat_i[15] : _0236_;
  assign _0237_ = gpio_dat_i[16] & ~(_0151_);
  assign _0238_ = _0132_ ? i3c_dat_i[16] : _0237_;
  assign _0239_ = _0113_ ? spi3_dat_i[16] : _0238_;
  assign _0240_ = _0102_ ? spi2_dat_i[16] : _0239_;
  assign _0241_ = _0089_ ? spi1_dat_i[16] : _0240_;
  assign wbs_dat_o[16] = _0076_ ? spi0_dat_i[16] : _0241_;
  assign _0242_ = gpio_dat_i[17] & ~(_0151_);
  assign _0243_ = _0132_ ? i3c_dat_i[17] : _0242_;
  assign _0244_ = _0113_ ? spi3_dat_i[17] : _0243_;
  assign _0245_ = _0102_ ? spi2_dat_i[17] : _0244_;
  assign _0246_ = _0089_ ? spi1_dat_i[17] : _0245_;
  assign wbs_dat_o[17] = _0076_ ? spi0_dat_i[17] : _0246_;
  assign _0247_ = gpio_dat_i[18] & ~(_0151_);
  assign _0248_ = _0132_ ? i3c_dat_i[18] : _0247_;
  assign _0249_ = _0113_ ? spi3_dat_i[18] : _0248_;
  assign _0250_ = _0102_ ? spi2_dat_i[18] : _0249_;
  assign _0251_ = _0089_ ? spi1_dat_i[18] : _0250_;
  assign wbs_dat_o[18] = _0076_ ? spi0_dat_i[18] : _0251_;
  assign _0252_ = gpio_dat_i[19] & ~(_0151_);
  assign _0253_ = _0132_ ? i3c_dat_i[19] : _0252_;
  assign _0254_ = _0113_ ? spi3_dat_i[19] : _0253_;
  assign _0255_ = _0102_ ? spi2_dat_i[19] : _0254_;
  assign _0256_ = _0089_ ? spi1_dat_i[19] : _0255_;
  assign wbs_dat_o[19] = _0076_ ? spi0_dat_i[19] : _0256_;
  assign _0257_ = gpio_dat_i[20] & ~(_0151_);
  assign _0258_ = _0132_ ? i3c_dat_i[20] : _0257_;
  assign _0259_ = _0113_ ? spi3_dat_i[20] : _0258_;
  assign _0260_ = _0102_ ? spi2_dat_i[20] : _0259_;
  assign _0261_ = _0089_ ? spi1_dat_i[20] : _0260_;
  assign wbs_dat_o[20] = _0076_ ? spi0_dat_i[20] : _0261_;
  assign _0262_ = gpio_dat_i[21] & ~(_0151_);
  assign _0263_ = _0132_ ? i3c_dat_i[21] : _0262_;
  assign _0264_ = _0113_ ? spi3_dat_i[21] : _0263_;
  assign _0265_ = _0102_ ? spi2_dat_i[21] : _0264_;
  assign _0266_ = _0089_ ? spi1_dat_i[21] : _0265_;
  assign wbs_dat_o[21] = _0076_ ? spi0_dat_i[21] : _0266_;
  assign _0267_ = gpio_dat_i[22] & ~(_0151_);
  assign _0268_ = _0132_ ? i3c_dat_i[22] : _0267_;
  assign _0269_ = _0113_ ? spi3_dat_i[22] : _0268_;
  assign _0270_ = _0102_ ? spi2_dat_i[22] : _0269_;
  assign _0271_ = _0089_ ? spi1_dat_i[22] : _0270_;
  assign wbs_dat_o[22] = _0076_ ? spi0_dat_i[22] : _0271_;
  assign _0272_ = gpio_dat_i[23] & ~(_0151_);
  assign _0273_ = _0132_ ? i3c_dat_i[23] : _0272_;
  assign _0274_ = _0113_ ? spi3_dat_i[23] : _0273_;
  assign _0275_ = _0102_ ? spi2_dat_i[23] : _0274_;
  assign _0276_ = _0089_ ? spi1_dat_i[23] : _0275_;
  assign wbs_dat_o[23] = _0076_ ? spi0_dat_i[23] : _0276_;
  assign _0277_ = gpio_dat_i[24] & ~(_0151_);
  assign _0278_ = _0132_ ? i3c_dat_i[24] : _0277_;
  assign _0279_ = _0113_ ? spi3_dat_i[24] : _0278_;
  assign _0280_ = _0102_ ? spi2_dat_i[24] : _0279_;
  assign _0281_ = _0089_ ? spi1_dat_i[24] : _0280_;
  assign wbs_dat_o[24] = _0076_ ? spi0_dat_i[24] : _0281_;
  assign _0282_ = gpio_dat_i[25] & ~(_0151_);
  assign _0283_ = _0132_ ? i3c_dat_i[25] : _0282_;
  assign _0284_ = _0113_ ? spi3_dat_i[25] : _0283_;
  assign _0285_ = _0102_ ? spi2_dat_i[25] : _0284_;
  assign _0286_ = _0089_ ? spi1_dat_i[25] : _0285_;
  assign wbs_dat_o[25] = _0076_ ? spi0_dat_i[25] : _0286_;
  assign _0287_ = gpio_dat_i[26] & ~(_0151_);
  assign _0288_ = _0132_ ? i3c_dat_i[26] : _0287_;
  assign _0289_ = _0113_ ? spi3_dat_i[26] : _0288_;
  assign _0290_ = _0102_ ? spi2_dat_i[26] : _0289_;
  assign _0291_ = _0089_ ? spi1_dat_i[26] : _0290_;
  assign wbs_dat_o[26] = _0076_ ? spi0_dat_i[26] : _0291_;
  assign _0292_ = gpio_dat_i[27] & ~(_0151_);
  assign _0293_ = _0132_ ? i3c_dat_i[27] : _0292_;
  assign _0294_ = _0113_ ? spi3_dat_i[27] : _0293_;
  assign _0295_ = _0102_ ? spi2_dat_i[27] : _0294_;
  assign _0296_ = _0089_ ? spi1_dat_i[27] : _0295_;
  assign wbs_dat_o[27] = _0076_ ? spi0_dat_i[27] : _0296_;
  assign _0297_ = gpio_dat_i[28] & ~(_0151_);
  assign _0298_ = _0132_ ? i3c_dat_i[28] : _0297_;
  assign _0299_ = _0113_ ? spi3_dat_i[28] : _0298_;
  assign _0300_ = _0102_ ? spi2_dat_i[28] : _0299_;
  assign _0301_ = _0089_ ? spi1_dat_i[28] : _0300_;
  assign wbs_dat_o[28] = _0076_ ? spi0_dat_i[28] : _0301_;
  assign _0302_ = gpio_dat_i[29] & ~(_0151_);
  assign _0303_ = _0132_ ? i3c_dat_i[29] : _0302_;
  assign _0304_ = _0113_ ? spi3_dat_i[29] : _0303_;
  assign _0305_ = _0102_ ? spi2_dat_i[29] : _0304_;
  assign _0306_ = _0089_ ? spi1_dat_i[29] : _0305_;
  assign wbs_dat_o[29] = _0076_ ? spi0_dat_i[29] : _0306_;
  assign _0307_ = gpio_dat_i[30] & ~(_0151_);
  assign _0308_ = _0132_ ? i3c_dat_i[30] : _0307_;
  assign _0309_ = _0113_ ? spi3_dat_i[30] : _0308_;
  assign _0310_ = _0102_ ? spi2_dat_i[30] : _0309_;
  assign _0311_ = _0089_ ? spi1_dat_i[30] : _0310_;
  assign wbs_dat_o[30] = _0076_ ? spi0_dat_i[30] : _0311_;
  assign _0312_ = gpio_dat_i[31] & ~(_0151_);
  assign _0313_ = _0132_ ? i3c_dat_i[31] : _0312_;
  assign _0314_ = _0113_ ? spi3_dat_i[31] : _0313_;
  assign _0315_ = _0102_ ? spi2_dat_i[31] : _0314_;
  assign _0316_ = _0089_ ? spi1_dat_i[31] : _0315_;
  assign wbs_dat_o[31] = _0076_ ? spi0_dat_i[31] : _0316_;
  assign i3c_adr_o[12] = ~wbs_adr_i[12];
  assign spi1_adr_o[8] = ~wbs_adr_i[8];
  assign spi2_adr_o[9] = ~wbs_adr_i[9];
  assign spi0_adr_o[28] = ~wbs_adr_i[28];
  assign spi1_adr_o[9] = ~(_0090_ & _0052_);
  assign _0317_ = ~(wbs_adr_i[9] | wbs_adr_i[8]);
  assign spi1_adr_o[10] = _0317_ ^ wbs_adr_i[10];
  assign _0318_ = _0317_ & ~(wbs_adr_i[10]);
  assign spi1_adr_o[11] = _0318_ ^ wbs_adr_i[11];
  assign _0319_ = ~(_0317_ | _0051_);
  assign _0320_ = ~(_0319_ | _0051_);
  assign spi1_adr_o[12] = _0320_ ^ wbs_adr_i[12];
  assign _0321_ = _0320_ & ~(wbs_adr_i[12]);
  assign spi1_adr_o[13] = _0321_ ^ wbs_adr_i[13];
  assign _0322_ = ~(wbs_adr_i[13] | wbs_adr_i[12]);
  assign _0323_ = ~_0049_;
  assign _0324_ = _0323_ & ~(_0320_);
  assign _0325_ = _0322_ & ~(_0324_);
  assign spi1_adr_o[14] = _0325_ ^ wbs_adr_i[14];
  assign _0326_ = _0325_ & ~(wbs_adr_i[14]);
  assign spi1_adr_o[15] = _0326_ ^ wbs_adr_i[15];
  assign _0327_ = ~(wbs_adr_i[15] | wbs_adr_i[14]);
  assign _0328_ = ~(_0322_ | _0048_);
  assign _0329_ = _0327_ & ~(_0328_);
  assign _0330_ = _0050_ & ~(_0320_);
  assign _0331_ = _0329_ & ~(_0330_);
  assign spi1_adr_o[16] = _0331_ ^ wbs_adr_i[16];
  assign _0332_ = _0331_ & ~(wbs_adr_i[16]);
  assign spi1_adr_o[17] = _0332_ ^ wbs_adr_i[17];
  assign _0333_ = ~(wbs_adr_i[16] | wbs_adr_i[17]);
  assign _0334_ = ~_0044_;
  assign _0335_ = _0334_ & ~(_0331_);
  assign _0336_ = _0333_ & ~(_0335_);
  assign spi1_adr_o[18] = _0336_ ^ wbs_adr_i[18];
  assign _0337_ = _0336_ & ~(wbs_adr_i[18]);
  assign spi1_adr_o[19] = _0337_ ^ wbs_adr_i[19];
  assign _0338_ = _0043_ & ~(_0333_);
  assign _0339_ = _0043_ & ~(_0338_);
  assign _0340_ = ~_0045_;
  assign _0341_ = _0340_ & ~(_0331_);
  assign _0342_ = _0339_ & ~(_0341_);
  assign spi1_adr_o[20] = _0342_ ^ wbs_adr_i[20];
  assign _0343_ = _0342_ & ~(wbs_adr_i[20]);
  assign spi1_adr_o[21] = _0343_ ^ wbs_adr_i[21];
  assign _0344_ = ~wbs_adr_i[22];
  assign _0345_ = ~(wbs_adr_i[21] | wbs_adr_i[20]);
  assign _0346_ = ~_0041_;
  assign _0347_ = _0346_ & ~(_0342_);
  assign _0348_ = _0347_ | ~(_0345_);
  assign spi1_adr_o[22] = _0348_ ^ _0344_;
  assign _0349_ = _0344_ & ~(_0348_);
  assign spi1_adr_o[23] = _0349_ ^ wbs_adr_i[23];
  assign _0350_ = ~(wbs_adr_i[22] | wbs_adr_i[23]);
  assign _0351_ = ~(_0345_ | _0040_);
  assign _0352_ = _0350_ & ~(_0351_);
  assign _0353_ = ~_0042_;
  assign _0354_ = _0353_ & ~(_0339_);
  assign _0355_ = _0352_ & ~(_0354_);
  assign _0356_ = ~_0046_;
  assign _0357_ = _0356_ & ~(_0331_);
  assign _0358_ = _0355_ & ~(_0357_);
  assign spi1_adr_o[24] = _0358_ ^ wbs_adr_i[24];
  assign _0359_ = _0358_ & ~(wbs_adr_i[24]);
  assign spi1_adr_o[25] = _0359_ ^ wbs_adr_i[25];
  assign _0360_ = ~wbs_adr_i[26];
  assign _0361_ = ~(wbs_adr_i[24] | wbs_adr_i[25]);
  assign _0362_ = ~_0037_;
  assign _0363_ = _0362_ & ~(_0358_);
  assign _0364_ = _0363_ | ~(_0361_);
  assign spi1_adr_o[26] = _0364_ ^ _0360_;
  assign _0365_ = _0360_ & ~(_0364_);
  assign spi1_adr_o[27] = _0365_ ^ wbs_adr_i[27];
  assign _0366_ = ~(wbs_adr_i[27] | wbs_adr_i[26]);
  assign _0367_ = ~(_0361_ | _0036_);
  assign _0368_ = _0366_ & ~(_0367_);
  assign _0369_ = ~_0038_;
  assign _0370_ = _0369_ & ~(_0358_);
  assign _0371_ = _0368_ & ~(_0370_);
  assign spi1_adr_o[28] = _0371_ ^ spi0_adr_o[28];
  assign _0372_ = wbs_adr_i[28] & ~(_0371_);
  assign spi1_adr_o[29] = _0372_ ^ wbs_adr_i[29];
  assign _0373_ = ~wbs_adr_i[30];
  assign _0374_ = ~_0034_;
  assign _0375_ = _0374_ & ~(_0371_);
  assign spi1_adr_o[30] = _0375_ ^ _0373_;
  assign _0376_ = _0373_ & ~(_0375_);
  assign spi1_adr_o[31] = _0376_ ^ wbs_adr_i[31];
  assign gpio_adr_o[14] = ~(wbs_adr_i[14] ^ wbs_adr_i[13]);
  assign _0377_ = ~wbs_adr_i[15];
  assign _0000_ = wbs_adr_i[14] | wbs_adr_i[13];
  assign gpio_adr_o[15] = _0000_ ^ _0377_;
  assign _0378_ = _0377_ & ~(_0000_);
  assign gpio_adr_o[16] = _0378_ ^ wbs_adr_i[16];
  assign _0379_ = ~wbs_adr_i[17];
  assign _0380_ = wbs_adr_i[16] | wbs_adr_i[15];
  assign _0381_ = _0000_ & ~(_0380_);
  assign _0382_ = _0381_ | _0380_;
  assign gpio_adr_o[17] = _0382_ ^ _0379_;
  assign _0383_ = _0379_ & ~(_0382_);
  assign gpio_adr_o[18] = _0383_ ^ wbs_adr_i[18];
  assign _0384_ = wbs_adr_i[18] | wbs_adr_i[17];
  assign _0385_ = ~(wbs_adr_i[18] | wbs_adr_i[17]);
  assign _0386_ = _0385_ & _0382_;
  assign _0387_ = ~(_0386_ | _0384_);
  assign gpio_adr_o[19] = _0387_ ^ wbs_adr_i[19];
  assign _0388_ = _0387_ & ~(wbs_adr_i[19]);
  assign gpio_adr_o[20] = _0388_ ^ wbs_adr_i[20];
  assign _0389_ = ~wbs_adr_i[21];
  assign _0390_ = wbs_adr_i[20] | wbs_adr_i[19];
  assign _0391_ = _0384_ & ~(_0390_);
  assign _0392_ = _0391_ | _0390_;
  assign _0393_ = _0385_ & ~(_0390_);
  assign _0394_ = _0393_ & _0382_;
  assign _0395_ = _0394_ | _0392_;
  assign gpio_adr_o[21] = _0395_ ^ _0389_;
  assign _0396_ = _0389_ & ~(_0395_);
  assign gpio_adr_o[22] = _0396_ ^ wbs_adr_i[22];
  assign _0397_ = wbs_adr_i[22] | wbs_adr_i[21];
  assign _0398_ = ~(wbs_adr_i[22] | wbs_adr_i[21]);
  assign _0399_ = _0398_ & _0395_;
  assign _0400_ = ~(_0399_ | _0397_);
  assign gpio_adr_o[23] = _0400_ ^ wbs_adr_i[23];
  assign _0401_ = _0400_ & ~(wbs_adr_i[23]);
  assign gpio_adr_o[24] = _0401_ ^ wbs_adr_i[24];
  assign _0402_ = ~wbs_adr_i[25];
  assign _0403_ = wbs_adr_i[24] | wbs_adr_i[23];
  assign _0404_ = _0397_ & ~(_0403_);
  assign _0405_ = _0404_ | _0403_;
  assign _0406_ = _0403_ | ~(_0398_);
  assign _0407_ = _0395_ & ~(_0406_);
  assign _0408_ = _0407_ | _0405_;
  assign gpio_adr_o[25] = _0408_ ^ _0402_;
  assign _0409_ = _0402_ & ~(_0408_);
  assign gpio_adr_o[26] = _0409_ ^ wbs_adr_i[26];
  assign _0410_ = ~wbs_adr_i[27];
  assign _0411_ = wbs_adr_i[26] | wbs_adr_i[25];
  assign _0412_ = ~(wbs_adr_i[26] | wbs_adr_i[25]);
  assign _0413_ = _0412_ & _0408_;
  assign _0414_ = _0413_ | _0411_;
  assign gpio_adr_o[27] = _0414_ ^ _0410_;
  assign _0415_ = _0410_ & ~(_0414_);
  assign gpio_adr_o[28] = _0415_ ^ spi0_adr_o[28];
  assign _0416_ = ~wbs_adr_i[29];
  assign _0417_ = ~(wbs_adr_i[28] & wbs_adr_i[27]);
  assign _0418_ = wbs_adr_i[27] | ~(wbs_adr_i[28]);
  assign _0419_ = _0411_ & ~(_0418_);
  assign _0420_ = _0417_ & ~(_0419_);
  assign _0421_ = _0418_ | ~(_0412_);
  assign _0422_ = _0405_ & ~(_0421_);
  assign _0423_ = _0420_ & ~(_0422_);
  assign _0424_ = _0421_ | _0406_;
  assign _0425_ = _0395_ & ~(_0424_);
  assign _0426_ = _0423_ & ~(_0425_);
  assign gpio_adr_o[29] = _0426_ ^ _0416_;
  assign _0427_ = wbs_adr_i[29] & ~(_0426_);
  assign gpio_adr_o[30] = _0427_ ^ _0373_;
  assign _0428_ = wbs_adr_i[29] & ~(wbs_adr_i[30]);
  assign _0429_ = _0428_ & ~(_0426_);
  assign _0430_ = _0373_ & ~(_0429_);
  assign gpio_adr_o[31] = _0430_ ^ wbs_adr_i[31];
  assign spi3_adr_o[9] = ~(_0078_ & _0067_);
  assign spi3_adr_o[10] = _0090_ ^ wbs_adr_i[10];
  assign _0431_ = _0090_ & ~(wbs_adr_i[10]);
  assign spi3_adr_o[11] = _0431_ ^ wbs_adr_i[11];
  assign _0432_ = _0091_ & ~(_0051_);
  assign spi3_adr_o[12] = _0432_ ^ wbs_adr_i[12];
  assign _0433_ = _0432_ & ~(wbs_adr_i[12]);
  assign spi3_adr_o[13] = _0433_ ^ wbs_adr_i[13];
  assign _0434_ = _0323_ & ~(_0432_);
  assign _0435_ = _0322_ & ~(_0434_);
  assign spi3_adr_o[14] = _0435_ ^ wbs_adr_i[14];
  assign _0436_ = _0435_ & ~(wbs_adr_i[14]);
  assign spi3_adr_o[15] = _0436_ ^ wbs_adr_i[15];
  assign _0437_ = _0050_ & ~(_0432_);
  assign _0438_ = _0329_ & ~(_0437_);
  assign spi3_adr_o[16] = _0438_ ^ wbs_adr_i[16];
  assign _0439_ = _0438_ & ~(wbs_adr_i[16]);
  assign spi3_adr_o[17] = _0439_ ^ wbs_adr_i[17];
  assign _0440_ = _0334_ & ~(_0438_);
  assign _0441_ = _0333_ & ~(_0440_);
  assign spi3_adr_o[18] = _0441_ ^ wbs_adr_i[18];
  assign _0442_ = _0441_ & ~(wbs_adr_i[18]);
  assign spi3_adr_o[19] = _0442_ ^ wbs_adr_i[19];
  assign _0443_ = _0340_ & ~(_0438_);
  assign _0444_ = _0339_ & ~(_0443_);
  assign spi3_adr_o[20] = _0444_ ^ wbs_adr_i[20];
  assign _0445_ = _0444_ & ~(wbs_adr_i[20]);
  assign spi3_adr_o[21] = _0445_ ^ wbs_adr_i[21];
  assign _0446_ = _0346_ & ~(_0444_);
  assign _0447_ = _0446_ | ~(_0345_);
  assign spi3_adr_o[22] = _0447_ ^ _0344_;
  assign _0448_ = _0344_ & ~(_0447_);
  assign spi3_adr_o[23] = _0448_ ^ wbs_adr_i[23];
  assign _0449_ = _0356_ & ~(_0438_);
  assign _0450_ = _0355_ & ~(_0449_);
  assign spi3_adr_o[24] = _0450_ ^ wbs_adr_i[24];
  assign _0451_ = _0450_ & ~(wbs_adr_i[24]);
  assign spi3_adr_o[25] = _0451_ ^ wbs_adr_i[25];
  assign _0452_ = _0362_ & ~(_0450_);
  assign _0453_ = _0452_ | ~(_0361_);
  assign spi3_adr_o[26] = _0453_ ^ _0360_;
  assign _0454_ = _0360_ & ~(_0453_);
  assign spi3_adr_o[27] = _0454_ ^ wbs_adr_i[27];
  assign _0455_ = _0369_ & ~(_0450_);
  assign _0456_ = _0368_ & ~(_0455_);
  assign spi3_adr_o[28] = _0456_ ^ spi0_adr_o[28];
  assign _0457_ = wbs_adr_i[28] & ~(_0456_);
  assign spi3_adr_o[29] = _0457_ ^ wbs_adr_i[29];
  assign _0458_ = _0374_ & ~(_0456_);
  assign spi3_adr_o[30] = _0458_ ^ _0373_;
  assign _0459_ = _0373_ & ~(_0458_);
  assign spi3_adr_o[31] = _0459_ ^ wbs_adr_i[31];
  assign spi0_adr_o[29] = wbs_adr_i[29] ^ wbs_adr_i[28];
  assign spi0_adr_o[30] = _0034_ ^ wbs_adr_i[30];
  assign _0460_ = _0034_ & ~(wbs_adr_i[30]);
  assign spi0_adr_o[31] = _0460_ ^ wbs_adr_i[31];
  assign i3c_adr_o[13] = ~(wbs_adr_i[13] ^ wbs_adr_i[12]);
  assign i3c_adr_o[14] = _0322_ ^ wbs_adr_i[14];
  assign _0461_ = _0322_ & ~(wbs_adr_i[14]);
  assign i3c_adr_o[15] = _0461_ ^ wbs_adr_i[15];
  assign i3c_adr_o[16] = _0329_ ^ wbs_adr_i[16];
  assign _0462_ = _0329_ & ~(wbs_adr_i[16]);
  assign i3c_adr_o[17] = _0462_ ^ wbs_adr_i[17];
  assign _0463_ = _0334_ & ~(_0329_);
  assign _0464_ = _0333_ & ~(_0463_);
  assign i3c_adr_o[18] = _0464_ ^ wbs_adr_i[18];
  assign _0465_ = _0464_ & ~(wbs_adr_i[18]);
  assign i3c_adr_o[19] = _0465_ ^ wbs_adr_i[19];
  assign _0466_ = _0340_ & ~(_0329_);
  assign _0467_ = _0339_ & ~(_0466_);
  assign i3c_adr_o[20] = _0467_ ^ wbs_adr_i[20];
  assign _0468_ = _0467_ & ~(wbs_adr_i[20]);
  assign i3c_adr_o[21] = _0468_ ^ wbs_adr_i[21];
  assign _0469_ = _0346_ & ~(_0467_);
  assign _0470_ = _0345_ & ~(_0469_);
  assign i3c_adr_o[22] = _0470_ ^ wbs_adr_i[22];
  assign _0471_ = _0470_ & ~(wbs_adr_i[22]);
  assign i3c_adr_o[23] = _0471_ ^ wbs_adr_i[23];
  assign _0472_ = _0353_ & ~(_0467_);
  assign _0473_ = _0352_ & ~(_0472_);
  assign i3c_adr_o[24] = _0473_ ^ wbs_adr_i[24];
  assign _0474_ = _0473_ & ~(wbs_adr_i[24]);
  assign i3c_adr_o[25] = _0474_ ^ wbs_adr_i[25];
  assign _0475_ = _0362_ & ~(_0473_);
  assign _0476_ = _0475_ | ~(_0361_);
  assign i3c_adr_o[26] = _0476_ ^ _0360_;
  assign _0477_ = _0360_ & ~(_0476_);
  assign i3c_adr_o[27] = _0477_ ^ wbs_adr_i[27];
  assign _0478_ = _0369_ & ~(_0352_);
  assign _0479_ = _0368_ & ~(_0478_);
  assign _0480_ = ~(_0042_ | _0038_);
  assign _0481_ = _0480_ & ~(_0467_);
  assign _0482_ = _0479_ & ~(_0481_);
  assign i3c_adr_o[28] = _0482_ ^ spi0_adr_o[28];
  assign _0483_ = wbs_adr_i[28] & ~(_0482_);
  assign i3c_adr_o[29] = _0483_ ^ wbs_adr_i[29];
  assign _0484_ = _0374_ & ~(_0482_);
  assign i3c_adr_o[30] = _0484_ ^ _0373_;
  assign _0485_ = _0373_ & ~(_0484_);
  assign i3c_adr_o[31] = _0485_ ^ wbs_adr_i[31];
  assign spi2_adr_o[10] = ~(wbs_adr_i[10] ^ wbs_adr_i[9]);
  assign _0486_ = ~wbs_adr_i[11];
  assign _0487_ = wbs_adr_i[10] | wbs_adr_i[9];
  assign spi2_adr_o[11] = _0487_ ^ _0486_;
  assign _0488_ = _0486_ & ~(_0487_);
  assign spi2_adr_o[12] = _0488_ ^ wbs_adr_i[12];
  assign _0489_ = wbs_adr_i[12] | wbs_adr_i[11];
  assign _0490_ = _0487_ & ~(_0489_);
  assign _0491_ = _0490_ | _0489_;
  assign spi2_adr_o[13] = _0491_ ^ gpio_adr_o[13];
  assign _0492_ = gpio_adr_o[13] & ~(_0491_);
  assign spi2_adr_o[14] = _0492_ ^ wbs_adr_i[14];
  assign _0001_ = _0491_ & ~(_0000_);
  assign _0002_ = ~(_0001_ | _0000_);
  assign spi2_adr_o[15] = _0002_ ^ wbs_adr_i[15];
  assign _0003_ = _0002_ & ~(wbs_adr_i[15]);
  assign spi2_adr_o[16] = _0003_ ^ wbs_adr_i[16];
  assign _0004_ = _0380_ | _0000_;
  assign _0005_ = _0491_ & ~(_0004_);
  assign _0006_ = ~(_0005_ | _0382_);
  assign spi2_adr_o[17] = _0006_ ^ wbs_adr_i[17];
  assign _0007_ = _0006_ & ~(wbs_adr_i[17]);
  assign spi2_adr_o[18] = _0007_ ^ wbs_adr_i[18];
  assign _0008_ = _0385_ & ~(_0006_);
  assign _0009_ = ~(_0008_ | _0384_);
  assign spi2_adr_o[19] = _0009_ ^ wbs_adr_i[19];
  assign _0010_ = _0009_ & ~(wbs_adr_i[19]);
  assign spi2_adr_o[20] = _0010_ ^ wbs_adr_i[20];
  assign _0011_ = _0393_ & ~(_0006_);
  assign _0012_ = ~(_0011_ | _0392_);
  assign spi2_adr_o[21] = _0012_ ^ wbs_adr_i[21];
  assign _0013_ = _0012_ & ~(wbs_adr_i[21]);
  assign spi2_adr_o[22] = _0013_ ^ wbs_adr_i[22];
  assign _0014_ = ~wbs_adr_i[23];
  assign _0015_ = _0398_ & ~(_0012_);
  assign _0016_ = _0015_ | _0397_;
  assign spi2_adr_o[23] = _0016_ ^ _0014_;
  assign _0017_ = _0014_ & ~(_0016_);
  assign spi2_adr_o[24] = _0017_ ^ wbs_adr_i[24];
  assign _0018_ = _0392_ & ~(_0406_);
  assign _0019_ = ~(_0018_ | _0405_);
  assign _0020_ = _0406_ | ~(_0393_);
  assign _0021_ = ~(_0020_ | _0006_);
  assign _0022_ = _0019_ & ~(_0021_);
  assign spi2_adr_o[25] = _0022_ ^ wbs_adr_i[25];
  assign _0023_ = _0022_ & ~(wbs_adr_i[25]);
  assign spi2_adr_o[26] = _0023_ ^ wbs_adr_i[26];
  assign _0024_ = _0412_ & ~(_0022_);
  assign _0025_ = _0024_ | _0411_;
  assign spi2_adr_o[27] = _0025_ ^ _0410_;
  assign _0026_ = _0410_ & ~(_0025_);
  assign spi2_adr_o[28] = _0026_ ^ spi0_adr_o[28];
  assign _0027_ = ~(_0022_ | _0421_);
  assign _0028_ = _0420_ & ~(_0027_);
  assign spi2_adr_o[29] = _0028_ ^ _0416_;
  assign _0029_ = wbs_adr_i[29] & ~(_0028_);
  assign spi2_adr_o[30] = _0029_ ^ _0373_;
  assign _0030_ = _0428_ & ~(_0028_);
  assign _0031_ = _0373_ & ~(_0030_);
  assign spi2_adr_o[31] = _0031_ ^ wbs_adr_i[31];
  assign gpio_adr_o[12:0] = wbs_adr_i[12:0];
  assign gpio_dat_o = wbs_dat_i;
  assign gpio_sel_o = wbs_sel_i;
  assign gpio_we_o = wbs_we_i;
  assign i3c_adr_o[11:0] = wbs_adr_i[11:0];
  assign i3c_dat_o = wbs_dat_i;
  assign i3c_sel_o = wbs_sel_i;
  assign i3c_we_o = wbs_we_i;
  assign spi0_adr_o[27:0] = wbs_adr_i[27:0];
  assign spi0_dat_o = wbs_dat_i;
  assign spi0_sel_o = wbs_sel_i;
  assign spi0_we_o = wbs_we_i;
  assign spi1_adr_o[7:0] = wbs_adr_i[7:0];
  assign spi1_dat_o = wbs_dat_i;
  assign spi1_sel_o = wbs_sel_i;
  assign spi1_we_o = wbs_we_i;
  assign spi2_adr_o[8:0] = wbs_adr_i[8:0];
  assign spi2_dat_o = wbs_dat_i;
  assign spi2_sel_o = wbs_sel_i;
  assign spi2_we_o = wbs_we_i;
  assign spi3_adr_o[8:0] = { spi1_adr_o[8], wbs_adr_i[7:0] };
  assign spi3_dat_o = wbs_dat_i;
  assign spi3_sel_o = wbs_sel_i;
  assign spi3_we_o = wbs_we_i;
endmodule
